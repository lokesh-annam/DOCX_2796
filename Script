#!/usr/bin/ksh
LOG=/tmp/$(hostname)_`date +%d%m%y%h`.log
exec>> $LOG 2>&1

echo
echo "================================================================================================================"
echo " ++++++++++++++++++Date+++++++++++++++++  "
date
echo "================================================================================================================"
echo " +++++++++++++++++Hostname++++++++++++++  "
hostname
echo "================================================================================================================"
echo " +++++++++++++++++oslevel+++++++++++++++ "
oslevel -s
echo "================================================================================================================"
echo " ++++++++Users configured at OS end ++++++ "
cat /etc/passwd
echo "================================================================================================================"
echo " +++++++++++++++++IP at Server+++++++++++ "
ifconfig -a

echo ======================= CPU and Memory details ===================

lparstat -i

echo "================================================================================================================"

lparstat -i |grep  "Desired Memory";lparstat -i |grep -w "Entitled Capacity "

echo ======================= Physical Server Details ===================

prtconf|head

echo "================================================================================================================"
echo " ===========IP configured =============== "

for i in 0 1 2 3 4; do echo en$i; lsattr -El en$i; echo -----------------; done

echo "================================================================================================================"
echo " +++++++++++Gateway Info+++++++++++ "
netstat -nr
echo "================================================================================================================"

echo " +++++++++++Disk information +++++++++++ "

lspv |awk {'print $1'} |while read i; do  lspv |grep -w $i; bootinfo -s $i; echo ----------------; done

echo " =====================logs completed ====================== "




#!/bin/sh
for i in `more userlist.txt `
do
echo $i"Techm@123" | passwd –-stdin "$i"
echo; echo "User $username’s password changed!"
done

showmount -e 10.189.110.23

showmount -e 10.189.110.22

showmount -e 10.189.115.148

oslevel -s
df -gt
ifconfig -a |grep -i inet


for i in `cat ip.txt`;do echo "========$i=========";ssh -t -q  addmitam@$i "sudo chuser unsuccessful_login_count=0 addmitam; sudo echo addmitam:Add@1234|sudo chpasswd;sudo pwdadm -c addmitam";done
done
for i in `cat ip.txt`;do echo "========$i=========";ssh -t -q  addmitam@$i "sudo lsuser addmitam;sudo ifconfig -a |grep -i inet;sudo date";done >> /tmp/output_unsuccessful_login_cout_from_SOCVA.txt
for i in `cat ip.txt`;do echo "========$i=========";ssh -t -q  addmitam@$i "sudo id SOCVA";done


for i in `cat ip.txt`;do echo "========$i=========";ssh -t -q  addmitam@$i "sudo df -gt;sudo ifconfig -a |grep -i inet;sudo oslevel -s";done

==============================================================================================================================================================================
date
uptime
hostname
cat  /etc/passwd
cat  /etc/group

oslevel -s
date
uptime
netstat -rn
df -gt
df -gt | wc -l
netstat -rn | wc -l
lspv
lsvg -p rootvg
lsvg -l rootvg
lspv | wc -l
lsvg -p rootvg | wc -l
lsvg -l rootvg | wc -l
ifconfig -a

lspv
lsvg -p rootvg
lsvg -l rootvg 
oslevel -s
entstat -d en0
lspv
bootinfo -s hdisk0
errpt
errclear 0
lsdev -Cc disk
lsvg -p rootvg
lsvg -l rootvg
lspv -l hdisk0
lspv -l hdisk1
bootinfo -b
lssrc -a -h $HOSTNAME
cat /etc/inittab
cat /etc/filesystems
cat /etc/hosts
which java
java -version
ls -ltr /usr/java5/jre/bin/java
ps -ef|grep java
ps -ef|grep http
bootlist -m normal -o
lppchk -v
lppchk -v -m3
oslevel
oslevel -r
oslevel -rq
emgr -l
lsdev
prtconf
lsattr -El ent0


==============================================================================================================================================================================
for i in `find . -type f -mtime -5 -exec echo {} +`; do echo $i; chmod 644 $i; done &

for i in `find /data/users/polling/GST_ERROR_CORP/ -type f -mtime -1 -exec echo {} +`; do echo $i; chmod 777 $i; done &

for i in `ls -lrt |grep -v "dr"|awk '{ if ($6 == "Feb") print $9 }'`; do echo $i; cp -pr $i /data/BRANCHES/98888/data/BRANCHES/98888/AccountStatement/MT940/MT940_Processed/; done &

Find command:-(https://geekflare.com/linux-find-commands/):-

find /home -name tecmint.txt

Files only
find ./ -type f -name "qa*"  (Where f means files.For dirs use -d)

To Search find all 30MB files:-

find / -size 30M  (C-bytes, K-kbs, M-mbs, G-gbs)
find / -size -30M less than 30M,use + for graterthan 30M files.)
find / -size +100M -size -200M   (B/W files.)
find / -type f -size +20k   (we can use -d for directories)
find /var/www/html -perm 644 (perm wise)

find /home -mtime -10 (lst 10 days files.use + to get except last 10 days files.)

for i in `find /data/users/polling/GST_ERROR_CORP/ -type f -mtime -1 -exec echo {} +`; do echo $i; chmod 777 $i; done &

/data/BRANCHES/98888/data/BRANCHES/98888/AccountStatement/MT940/MT940_Processed

==============================================================================================================================================================================
sftp -P 2022 mercuser@gstsftp.sbi.co.in -- U5er@G$t  Merchant user   GST/IRCTC scripts
sftp -P 2022 corpuser@gstsftp.sbi.co.in              Corporate user  GST scripts
sftp -P 2022 colluser@gstsftp.sbi.co.in --  	      Collect user   GST scripts
sftp -P 2022 retauser@gstsftp.sbi.co.in               retail user    GST scripts

sftp -oMACs=hmac-sha2-256 -P 2201 SBCOLLECT_MSMB_5697646@sfg.onlinesbi.com  Sbi@12345 --upi --- jeeva/gowrisankar
sftp -oMACs=hmac-sha2-256 -P 2201 SBCOLLECT_MSMB_5697646@10.248.56.18

cd /SBI_UPI/SBCOLLECT_MSMB_5697646/Download
lcd /sysmonlogs/SBCOLLECT

/data/sftp_files/home/SBCUPI/MIS/Files_Incoming


/SBI_UPI/SBCOLLECT_MSMB_5697646/Upload


/data/REPORTS_DATA/OAO/INCOMING
sftp -oMACs=hmac-sha2-256 -P 2201 meity_data@sfg.onlinesbi.com  Inb@Mob@35
cd meity_data/Meity
sftp -P 2201 meity_data@10.248.56.18

sftp -P 9293 -oKexAlgorithms=diffie-hellman-group1-sha1 -o identityfile=/home/SBINH2HINB/.ssh/id_rsa SBINH2HINB@192.168.179.233:/ -- sbin@12345

sftp -P 2201 senthil_tm@sfg.onlinesbi.com --- UPI refund (Merchant) Lincy/jayvignesh
Password1@3
cd /SBI_UPI/SBIMOPS/INBdownload            /Worldline/ONLINESBI/Output
cd /SBI_UPI/SBIMOPS/INBUpload
lcd /sysmonlogs/Merchant_Team/UPI_PY
lcd /sysmonlogs/Merchant_Team/UPI_REF


sftp -oMACs=hmac-sha2-256 -P 2201 sanket_g@10.189.32.239
sftp -P 2022 anywuser@gstsftp.sbi.co.in U5er@G$t 10.189.146.6/10.209.91.6

Jan Feb March April 2018 logs files 10.189.146.10 

sftp -c 3des-cbc sbibank@103.225.112.95 

sftp -oPort=2200 fdd99fd46e884189892ac8e311130bac@10.0.34.38     Pa55@123 -- 10.189.39.76

                           Scripts DC & DR      
-----------------------------------------------------------------------
10.189.152.6                 MT940,trickle files move, /opt/sbi/gateway/sgate/conf/corporate/xml in root          Composite bulk3P under bvadmin
                                                                                Trickle feed, Retail trickle, DWP & GSTReport under trickle
                    
10.189.147.6                 Branch script under wac (Vimal)
                                                                                
10.189.128.13 & 14           neml script under wac

10.189.127.28                Wac scripts & one script in root
                    
10.189.146.30                Loyalty files script under fdmwac
                    
10.189.153.134               Meity script under oracle
                    
10.189.146.6                 Mob GST script under root (SBA & SBF)
                    
10.189.151.14                GST Scripts under root
                                                                                atmpinppk script under atmpinppk
	
10.189.39.81/10.209.69.232   sh -x /scripts/oaokycpush_sftp_updated.sh /scripts/oaokycpull_sftp_new.sh	
-----------------------------------------------------------------------
10.209.98.6                  MT940 in root
& 93.6 (Vimal)               Composite bulk3P & Acc Stmt under bvadmin          Branch under wac (Vimal)
-----------------------------------------------------------------------

10.189.151.6    /home/uxmusr/100418/Vistaar_Regulator/ (CUG)

-----------------------------------------------------------------------
OAO Scripts

10.189.39.81/10.209.69.232  /scripts/oaokycpush_sftp_updated.sh  ( root) /
chinnads user for (sftp path IP 10.189.147.6/10.209.93.6 Other app server)

------------------------------------------------------------------------

for i in `ls -lrt |grep "Feb"|awk '{print $9}'`; do echo $i; mv $i /log_archive_2019/Retail_98888/; done &
for i in `find . -type f -name "*ret*.log*280120*"`; do echo $i; bzcat $i |grep "ORA-" >> /mksysb/logs/retail28.log; done



find /data/downloads/corporate/report/GST_Statement/ -type f -mtime +5 -exec mv '{}' /data/downloads/corporate/report/GST_Statement_bkp/ \;





cd /switchdump/twduserhome/CBSSBI/data/BRANCHES/98888/AccountStatement/MT940/Pending;

for i in `ls -ltr | grep -i "cps9313228"| awk '{print $9}'`; do ls -ltr $i; mv $i /data/BRANCHES/98888/AccountStatement/MT940/Pending/.; done &

for i in `ls -ltr | grep -i "May 13"| awk '{print $9}'`; do ls -ltr $i; mv $i /data/BRANCHES/98888/AccountStatement/MT940/Pending/.; done &

for i in `ls -ltr | grep -i "May 14"| awk '{print $9}'`; do ls -ltr $i; mv $i /data/BRANCHES/98888/AccountStatement/MT940/Pending/.; done &

cd /data/BRANCHES/98888/data/BRANCHES/98888/AccountStatement/MT940/;         ls -ltr MT940_Processed




3031671593





==============================================================================================================================================================================
#!/usr/bin/ksh
LOG=/tmp/$(hostname)_`date +%d%m%y%h`.log
exec.>> $LOG 2>&1

echo
echo "================================================================================================================"
echo " ++++++++++++++++++Date+++++++++++++++++  "
date
echo "================================================================================================================"
echo " +++++++++++++++++Hostname++++++++++++++  "
hostname
echo "================================================================================================================"
echo " +++++++++++++++++oslevel+++++++++++++++ "
oslevel -s
echo "================================================================================================================"
echo " ++++++++Users configured at OS end ++++++ "
cat /etc/passwd
echo "================================================================================================================"
echo " +++++++++++++++++IP at Server+++++++++++ "
ifconfig -a

echo ======================= CPU and Memory details ===================

lparstat -i

echo "================================================================================================================"

lparstat -i |grep  "Desired Memory";lparstat -i |grep -w "Entitled Capacity "

echo ======================= Physical Server Details ===================

prtconf|head

echo "================================================================================================================"
echo " ===========IP configured =============== "

for i in 0 1 2 3 4; do echo en$i; lsattr -El en$i; echo -----------------; done

echo "================================================================================================================"
echo " +++++++++++Gateway Info+++++++++++ "
netstat -nr
echo "================================================================================================================"

echo " +++++++++++Disk information +++++++++++ "

lspv |awk {'print $1'} |while read i; do  lspv |grep -w $i; bootinfo -s $i; echo ----------------; done

echo " =====================logs completed ====================== "

==============================================================================================================================================================================
for i in `find . -type f -mtime -5 -exec echo {} +`; do echo $i; chmod 644 $i; done &

for i in `find /data/users/polling/GST_ERROR_CORP/ -type f -mtime -1 -exec echo {} +`; do echo $i; chmod 777 $i; done &

for i in `ls -lrt |grep -v "dr"|awk '{ if ($6 == "Feb") print $9 }'`; do echo $i; cp -pr $i /data/BRANCHES/98888/data/BRANCHES/98888/AccountStatement/MT940/MT940_Processed/; done &

Find command:-(https://geekflare.com/linux-find-commands/):-

find /home -name tecmint.txt

Files only
find ./ -type f -name "qa*"  (Where f means files.For dirs use -d)

To Search find all 30MB files:-

find / -size 30M  (C-bytes, K-kbs, M-mbs, G-gbs)
find / -size -30M less than 30M,use + for graterthan 30M files.)
find / -size +100M -size -200M   (B/W files.)
find / -type f -size +20k   (we can use -d for directories)
find /var/www/html -perm 644 (perm wise)

find /home -mtime -10 (lst 10 days files.use + to get except last 10 days files.)

for i in `find /data/users/polling/GST_ERROR_CORP/ -type f -mtime -1 -exec echo {} +`; do echo $i; chmod 777 $i; done &

/data/BRANCHES/98888/data/BRANCHES/98888/AccountStatement/MT940/MT940_Processed

==============================================================================================================================================================================
 Displaying top CPU_consuming processes:
 #ps aux | head -1; ps aux | sort -rn +2 | head -10

 svmon -G -O unit=GB
 
 Displaying top 10 memory-consuming processes:
 #ps aux | head -1; ps aux | sort -rn +3 | head

 Displaying process in order of being penalized:
 #ps -eakl | head -1; ps -eakl | sort -rn +5

 Displaying process in order of priority:
 #ps -eakl | sort -n +6 | head

 Displaying process in order of nice value
 #ps -eakl | sort -n +7

 Displaying the process in order of time
 #ps vx | head -1;ps vx | grep -v PID | sort -rn +3 | head -10

 Displaying the process in order of real memory use
 #ps vx | head -1; ps vx | grep -v PID | sort -rn +6 | head -10

 Displaying the process in order of I/O
 #ps vx | head -1; ps vx | grep -v PID | sort -rn +4 | head -10

 Displaying WLM classes
 #ps -a -o pid, user, class, pcpu, pmem, args

 Determinimg process ID of wait processes:
 #ps vg | head -1; ps vg | grep -w wait

 Wait process bound to CPU
 #ps -mo THREAD -p <PID>

 Cpu usage with priority levels
 #topas -P 
==============================================================================================================================================================================
To change or assign ports use bellow steps.

1)Change or Add entries in "/etc/services" file,

2)Refresh the inetd demon=========> #refresh -s inted

3)Add or change enties in /etc/ssh/sshd_config file.

#cat /etc/ssh/sshd_config |grep -i 27041.==========>to check the port is addeed or not.

next start and stop sshd demon==========> #stopsrc -s sshd;startsrc -s sshd

to check port is listening or not ==============> #netstat -an |grep -i 27041
====================>          <========================

to check what and all listening ports in server 

#netstat -an |grep -i listen
==============================================================================================================================================================================
for i in `ls -lrth retail* | awk '{print $9}'`; do echo $i; zcat $i |  
grep 'language from home ::hindi' | wc -l; done
==============================================================================================================================================================================
AgentDeploymentScript.sh
#!/bin/bash

# PROXY_ADDR_PORT and PROXY_CREDENTIAL define proxy for software download and Agent activation
PROXY_ADDR_PORT='serverswg.sbi.co.in:9090'
# RELAY_PROXY_ADDR_PORT and RELAY_PROXY_CREDENTIAL define proxy for Agent and Relay communication
RELAY_PROXY_ADDR_PORT='serverswg.sbi.co.in:9090'
ACTIVATIONURL='dsm://10.191.146.220:4120/'

helm repo add dsao https://trendmicro.github.io/dsao/
helm -n openshift install --set dsmUrl="$ACTIVATIONURL" --set dsmProxy="dsm_proxy://$PROXY_ADDR_PORT/" --set relayProxy="relay_proxy://$RELAY_PROXY_ADDR_PORT/" ds-agent dsao/ds-agent
==============================================================================================================================================================================
USING MULTIPLE COMMANDS:
CREATING A SCRIPT FILE:
DISPLAYING MESSAGES:
USING VARIABLES:
	ENVIRONMENT VARIABLES 
	USER VARIABLES 
	COMMAND SUBSTITUTION






=========================================================================================================================================================================>
for i in `cat ip.txt`;do echo "========$i=========";ssh -t -q  addmitam@$i "sudo cp /dev/null /etc/security/pwdhist.pag;sudo cp /dev/null /etc/security/pwdhist.dir; sudo lsuser SOCVA;sudo chuser unsuccessful_login_count=0 SOCVA;sudo echo SOCVA:Soc@1234 |sudo chpasswd;sudo pwdadm -c SOCVA;sudo date";done  >> /tmp/output_successful_change_SOCVA12_count.txt
for i in `cat ip_test.txt`;do echo "========$i=========";ssh -t -q  addmitam@$i "sudo cp /dev/null /etc/security/pwdhist.pag;sudo cp /dev/null /etc/security/pwdhist.dir; sudo lsuser SOCVA;sudo chuser unsuccessful_login_count=0 SOCVA;sudo echo SOCVA:Soc@1234 |sudo chpasswd;sudo pwdadm -c SOCVA; sudo ifconfig -a|grep -i inet;sudo cat /etc/sudoers |grep SOCVA;sudo date";done  >> /tmp/output_successful_change_SOCVA12_count.txt
for i in `cat ip.txt`;do echo "========$i=========";ssh -t -q  addmitam@$i "sudo lsuser SOCVA;sudo chuser unsuccessful_login_count=0 SOCVA;sudo chuser minage=0 SOCVA;cat /etc/passwd |grep SOCVA;sudo date";done  >> /tmp/output_successful_change_SOCVA12_count.txt
for i in `cat ip.txt`;do echo "========$i=========";ssh -t -q  addmitam@$i "sudo lsuser SOCVA;sudo chuser unsuccessful_login_count=0 SOCVA;sudo chuser minage=0 SOCVA;cat /etc/passwd |grep SOCVA;sudo date";done  >> /tmp/output_successful_change_SOCVA12_count.txt

for i in `cat ip_test.txt`;do echo "========$i=========";ssh -t -q  addmitam@$i "sudo cp /dev/null /etc/security/pwdhist.pag;sudo cp /dev/null /etc/security/pwdhist.dir; sudo lsuser SOCVA;sudo chuser unsuccessful_login_count=0 SOCVA;sudo echo SOCVA:Soc@1234 |sudo chpasswd;sudo pwdadm -c SOCVA; sudo ifconfig -a|grep -i inet;sudo cat /etc/sudoers |grep SOCVA;sudo date";done  >> /tmp/output_successful_change_SOCVA12_count.txt

for i in `cat ip.txt`;do echo "========$i=========";ssh -t -q  sbiitam@$i "sudo lsuser sbiitam;sudo chuser unsuccessful_login_count=0 SOCVA;sudo chuser maxage=0 SOCVA;sudo date";done  >> /tmp/output_maxage.txt

ls -ltr  | awk '{print $9}' | grep -v "^$" | while read file; do echo $file; cp -r "${file}" "${file}${name}";done -->Copying the files

for i in `cat ip.txt`;
do
echo "========$i=======";
ssh -t -q addmitam@$i "sudo echo 'devopsadmin ALL=(ALL) NOPASSWD:  ALL'";done >> /etc/sudoers_bkp_22022023

find . -name index.html -type f -exec 1s -lrt {} \;

=========================================================================================================================================================================>
If you want to see all of the TCP listening ports and which processes and PID’s are assigned to them, run the following script:
!/usr/bin/ksh
print
“Port           
PID             
Process”
netstat -Aan | grep LISTEN | awk ‘{print $1 ” ” $5}’ | while
read pcb port; do 
        out=`rmsock $pcb tcpcb`
        if echo “$out” |
grep “Kernel Extension” > /dev/null; then
               
printf “%-15s Kernel Extensionn” “$port”
        else
               
pid=`echo “$out” | sed -n ‘s/.*pro[c]*ess ([0-9][0-9]*) .*/1/p’`
               
if [ -n “$pid” ]; then
                       
proc=`ps -p $pid | tail -n 1 | awk ‘{print $4}’`
                       
printf “%-15s %-16s $procn” “$port” $pid
               
else
                       
echo “Error, Line not recognized “$out” for Port $port”
               
fi
fi
done

=========================================================================================================================================================================>
bash-4.2$ cat /home/trickle/SBEDWPSFTP.sh
#!/bin/bash
DAT1=`date`
cd /data/REPORTS_DATA/OAO/INCOMING
TODAYDATE=`date +%Y%m%d`
MON_YR=`date +%b" "%d`
logfile="/data/REPORTS/SBIMOB_$TODAYDATE"
echo "Script Started at $TODAYDATE"
echo "-------------------------------"
filecnt=`ls -ltr | grep "$MON_YR" |awk '{print $9}' |wc -l`
if [ $filecnt -gt 1 ]
then
for i in `ls -ltr | grep "$MON_YR" |awk '{print $9}'`
do
cp -pr $i /data/users/polling/.
echo $i >> SbiMobFileList.csv
cd /data/users/polling
/usr/bin/sftp inb@10.0.235.80 << EOF
cd /data/INB/ftp
lcd /data/users/polling
put $i
EOF
done
fi


#0 7 * * * /usr/bin/sh /home/SBIINBfileupload.sh >>/tmp/SBIINBfileupload.txt

=========================================================================================================================================================================>

###############System.sh####################

filename=$(hostname)_$(date +"%Y%m%d_%H%M").conf;

echo "##### oslevel -r ######################" > $filename ;
oslevel -r >> $filename ;
echo "\n" >> $filename ;
echo "##### oslevel -rq #####################" >> $filename ;
oslevel -rq >> $filename ;

echo "\n" >> $filename ;
echo "##### instfix -i ######################" >> $filename ;
instfix -i | grep -i ml >> $filename ;
echo "\n" >> $filename ;
echo "##### mount ###########################" >> $filename ;
mount >> $filename ;
echo "\n" >> $filename ;

#++++ if for command checking ++++#
echo "##### df ##############################" >> $filename ;
if ( df -gP >> $filename )
then
  echo "\n" >> $filename ;
else
  df -kP >> $filename ;
  echo "\n" >> $filename ;
fi ;

echo "##### lsps -a #########################" >> $filename ;
lsps -a >> $filename ;
echo "\n" >> $filename ;

#### while loop for vg checking ####
echo "##### lsvg -l , lsvg ##################" >> $filename ;
lspv | grep active | awk '{print $3}' - | sort -u | while read ln
do
echo "#####" $ln "#####" >> $filename ;
echo "===== lsvg -l" $ln "=====" >> $filename ;
lsvg -l $ln >> $filename ;
echo "===== lsvg" $ln "=====" >> $filename ;
lsvg $ln >> $filename ;
echo "\n" >> $filename ;
done ;

echo "##### ls pv ###########################" >> $filename ;
lspv >> $filename ;
echo "\n" >> $filename ;

#### while loop for pv checking ####
echo "##### lspv -l #########################" >> $filename ;
lspv | grep active | awk '{print $1}' - | while read ln
do
echo "=====" $ln "=====" >> $filename ;
lspv -l $ln >> $filename ;
done ;
echo "\n" >> $filename ;

echo "##### lsconf ##########################" >> $filename ;
lsconf >> $filename ;
echo "\n" >> $filename ;

echo "##### lsdev ###########################" >> $filename ;
lsdev >> $filename ;
echo "\n" >> $filename ;

#++++ if for command checking ++++#
echo "##### memory config ###################" >> $filename ;
if (vmo -a >> $filename)
then
  echo "\n" >> $filename ;
else
  vmtune -a >> $filename ;
  echo "\n" >> $filename ;
fi ;

echo "##### lslpp -l ########################" >> $filename ;
lslpp -l >> $filename ;
echo "\n" >> $filename ;

echo "##### instfix -i ########################" >> $filename ;
instfix -i >> $filename ;
echo "\n" >> $filename ;

echo "##### lscfg -vp #######################" >> $filename ;
lscfg -vp >> $filename ;
echo "\n" >> $filename ;
echo "##### NetworkParameters  #######################" >> $filename ;
no -a  >> $filename ;
echo "\n" >> $filename ;
echo "##### ulimit   #######################" >> $filename ;
ulimit -a  >> $filename ;
echo "\n" >> $filename ;
echo "##### Vml  #######################" >> $filename ;
vmo -L  >> $filename ;
echo "\n" >> $filename ;
echo "##### Vmstat  #######################" >> $filename ;
vmstat -v  >> $filename ;
echo "\n" >> $filename ;
echo "##### lparstat  #######################" >> $filename ;
lparstat -i >> $filename ;
echo "\n" >> $filename ;
echo "#####  RAM Details   #######################" >> $filename ;
svmon -G >> $filename ;
echo "\n" >> $filename ;
lsattr -E -l mem0 >> $filename ;
echo "\n" >> $filename ;
lsattr -E -l sys0 -a realmem >>  $filename ;
echo "\n" >> $filename ;
echo "#####  bootinfo -r   #######################" >> $filename ;
bootinfo -r >> $filename ;
echo "\n" >> $filename ;
echo "=====================================";
echo "Out put file is in" $PWD"/"$filename ;
echo "=====================================";


=========================================================================================================================================================================>
NFS server & client installation and configuration:-

#!/bin/bash
#HOST="10.248.56.18"
#HOST="10.189.250.18"
HOST="sfg.onlinesbi.com"
USER="SBCOLLECT_MSMB_5697646"
PORT="2201"
YESTERDAY=`TZ=IST+24 date +%d%m%Y`
for i in `cat /scripts/GSTlogs/SBCOLLECT_MSMB_GET.log| grep "rw" | grep $YESTERDAY | awk '{print $9}'`
do
echo "Downloading File $i"
expect -c "
spawn sftp -oMACs=hmac-sha2-256 -P$PORT $USER@$HOST
expect \"*assword:*\"
send \"Sbi@12345\r\"
sleep 5
expect \"sftp>*\"
send \"cd SBI_UPI/SBCOLLECT_MSMB_5697646/Download\r\"
expect \"sftp>*\"
send \"lcd /data/sftp_files/home/SBCUPI/MIS/Files_Incoming\r\"
expect \"sftp>*\"
send \"get $i\r\"
expect \"sftp>*\"
send \"quit\n\"
interact "
done
chmod 644 /data/sftp_files/home/SBCUPI/MIS/Files_Incoming/*.csv


=========================================================================================================================================================================>

EXTRA - SCRIPT
SCRIPT:


KORN SHELL:
http://www.bolthole.com/solaris/ksh.html
http://www.well.ox.ac.uk/~johnb/comp/unix/ksh.html


SYMBOLS:
#!/usr/bin/ksh      <--this indicates the shell, which should be used to interpret the script

' '                 <--ignores all metacharacters between the quotes (echo '$HOME' --> $HOME) (with ssh variables are interpreted)
" "                 <--ignores all metacharacters except for $, ` and \ (echo "$HOME" --> /home/root) (with ssh everything is string-literal)
\                   <--ignores the special meaning of the following character (echo \$HOME --> $HOME)
                    (it is the continuation character as well, to continue a command in a new line)
${VAR}hello         <--{} distingueshes the variable from the surrounding text
~                   <-- represents the home directory of the user (~joe refer's to the home dir of joe)
------------------------------------
A single-quote cannot occur within single-quotes.

Some alternatives:
echo $'It\'s Shell Programming'  # ksh, bash, and zsh only, does not expand variables
echo "It's Shell Programming"   # all shells, expands variables
echo 'It'\''s Shell Programming' # all shells, single quote is outside the quotes
echo 'It'"'"'s Shell Programming' # all shells, single quote is inside double quotes
------------------------------------
x=day
echo there is a ${x}long meeting      <--{} is used to eliminate the need of space after the variable
there is a daylong meeting
------------------------------------
x=`date` or x=$(date)     <-() is supported only in ksh
------------------------------------

arithmeic:
(( x += 1 ))                 <- counter adds 1 to x
(( x -= 1 ))                 <- counter minus 1 from x
x=$(($x+1))                  <- counter adds 1 to x

let command can be used for this as well (+,-,*,/):
let x=x+10
let x=x/2

read <variable>              <- reads from the input to the given variable
export variable=value        <- passes variable into a subshell

set -x                       <- shows real time info for debugging
set -u                       <- unsets variables

test command:
The test command evaluates the expression and returns a return code 0 if true.
test expression or [ expression ] or [[ expression ]] (leave a space near the squaer braces)
In newer Korn shell the modern notation [[...]] is used, which is an extension of the test command.

integer operations:
if [ $? -eq 0 ] ; then       <- equal
if [[ $? -eq 1 ]]            <- [[ is for test condition
if [ $? -ne 0 ] ; then       <- not equal
if [ $? -lt 0 ] ; then       <- less than
if [ $? -gt 0 ] ; then       <- greater than
if [ $? -le 0 ] ; then       <- less equal
if [ $? -ge 0 ] ; then       <- greater equal
$number1 -eq $number2        <- numbers are equal
$number1 -ne $number2        <- numbers are not equal

string operations:
$string1 = $string2          <- strings are identical
$string1 !=  $string2        <- strings are not identical

if [[ -e $FILE ]]            <- if file exist

read command:
It reads one line from standard input and assigns the values  of each field to a shell variable.


print command (printf):
printf '%20s\n' "-- PLAYER --"

The syntax is %[-]m[.n]s
%s is the string, [-] is left justified, m is no. of chars wide, [n] is print the first n chars of the string.
The above example shows the string “- PLAYER -” printed, right justified in string wide of 20 chars.

VAR1="Hello"
VAR2="Worldddd"

printf '%10s %-10.5s\n' $VAR1 $VAR2
Hello World

----------------------

RUNNIG A SCRIPT:

Each shell script is executed in a subshell. Variables defined in a shell script cannot be passed back to the parent shell.

.                         <---if you invoke a shell script with a . (dot) it runs in the current shell.
                          Variables defined in this script are defined also for the current shell.

./                        <- refers to files in the current working directory
~                         <- refers to the home directory

3 ways of running a script:
ksh scriptname            (read permission needed)
scriptname                (read and execute permission needed)(in the PATH variable must be defined the dir)
. scriptname              (read permission needed) (it runs in the current shell, a subshell will not be invoked)


$$                        process id
$0                        shell script name currently executing
$1, $2 ...                parameters which were invoked with the script
$*                        equal all arguments passed
$#                        number of arguments passed into shell script (if [[ $# -ne 1 ]]...)
$?                        retrurn code of last command executed
command1 && command2      if command1 successful then do command2 (ls s* && rm s*) (if [[ $ACE = "HIGH" && $banker_score -ge 11 ]])
command1 || command2      if command1 not successful then do command2 ( if [[ $ACE = "HIGH" || $banker_score -ge 11 ]])

exit n                    pass a return code to shell script
$!                        process ID of last background process

true                      this command always returns a true result
false                     this command always returns a false result

--------------------------------------------------

LOOPS:

for i in `cat file`
do
...
done


for i in /tmp/*            it will remove all files in /tmp
do
rm $i
done

while [[ $x -lt 9 ]]
do
...
done


read game?"Another Game (y|n)? "
      case $game in
            y|Y)  :;;            <- ":" means continue
            n|N)  EXT=1;;
      esac


--------------------------------------------------

CASE:
(it can happen that there is a problem with numerical variable so this is needed before the CASE condition: "x=echo $x")

case $x in
1 )
   echo
   ;;

2 )
   echo "Stopping the ovo agent..."
   ;;

* )
   echo "bye"
   ;;
esac

--------------------------------------------------

TIPS & TRICKS:

cat <file> | head -n $x | tail -1            <-displays a line from a file
awk 'NR==2' /root/settitle                   <--displays the 2nd line in the file:/root/setitle
/usr/bin/echo yes | command                  <-- input is automatically yes
echo "$FS2:\t it is mounted now"             <--\t will do a tab in the output
perl -e 'select(undef,undef,undef,.3)'       <--it will sleep for 0.3 second

---------------------

Run the script every 2nd Sunday of the month:
DAY=$(date "+%d")
[ $DAY -ge 8 -a $DAY -le 14 ] || exit        <- if $DAY greater than 8 and lesser than 14 the script will continue
...rest of the script                        if not (|| means condition is false) it will exit


it will check if a file older than a week and if yes, delete it:
35 21 * * 0 /usr/bin/find /home/traffic/ -name "trace" -mtime +7 -exec /usr/bin/rm {} \\;


leaving the cursor at the same position while counting:
x=1
while [[ $x -le 100 ]]; do
   tput cub 20
   print -n $x
   (( x += 1 )
done


---------------------------------------------

AIX: Script to get Total Disk Size
Article Number: 264 | Rating: Unrated | Last Updated: Tue, Jun 12, 2018 9:07 AM
Single Server

Total Disk Size (hdisk)

1
for i in `lspv |awk '{print $1}'`; do bootinfo -s $i; done |awk '{s+=$1} END {print s}' |while read x; do echo $x/1024|bc; done
Total Disk Size (hdiskpower)

1
for i in `lspv |grep hdiskpower |awk '{print $1}'`; do bootinfo -s $i; done |awk '{s+=$1} END {print s}' |while read x; do echo $x/1024|bc; done

-------------------------------------------------

AIX: Script to check if all paths are consistent and available
Article Number: 263 | Rating: Unrated | Last Updated: Tue, Jun 12, 2018 9:05 AM
Single Server

1
lspath | awk '{print $1,$NF}' |sort |uniq -c
(OR)

1
2
3
4
5
for x in `lspath |awk '{print $2}' |sort -k1.6n |uniq`
do
status=`lspath -l $x`
echo $status |sed 's/\ /,/g'
done
Multiple Server

1
2
3
4
for i in `cat server`
do
ssh $i lspath | awk '{print $1,$NF}' |sort |uniq -c |awk -v MYHOST=$(ssh $i uname -n) '{print MYHOST " " $1,$2,$3}'
done

---------------------------------------------

AIX: Script to create a file with commands to remove missing & failed paths
Article Number: 262 | Rating: Unrated | Last Updated: Tue, Jun 12, 2018 9:02 AM
To create a file with commands to remove the missing paths

#!/bin/sh
# rmpaths
>xrmpaths
echo "#!/bin/sh" >>xrmpaths
disks=$(lspv | awk '{print $1}')
for loop in $disks
do
lspath -l $loop -H -F "name:parent:connection:status" |grep Missing| awk -F: '{print "rmpath -dl",$1,"-p", $2, "-w", $3}'>>xrmpaths
done
 

To create a file with commands to remove the failed paths

#!/bin/sh
# rmpaths
>xrmpaths
echo "#!/bin/sh" >>xrmpaths
disks=$(lspv | awk '{print $1}')
for loop in $disks
do
lspath -l $loop -H -F "name:parent:connection:status" |grep Failed| awk -F: '{print "rmpath -dl",$1,"-p", $2, "-w", $3}'>>xrmpaths
done

---------------------------------------------------

Understanding the AND && and the OR || Shell operators
By Surya00:54No comments
The UNIX/Linux shell has the very handy AND operator ("&&") and the OR operator ("||").   When you first encounter these, they can be difficult to understand.   But once you understand the logic behind the way they work they are much easier to use.

The shell is lazy.  If you have two questions for it:  question1 and question2, and you ask it "Is question1 OR question2 True?".  The shell will figure out the answer for question1, and if the answer is true, it won't even look at question2 at all.   This is because we asked if one OR the other is true.   Since the first one is true, without even looking at question2 it can answer that YES, "Question1 OR question2 is true". 

A similar concept applies to the "AND" statement.   If you asked:  "Is question1 AND question2 True?".   The shell will figure out the answer for question1, and if it is false, it doesn't even look at question2 at all.   This is because we asked if they were BOTH true and since the first one is false, there is no way they can both be true, so it won't even bother looking at the second question at all.

If your not familiar with return codes on UNIX/Linux, a "0" return code is "TRUE" and a non-zero return code is "FALSE".  Every command you run has a return code when it exits.

Due to this feature of these operators, it can open up some interesting possibilities.  Here are a few examples of how we can take advantage of this:
id newuser || mkuser newuser
In this example the first command run is the "id" command.  The id command returns a "TRUE" exit code ("0") if the account exists, and a "FALSE" exit code ("1") if the account doesn't exist. 

If the "newuser" account doesn't exist, when this command is run the "id" command will return false.   Since we are asking "OR" in this statement, the shell MUST run the second command to see if it is true since the first command was false.   The end effect of this is the "mkuser" command will only be run if the "newuser" account doesn't exist. 

If the "newuser" account does exist, when this command is run the "id" command will return true.  Since we are asking "OR" the shell doesn't need to run the second command at all (mkuser).   So if the account does exist, the mkuser command is NOT run.

Here is another example of how to delete a directory if it exists:
 [ -d /tmp/test ] && rm -rf /tmp/test
In this example the first command ("[ -d /tmp/test]") returns TRUE if the directory exists, and FALSE if the directory does not exist.

If the directory does exist, the first command returns true.   Since we specified "AND" the shell must run the second command to determine if both the first and second commands are true.  The result of this is the directory is deleted if it exists.

If the directory does not exist, the first command returns false.   Since we specified "AND", and the shell knows the first command is false, there is no need for it to run the second command.  So if the directory does not exist, it will not run the command to delete it.  

The "&&" and "||" operators can also be used in a more traditional way.   For example, you can check to see if 2 files exist using "&&" and an if statement like this:
if [ -e /tmp/file1 ] && [ -e /tmp/file2 ]; then
      echo both files exist
fi

The if statement is only run if both files exist.

Below are tables that visually show how these operators work.   If it says "TRUE" it means that command returned a "0" return code.   If it says "FALSE" it means that command returned non-zero return code.   If it says "NOT RUN" it means the shell can answer the question without running this command so it isn't run.   The "Overall return code" is the return code the entire statement evaluates to.

GREEN=Command Run	Yellow = Command NOT run
First Command	Operator	Second Command	Overall Return code
TRUE	&&	TRUE	0 TRUE
TRUE	&&	FALSE	1 FALSE
FALSE	&&	NOT RUN	1 FALSE
GREEN=Command Run	Yellow = Command NOT run
First Command	Operator	Second Command	Overall Return code
TRUE	||	NOT RUN	0 TRUE
FALSE	||	TRUE	0 TRUE
FALSE	||	FALSE	1 FALSE

It is also possible to have more than 2 commands strung together in these kind of statements (i.e.  command1 || command2 && command3).   Here is a table that shows how this looks:

GREEN=Command Run	Yellow = Command NOT run 
First Command	Operator	Second Command	Operator	Third Command	Overall Return code
TRUE	&&	TRUE	&&	TRUE	0 TRUE
TRUE	&&	TRUE	&&	FALSE	1 FALSE
TRUE	&&	FALSE	&&	NOT RUN	1 FALSE
FALSE	&&	NOTRUN	&&	NOT RUN	1 FALSE
GREEN=Command Run	Yellow = Command NOT run 
First Command	Operator	Second Command	Operator	Third Command	Overall Return code
TRUE	||	NOT RUN	||	NOT RUN	0 TRUE
FALSE	||	TRUE	||	NOT RUN	0 TRUE
FALSE	||	FALSE	||	TRUE	0 TRUE
FALSE	||	FALSE	||	FALSE	1 FALSE
GREEN=Command Run	Yellow = Command NOT run 
First Command	Operator	Second Command	Operator	Third Command	Overall Return code
TRUE	||	NOT RUN	&&	TRUE	0 TRUE
TRUE	||	NOT RUN	&&	FALSE	1 FALSE
FALSE	||	TRUE	&&	TRUE	0 TRUE
FALSE	||	TRUE	&&	FALSE	1 FALSE
FALSE	||	FALSE	&&	NOT RUN	1 FALSE
GREEN=Command Run	Yellow = Command NOT run 
First Command	Operator	Second Command	Operator	Third Command	Overall Return code
TRUE	&&	TRUE	||	NOT RUN	0 TRUE
TRUE	&&	FALSE	||	TRUE	0 TRUE
TRUE	&&	FALSE	||	FALSE	1 FALSE
FALSE	&&	NOT RUN	||	TRUE	0 TRUE
FALSE	&&	NOT RUN	||	FALSE	1 FALSE

Conclusion

The "&&" and "||" operators are very handy operators to use.   They can save you time and make shell scripting easier.  

---------------------------------------------------

Using traps in your scripts
By Surya19:49No comments
Using traps in your scripts
Summary:  For scripts to be reasonably robust, one of the conditions that should ideally be met is the ability to clean up any temporary logs or processes left lying around from a forceful termination. Another element to consider is when an interrupt from a user is received, what appropriate action should be taken? With the shell built-in trap command and the logger utility, these can help to provide your scripts with more robustness when a script is forcefully terminated. In this article, I will demonstrate ways trap and logger can be used.

When writing scripts, it is good practice to have a controlled exit from your script; this allows for failed conditions within the script processing. Consider a script that copies or replaces certain files in a file system. You could check if each copy completes successfully before moving on to the next task in the script. If issues occur, then the script exits. This allows the system administrator to inspect where the script failed so that immediate action can be taken to back-out the process or take an alternative action in completing the task.
Listing 1 below contains basic conditional code that could achieve this goal. Using a file copy process as an example, a test is carried out to make sure the file run_pj actually exists. If it does, then a copy is carried out to take a backup of the destination file. If the copy is unsuccessful, then the script exits with a message, detailing the error. If the file is not present, then the script exits, as no more processing should be carried out. If the copy was successful, then the new updated file is copied and overwrites the original file. If this is not successful, then the script exits.
Listing 1. Example_replace
 
#!/bin/bash
#
proj_dir=/opt/pcake/bin
# check file is present
if  [ ! -f "$proj_dir/run_pj" ]
then
 echo " $proj_dir/run_pj not present...exiting"
 exit 1
fi
 # make a backup copy
cp -p $proj_dir/run_pj $proj_dir/run_pj.24042011
if [ $? != 0 ]
then
echo "$proj_dir/run_pj no backup made...exiting"
exit 1
fi
 
# copy  over updated file
if [ ! -f "/opt/dump/rollout/run_pj" ]
 then
  echo "/opt/dump/rollout/run_pj not present...exiting"
  exit 1
fi
cp -p /opt/dump/rollout/run_pj $proj_dir/run_pj
if [ $? != 0 ]
then
echo " $proj_dir/run_pj was not copied..exiting"
exit 1
fi
In this demonstration, I am using bash v3.2. The bash shell can be downloaded from the AIX Toolbox, see the Resources section.
Using the approach in Listing 1, the script exits if there is any error in the copy process, thus not allowing the script to carry on processing if there is an error. Clearly, any error would be fixed before the script is run again.
Another technique to check for errors and exit is to use the set option:
set -e
With the set option: -e, if a command fails (that is, it returns a non-zero exit status), the script exits (unless it is part of a iteration, &&, || command). The example shown in Listing 2 below, copies a non-existent file. The set -e option is used. If the copy command fails, the script exits. Notice that when you run the command, the if statement for the last exit status is never reached because the script exits upon a non-zero return status of the cp command.
Listing 2. Example_fail
#!/bin/bash
set -e
proj_dir=/opt/rollout/v12
# copy a non-existent file
cp $proj_dir/go_sup /usr/local/bin/go_sup
 if [ $? != 0 ]
 then
echo "could not copy $proj_dir/go_sup to /usr/local/bin/"
exit 1
 fi

$ cp_test
cp: /opt/rollout/v12/go_sup: A file or directory in the path name does not exist.
Generating syslog messages
Using the logger command allows the shell and scripts to write messages to the system messages file via the syslogdservice. This can be used within a script to log errors or on completions of your processes so that is viewable by all who interrogate the messages file. Thus keeping you and other system administrators informed of events that have been generated from your scripts.
The most basic format of the command is:
logger -p priority message
Where -p is the priority or facility level contained within syslog.
For example, the following logger command contains the calling script name ("rollout" in this example) with the messagesomething has happened.
logger -p notice "$(basename $0) - something has happened"
The the following output appears in /var/adm/messages:
Apr  5 13:20:30 uk01wrs6008 user:notice dxtans: rollout - something has happened
Getting a signal
The two examples contained in Listing 1 and Listing 2 shows one way that checking post command execution can be carried out. However, what happens if a script gets terminated during its execution? Scripts can be killed or terminated using the signal mechanism (note that not all signals sent are terminal). A signal that is sent to a running process interrupts that process to force some sort of event, typically some action. Signals can come from, but not restricted to:
The kernel or user space via some system event.
The actual process itself via the keyboard (Ctrl-C).
An illegal instruction from within the process.
Another process via another user sending a kill to your process.
Notification via a notification of the state of a required device.
To view the current list of signals, use kill -l (the letter l) command. The list is presented in the form (signal number, signal name):
 $ kill -l
 1) SIGHUP       2) SIGINT       3) SIGQUIT      4) SIGILL
 5) SIGTRAP      6) SIGABRT      7) SIGEMT       8) SIGFPE
 9)SIGKILL     10) SIGBUS      11) SIGSEGV     12) SIGSYS
…....
…....
To view the signals and their default actions (on an AIX machine), view the file:
$ cat /usr/include/sys/signal.h|more
…..
…..
#define SIGHUP     1    /* hangup, generated when terminal disconnects */
#define SIGINT     2    /* interrupt, generated from terminal special char */
#define SIGQUIT    3    /* (*) quit, generated from terminal special char */
#define SIGILL     4    /* (*) illegal instruction (not reset when caught)*/
#define SIGTRAP    5    /* (*) trace trap (not reset when caught) */
#define SIGABRT    6    /* (*) abort process */
…..
…..
I have received a signal. Now what?
When a signal has been received by the script, the script can do one of three actions:
Ignore it and do nothing. This is probably what most scripts do without the script authors realising it.
Catch the signal using trap and take appropriate action.
Take the default action.
All the above is true except for the following signals:
SIGKILL (signal 9)
SIGSTOP (signal 17)
SIGCONT (signal 19)
These cannot be caught and always uses the default action. SIGKILL always kills the process. Looking at the listing from the/usr/include/sys/signal.h file, we see the default action for each signal. For instance, SIGINT (signal 2) is an interrupt generated from the terminal; typically, this is the keyboard. Each defined system signal has a different action. There are also two user defined signals: SIGUSR1 (signal 30) and SIGUSR2 (signal 31).
It is up to the author of the script to take what action is required if any, if a signal is received.
These can be used by the script author to do bespoke signals. Be sure to view the signal.h file for all the default actions.
Common signals are:
SIGHUP - hangup or exit a foreground running process from a terminal
SIGINT - Ctrl-C from the keyboard
SIGQUIT - Ctrl-\ from the keyboard
SIGTERM - software termination signal
When receiving a signal, actions that can take place are:
cleaning up files
prompting the users if the script should be actually terminated
ignoring the actual signal
carry on processing
Catching a signal
To catch a signal that is sent to your process, use the built-in trap command. When a signal is caught, the current command being executed attempts to complete before the trap command takes over. If it is a SIGKILL, then termination is immediate. If you ignore certain signals, the default action always take place. For example, if you only trap for SIGINT but do nothing aboutSIGQUIT, then if your process gets a SIGQUIT, the default action takes place (most likely an untidy termination of your script, which you probably do not want).
The format of the trap command is:
trap 'command_list'  signals
Where command_list is a list of commands, which can include a function to run upon receiving a signal contained in the signals list. And, signals is a list of signals to catch or trap.
To ignore a signal, use two single quotes in place of the command_list:
trap ''  signals
To reset a trap use:
trap - signals
Where signals is the signal list.
Lets now look at a bare bones script that catches SIGINT and SIGQUIT. The script contained in Listing 3 below is a counter iteration script. When the user hits Ctrl-C or Ctrl-\ on the keyboard, the trap command traps the signal, and echoes a message that the script has terminated. The termination is accomplished by using the exit command at the end of the command list. If this is not done, the script does not terminate and continues processing. In this example, we want it to terminate. There may be occasions when this would not be the case and processing should continue.
Listing 3. Trap1
#!/bin/bash
# trap1
trap 'echo you hit Ctrl-C/Ctrl-\, now exiting..; exit' SIGINT SIGQUIT
count=0

while :
 do
   sleep 1
   count=$(expr $count + 1)
   echo $count
 done

$ trap1
1
2
3
^Cyou hit Ctrl-C/Ctrl-\, now exiting..
It is considered good form that you use the signal names and not the signal numbers within the trap command. This is for portability reasons across other systems.
You can also use a function in place of the command as demonstrated in Listing 4 below:
Listing 4. Trap1a
#!/bin/bash
# trap1a
trap 'my_exit; exit' SIGINT SIGQUIT
count=0

my_exit()
{
echo "you hit Ctrl-C/Ctrl-\, now exiting.."
 # cleanp commands here if any
}

while :
 do
   sleep 1
   count=$(expr $count + 1)
   echo $count
 done
Signals can also be caught, when a script is running in the background. Listing 5 below, contains a simple counter as in the previous examples. In the following example, I have again chosen to exit the script upon catching the signal. If this was a file processing script, temporary files created would be deleted first.
The script is submitted into the background using:
$ /home/dxtans/trapbg &
[1] 708790
$ 1
2
3
Now from another terminal, send a signal SIGHUP to kill it.
$ ps -ef |grep trapbg
 dxtans 708790 2457860 11:49:39 pts/0 0:00 /bin/bash /home/dxtans/trapbg
$ kill -1 708790
Now back on the terminal where the script was submitted, the following is displayed:
$ /home/dxtans/trapbg &
[1] 708790
$ 1
2
3
Going down on a SIGHUP - signal 1, now exiting..
[1]+ Done   /home/dxtans/trapbg
<
Listing 5. trapbg
#!/bin/bash
# trapbg
trap 'echo Going down on a SIGHUP - signal 1, now exiting..; exit' SIGHUP
count=0
while :
do
 sleep 10
 count=$(expr $count + 1)
 echo $count
done
The most common tasks when dealing with signals is to clean up temporary files. Typically, these are created with the PID (the script process pid) that are appended to the user created files in /tmp. Assume the temp files are in this form:
hold1.$$
hold2.$$
A common command to remove these files is:
rm /tmp/hold*.$$
The following piece of code traps for SIGNHUP SIGINT SIGQUIT SIGTERM then remove the files:
trap 'rm /tmp/hold*.$$; exit' SIGNHUP SIGINT SIGQUIT SIGTERM 
Earlier in this article, I demonstrated that using set -e causes a script to terminate upon an occurrence on a non-zero exit status from a command. Within trap, you have a similar option; it is not really a signal as such but is based on set -e as if it was invoked. It traps a non-zero exit status from a command, using the ERR variable. The ERR goes with the signal list within the trap command. In the following example, a non-existent file is copied, which invokes an error:
#!/bin/bash
# trap1b
trap 'echo I have error in my script..' ERR
cp /home/dxtans/afile /tmp
When executed, the output is:
$ trap1b
cp: /home/dxtans/afile: A file or directory in the path name does not exist.
I have error in my script.
    
There are two variables that come in handy when dealing with traps to give you more information on the script termination,LINENO and BASH_COMMAND. The BASH_COMAMND is exclusive to bash. These report, or attempt to report, the line number that the script is currently executing, and also the current command that is running. The following example, Listing 6 below, demonstrates this. The script executes a list of echo and sleep commands. When the script is sent either a SIGHUP, SIGINT, SIGQUIT, the script terminates. A message displays containing the line number and command when the trap was caught; the script then exits (from the exit command on the trap command list). Notice that the trap calls the function my_exit to display the information. By parsing the parameters $1 (LINENO) and $2 (BASH_COMMAND), it also logs a message to /var/adm/messages of the event. Other clean up commands would be put in this function, if required.
Listing 6. trap4
#!/bin/bash
# trap4

trap 'my_exit $LINENO $BASH_COMMAND; exit' SIGHUP SIGINT SIGQUIT
my_exit()
{
echo "$(basename $0)  caught error on line : $1 command was: $2"

logger -p notice "script: $(basename $0) was terminated: line: $1, command was $2"
 # cleanp commands here if any
}

echo 1
sleep 1
echo 2
sleep 1
echo 3
Running this script a couple of times, and then interrupting at different intervals, produces the following output.
$ trap4
1
2
^Ctrap4  caught error on line : 15 command was: sleep

$ trap4
1
^Ctrap4  caught error on line : 13 command was: sleep
In /var/adm/messages, we have an entry for the script termination:
Apr  6 12:12:46 rs6000 user:notice dxtans: script: trap4 was terminated: line: 13,
 command was sleep
There are occasions when you will want to ignore certain signals. Perhaps you wish to prevent someone hitting Ctrl-C or Ctrl-\ on the keyboard by mistake when your script is doing some processing on large files, and you wish it to complete, without user interruption. The following segment of code achieves this:
trap '' SIGINT SIGQUIT
You can also ignore certain signals during a portion of your script, then re-instate them later on when you do wish to catch the signals so you can take some form of action. The script contained in Listing 7 below ignores the signals SIGINT and SIGQUIT until after the sleep command has finished. Then when the next sleep command starts, trap takes action if the signals are sent and terminates. As in the previous examples, you can assume the sleep commands represent some form of processing.
Listing 7. trapoff_on
#!/bin/bash
# trapoff_on

trap '' SIGINT SIGQUIT
echo "you cannot terminate using ctrl-c or ctrl-\, "
# heavy pressing go on here, cannot interrupt !
sleep 10

trap 'echo terminated; exit' SIGINT SIGQUIT
# user can now interrupt
echo "ok you can now terminate me using those keystrokes"
sleep 10
Sending a signal to a child
Scripts that contain child processes also need to be addressed. Assuming you wish to terminate any child processes, you need to kill these as well. This is accomplished using the trap command as demonstrated in Listing 8 below. In this example, two sleep commands are used as the child processes. These are put into the background; as each process is run, the PID of the process is placed into the variable: $pid. This variable holds the two PIDS of the child (sleep) processes.
To kill the main script, either a SIGHUP,SIGINT,SIGQUIT or SIGTERM is sent. Upon catching this signal, a kill command is issued to the PID of the child processes contained in the variable $pid. Once completed, the script exits. The wait at the end of the script will wait for the child processes to terminate or complete. Further signal traps may be required that would be contained within the child scripts to do further cleaning up before exit. Clearly, this depends on your type of processing.
The following example kills the children when the parent is sent one of the signals.
Listing 8. trapchild
#!/bin/bash
# trapchild

sleep 120 &

pid="$!"

sleep 120 &
pid="$pid $!"

echo "my process pid is: $$"
echo "my child pid list is: $pid"

trap 'echo I am going down, so killing off my processes..; kill $pid; exit' SIGHUP SIGINT 
 SIGQUIT SIGTERM 

wait
Upon execution of the script, the following displays:
$ /home/dxtans/trap/trapchild
my process pid is: 6553626
my child pid list is: 5767380 6488072
Check from the terminal that the processes are running, along with the child processes (the two sleep commands).
$ ps -ef |grep trapchild
    root 6553626 5439516   0 20:51:32  pts/1  0:00 /bin/bash /home/dxtans/trap/trapchild
$ ps -ef |grep sleep
root 5767380 6553626   0 20:51:32  pts/1  0:00 sleep 120
root 6488072 6553626   0 20:51:32  pts/1  0:00 sleep 120
Let's now send a SIGTERM to the parent process. The script terminates and terminates the child processes.
$ kill -15 6553626
The script then terminates with the following output:
$ /home/dxtans/trap/trapchild
my process pid is: 6553626
my child pid list is: 5767380 6488072
I am going down, so killing off my processes..
Check that nothing is returned after the termination:
# ps -ef |grep sleep
Conclusion
Using traps within your scripts requires a little extra effort. The result can be that when a trappable signal is inbound to your script, you will be in a good position to take action.

====================================================================================================>

Using uuencode to embed binaries in scripts and copy/paste transfer files between servers
By Surya01:04No comments
The uuendiv utility converts binary to text, and uudediv converts the text back to binary.   Wikipedia has a great article on the details of how this proces works (http://en.wikipedia.org/wiki/Uuencoding) 

These utilities create some interesting possibilities.    In this posting I'll cover embeding binary files in scripts and cover how to copy/paste transfer files between servers.
Embeding binary files in a script
If you have a script that also needs to include a binary file, you can uuendiv it and include it within the script itself.  So if you are writing a script to install/setup a binary you could actually also embed the binary within the script itself.   

Here is an example of what this would look like:
#!/usr/bin/ksh
echo this script will extract a binary file
echo the script could also do any other normal scripting stuff here

uudediv -o /tmp/testbinaryfile << 'ENDOFFILE'
<insert uuendiv output of the binary here>
ENDOFFILE

echo the /tmp/testbinaryfile has been extracted
To get the uuendiv output of the binary run a command like this:   uuendiv /usr/bin/ls /dev/stdout .  Take the output and replace the "<insert uuendiv output of the binary here>" text in the example with the uuendiv output.  
When the script runs, the file will be extracted.
Copy/Paste transfer files across servers
If you have a relatively small binary file that you need to transfer between servers, you can easily transfer it by copying and pasting it using uuendiv/uudediv.  This can be a time saver in some circumstances.   It also might be helpful if you have a server that isn't connected to the network but for which you can get a console on through something like the HMC. 

In this example, we will copy and paste the /usr/bin/ls binary between servers. 

On the source server, type:
uuendiv /usr/bin/ls /dev/stdout
Then copy all of the output in to the clipboard.

On the destination server, type:
uudediv -o /tmp/ls
Then press enter, and then paste in the uuendiv output from the source server.   The copy/pasted "ls" binary will be saved to /tmp/ls.   You can verify the source and destination "ls" files are identical by comparing the checksum of the files with the "csum" command.  


====================================================================================================>

Check permissions for intermediate directories on Linux/UNIX when troubleshooting permission problems
By Surya01:03No comments
I've seen several Linux/UNIX system administrators struggle with a scenario like this one:
A user reports to the administrator they are trying to "cd" in to a directory but keep getting permission denied:
$ cd /tmp/level1/level2/level3/level4/level5/level6
ksh: /tmp/level1/level2/level3/level4/level5/level6: Permission denied.
As the root user, the administartor checks the permissions on the directory:
# ls -ald /tmp/level1/level2/level3/level4/level5/level6
drwxrwxrwx    2 root     system          256 Dec 19 20:11 /tmp/level1/level2/level3/level4/level5/level6
The administrator see's the permissions are rwxrwxrwx (777) and can't figure out why the user is getting a permission denied message when they try to CD in to the directory.

What is going on here?   In order for a user to CD in to any directory on the system, they must also have at least read and execute permissions on EVERY parent directory all the way down to the root of the filesystem (/).

So in the example above the user can't access the directory because they don't have read and execute permissions on one of the parent directories.

An easy way to quickly see all the parent directory permissions is to run this one-liner as root (change the dir= to the directory you would like to check)

dir=/tmp/level1/level2/level3/level4/level5/level6; while [ "$dir" != "/" ]; do ls -ald $dir; dir=`dirname $dir`; done

When I run this in this example scenario, I get this output:
# dir=/tmp/level1/level2/level3/level4/level5/level6; while [ "$dir" != "/" ]; do ls -ald $dir; dir=`dirname $dir`; done
drwxrwxrwx    2 root     system          256 Dec 19 20:11 /tmp/level1/level2/level3/level4/level5/level6
drwxr-xr-x    3 root     system          256 Dec 19 20:11 /tmp/level1/level2/level3/level4/level5
drwxr-xr-x    3 root     system          256 Dec 19 20:11 /tmp/level1/level2/level3/level4
drwx------    3 root     system          256 Dec 19 20:11 /tmp/level1/level2/level3
drwxr-xr-x    3 root     system          256 Dec 19 20:11 /tmp/level1/level2
drwxr-xr-x    3 root     system          256 Dec 19 20:11 /tmp/level1
drwxrwxrwt   17 bin      bin            4096 Dec 19 20:25 /tmp
And I can quickly see the reason the user can't access  /tmp/level1/level2/level3/level4/level5/level6 is because the permissions on /tmp/level1/level2/level3 are too restrictive.  

====================================================================================================>

Script to Compare two files in and out
By Surya12:52No comments
In my day today activities  you may come across a situation where in you need to compare two files  either of below situations.

Q:
1)  List the entries which are in File A and not in File B
2) List the entries which are in File  B and not in File A
3) List the entries which are common in File A and File B
4) List the entries merging both File A and File B contents  with out duplicates.
Solution Shell Script:
#!/bin/sh
echo "Enter an Option from the below"
echo "enter Option 1 : to choose records which are in first file not there in second file"
echo "enter Option 2 : to choose records which are not there in first file and there in second file"
echo "enter Option 3 : to choose records which are common in both the file"
echo "enter Option 4 : to merge two files with unique records"
read option
echo "you have choosen option $option"
echo "enter first file name"
read first_file
echo "$first_file"
echo "enter second file name"
read second_file
echo "$second_file"
echo "enter output file name"
read output_filename

#### to choose records which are in first file not there in second file

fun_1(){
sort $first_file>${first_file}_sorted
sort $second_file>${second_file}_sorted
comm -23 ${first_file}_sorted ${second_file}_sorted>${output_filename}
}

#### to choose records which are not there in first file and there in second file

fun_2(){
sort $first_file>${first_file}_sorted
sort $second_file>${second_file}_sorted
comm -13 ${first_file}_sorted ${second_file}_sorted>${output_filename}
}

#### to choose records which are common in both the file

fun_3(){
sort $first_file>${first_file}_sorted
sort $second_file>${second_file}_sorted
comm -12 ${first_file}_sorted ${second_file}_sorted>${output_filename}
}

#### to merge two files with unique records

fun_4(){
sort $first_file $second_file|uniq>${output_filename}
}

#### check whether both the input files are exists and regular files then only we can proceed

if [ -f $first_file -a -f $second_file ];then
echo "both files are exists and regular files"

#### according to the chosen option function will be called

if [ $option -eq 1 -o $option -eq 2 -o $option -eq 3 -o $option -eq 4 ];then
fun_${option}
rm -f ${first_file}_sorted ${second_file}_sorted
else
echo "choose proper option"
fi

else
echo "mentioned input files are not correct "
fi
Execution &O/P
bash-4.2$ cat a.txt
ORANGE2009040910002|10|1
GREEN200903304001052|1101|2
GREEN200903304001053|1101|2
GREEN200903304001054|1101|2
GREEN200903304001055|1101|2
ORANGE2009040910001|10|3
ORANGE2009040910004|10|1
ORANGE2009040910006|10|1
ORANGE2009040910003|10|1
ORANGE2009040910008|10|1
ORANGE2009040910005|10|1
ORANGE2009040910010|10|1
ORANGE2009040910007|10|1
ORANGE2009040910012|10|1
GREEN200903304001052|1101|2
GREEN200903304001053|1101|2
GREEN200903304001054|1101|2
GREEN200903304001055|1101|2

bash-4.2$ cat b.txt
ORANGE2009040910002|10|1
ORANGE2009040910001|10|3
ORANGE2009040910004|10|1
ORANGE2009040910006|10|1
ORANGE2009040910003|10|1
ORANGE2009040910008|10|1
ORANGE2009040910005|10|1
ORANGE2009040910010|10|1
ORANGE2009040910007|10|1
ORANGE2009040910012|10|1
GREEN200903304001008|1101|2
GREEN200903304001007|1101|2
GREEN200903304001010|1101|2
GREEN200903304001009|1101|2
GREEN200903304001011|1101|2
GREEN200903304001012|1101|2
GREEN200903304001014|1101|2

Execution:

bash-4.2$ comm.sh
Enter an Option from the below
enter Option 1 : to choose records which are in first file not there in second file
enter Option 2 : to choose records which are not there in first file and there in second file
enter Option 3 : to choose records which are common in both the file
enter Option 4 : to merge two files with unique records
3
you have choose option 3
enter first file name
a.txt
a.txt
enter second file name
b.txt
b.txt
enter output file name
c.txt
both files are exists and regular files

bash-4.2$ cat c.txt
ORANGE2009040910001|10|3
ORANGE2009040910002|10|1
ORANGE2009040910003|10|1
ORANGE2009040910004|10|1
ORANGE2009040910005|10|1
ORANGE2009040910006|10|1
ORANGE2009040910007|10|1
ORANGE2009040910008|10|1
ORANGE2009040910010|10|1
ORANGE2009040910012|10|1

====================================================================================================>

Merging lines in two files
By Surya13:24No comments
merge 1st line file1  2nd line as 1st line of 2nd file 

#! /bin/sh
echo "enter the first file name"
read first_file
echo "enter the second file name"
read second_file
echo "$first_file  $second_file"
echo "enter output file name"
read out_file

merge(){
paste -d"\n" $first_file $second_file|sed -e '/^$/d'>$out_file
}

merge;


I/P:

cat file1
aaa
bbb
ccc
bash-4.2$ cat file2
a
b
c
d
e

execution:

bash-4.2$ merge.sh
enter the first file name
file1
enter the second file name
file2
file1  file2
enter output file name
out

O/P:

bash-4.2$ cat out
aaa
a
bbb
b
ccc
c
d
e

======================================================================================================================================
Unsuccess login 

I made this script to check hopefully this helps someone else out:

#!/bin/sh

###############################################################################
# Script Name: aix_chk_user_expires.sh
#
# Author: Chris Alderson
#
# Purpose: Check when a user expires in AIX
#
# NOTES: Please change the value of $oozer to the id you desire to check against
#
##############################################################################

# Set value to specify a user

oozer='SOCVA'

#get epoch time for the time since last updated
time_since_last_update_in_epoch=$(lssec -f /etc/security/passwd -s $oozer -a lastupdate | cut -d= -f2)
#get the max age number of weeks from luser
max_age=$(lsuser -f $oozer | grep maxage | cut -d= -f2)
#multiply maxage by 7 to get number of days password will last
max_age_in_days=$(echo $((( max_age * 7 ))))
# multiply number of days by how many seconds in a day to get total seconds until change
# We will use this later to add to $time_since_last_update_in_epoch
max_age_in_epoch=$(echo $((( $max_age_in_days * 86400 ))) )
# Create new variable to store the total of max age in seconds and epoch of updated password
time_until_expires_in_epoch=$(echo $((( $max_age_in_epoch + $time_since_last_update_in_epoch ))))

#take epoch times and pass them to perl to give them a readible format
time_last_updated=$(perl -le 'print scalar localtime $ARGV[0]' ${time_since_last_update_in_epoch})


if [[ $max_age -eq 0 ]]; then

    time_of_expiration=$(echo "non-expiring password")
else
    ##take epoch times and pass them to perl to give them a readible format
    time_of_expiration=$(perl -le 'print scalar localtime $ARGV[0]' ${time_until_expires_in_epoch})
fi



echo "${oozer}'s password last updated: $time_last_updated"
echo "${oozer}'s password will expire: $time_of_expiration"
Output looks like this:

user's password last updated: Mon Jul 31 17:00:13 2017
user's password will expire: Mon Oct 23 17:00:13 2017


=========================================================================================================================================================================>

bash-4.2$ cat /home/trickle/SBEDWPSFTP.sh
#!/bin/bash
DAT1=`date`
cd /data/REPORTS_DATA/OAO/INCOMING
TODAYDATE=`date +%Y%m%d`
MON_YR=`date +%b" "%d`
logfile="/data/REPORTS/SBIMOB_$TODAYDATE"
echo "Script Started at $TODAYDATE"
echo "-------------------------------"
filecnt=`ls -ltr | grep "$MON_YR" |awk '{print $9}' |wc -l`
if [ $filecnt -gt 1 ]
then
for i in `ls -ltr | grep "$MON_YR" |awk '{print $9}'`
do
cp -pr $i /data/users/polling/.
echo $i >> SbiMobFileList.csv
cd /data/users/polling
/usr/bin/sftp inb@10.0.235.80 << EOF
cd /data/INB/ftp
lcd /data/users/polling
put $i
EOF
done
fi


#0 7 * * * /usr/bin/sh /home/SBIINBfileupload.sh >>/tmp/SBIINBfileupload.txt

=========================================================================================================================================================================>
oozer='SOCVA'
time_since_last_update_in_epoch=$(lssec -f /etc/security/passwd -s $oozer -a lastupdate | cut -d= -f2)
max_age=$(lsuser -f $oozer | grep maxage | cut -d= -f2)
max_age_in_days=$(echo $((( max_age * 7 ))))
max_age_in_epoch=$(echo $((( $max_age_in_days * 86400 ))) )
time_until_expires_in_epoch=$(echo $((( $max_age_in_epoch + $time_since_last_update_in_epoch ))))
time_last_updated=$(perl -le 'print scalar localtime $ARGV[0]' ${time_since_last_update_in_epoch})

for i in `cat ip.txt`;
	do 
		echo "========$i=========";
		ssh -t -q  addmitam@$i "sudo lsuser $oozer;
		sudo cat /etc/passwd |grep $oozer;sudo lsuser $oozer;
		sudo 
		
if [[ $max_age -eq 0 ]]; then

    time_of_expiration=$(echo "non-expiring password")
else
    time_of_expiration=$(perl -le 'print scalar localtime $ARGV[0]' ${time_until_expires_in_epoch})
fi



echo "${oozer}'s password last updated: $time_last_updated"
echo "${oozer}'s password will expire: $time_of_expiration"


done >> /tmp/output_successful_change_SOCVA12_count.txt

Output looks like this:

user's password last updated: Mon Jul 31 17:00:13 2017
user's password will expire: Mon Oct 23 17:00:13 2017


=========================================================================================================================================================================>

------------------------RHEL------------------------------------------------
#!/bin/bash
DS_AGENT_STATUS=$(systemctl status ds_agent.service | grep -i active | awk '{print $2}' | tail -1)
if [ "$DS_AGENT_STATUS" = "active" ]; then
    VALUE=1
    DS_AGENT_STATUS="Active"
else
    VALUE=0
      DS_AGENT_STATUS="Inactive"
fi
echo "host.DSAgent_Status,ds_agent_status=$DS_AGENT_STATUS $VALUE" | /opt/dynatrace/oneagent/agent/tools/dynatrace_ingest --verbose
-----------------------------------------------------------------------------
Please find below sh script for DS agent status monitoring in AIX and Linux.

------------AIX-------------------------------------------

#!/bin/bash
DS_AGENT_STATUS=$(lssrc -s ds_agent |  grep -i active | awk '{print $3}' | tail -1)
if [ $? -ne 0 ]; then
    VALUE=0
    DS_AGENT_STATUS="Inactive"
else
    VALUE=1
      DS_AGENT_STATUS="Active"
fi
echo "host.DSAgent_Status,ds_agent_status=$DS_AGENT_STATUS $VALUE" | /opt/dynatrace/oneagent/agent/tools/dynatrace_ingest --verbose

------------AIX-------------------------------------------

------------LINUX-------------------------------------------

#!/bin/bash
DS_AGENT_STATUS=$(systemctl status ds_agent.service | grep -i running | awk '{print $3}' | tail -1)
if [ $? -ne 0 ]; then
    VALUE=0
    DS_AGENT_STATUS="Inactive"
else
    VALUE=1
      DS_AGENT_STATUS="Active"
fi
echo "host.DSAgent_Status,ds_agent_status=$DS_AGENT_STATUS $VALUE" | /opt/dynatrace/oneagent/agent/tools/dynatrace_ingest --verbose

------------LINUX-------------------------------------------

=========================================================================================================================================================================>
================================================================================================================================
EDR

#!/bin/bash
EDR_STATUS=$(systemctl status tmxbc |  grep -i active | awk '{print $3}' | tail -1)
if [ "$EDR_STATUS" = "active" ]; then
    VALUE=1
    EDR_STATUS="Active"
else
    VALUE=0
  EDR_STATUS="Inactive"
fi
echo "host.DSAgent_Status,edr_status=$EDR_STATUS $VALUE" | /opt/dynatrace/oneagent/agent/tools/dynatrace_ingest --verbose


Splunkd status:

#!/bin/bash
SPLUNKD_STATUS=$(/opt/splunkforwarder/bin/splunk status | grep -i splunkd | awk '{print $3}')
if [ "$SPLUNKD_STATUS" = "running" ]; then
    VALUE=1
    SPLUNKD_STATUS="Running"
else
    VALUE=0
  SPLUNKD_STATUS="Not Running"
fi
echo "host.SPLUNKD_STATUS,splunkd_status=$SPLUNKD_STATUS $VALUE" | /opt/dynatrace/oneagent/agent/tools/dynatrace_ingest --verbose


splunk helper:
#!/bin/bash

SPLUNK_HELPER_STATUS=$(/opt/splunkforwarder/bin/splunk status | grep -i "splunk helpers" | awk '{print $4}')
if [ "$SPLUNK_HELPER_STATUS" = "running" ]; then
    VALUE=1
    SPLUNK_HELPER_STATUS="Running"
else
    VALUE=0
  SPLUNK_HELPER_STATUS="Not Running"
fi
echo "host.SPLUNK_HELPER_STATUS,splunk_helper_status=$SPLUNKD_STATUS $VALUE" | /opt/dynatrace/oneagent/agent/tools/dynatrace_ingest --verbose

================================================================================================================================
Splunk(AIX/RHEL):10.176.106.75/10.176.32.123
=====================================================================================================================
#!/bin/bash
SPLUNKD_STATUS=$(/opt/splunkforwarder/bin/splunk status | grep -i splunkd | awk '{print $3}')
if [ "$SPLUNKD_STATUS" = "running" ]; then
    VALUE=1
    SPLUNKD_STATUS="Active"
else
    VALUE=0
	SPLUNKD_STATUS="Inactive"
fi
echo "host.SPLUNKD_STATUS,splunkd_status=$SPLUNKD_STATUS $VALUE" | /opt/dynatrace/oneagent/agent/tools/dynatrace_ingest --verbose

=====================================================================================================================

And EDR is installed on RHEL server only. Please find the below script for EDR.

EDR(RHEL):10.176.32.123
=====================================================================================================================
#!/bin/bash
EDR_STATUS=$(systemctl status tmxbc |grep -i active | awk '{print $3}' )
if [ "$EDR_STATUS" = "(running)" ]; then
    VALUE=1
    EDR_STATUS="Active"
else
    VALUE=0
      EDR_STATUS="Inactive"
fi
echo "host.EDR_Status,edr_status=$EDR_STATUS $VALUE" | /opt/dynatrace/oneagent/agent/tools/dynatrace_ingest --verbose

=====================================================================================================================

=========================================================================================================================================================================>
Commvault (AIX/RHEL):10.176.106.75/10.176.32.123
================================================================================================================================
#!/bin/bash
cvlaunchd_STATUS=$(commvault list | grep -i cvlaunchd | awk '{print $4}' )
cvd_STATUS=$(commvault list | grep -i cvd | awk '{print $4}' )
cvfwd_STATUS=$(commvault list | grep -i cvfwd | awk '{print $4}' )
ClMgrS_STATUS=$(commvault list | grep -i ClMgrS | awk '{print $4}' )
CvMountd_STATUS=$(commvault list | grep -i CvMountd | awk '{print $4}' )

if [[ "$cvlaunchd_STATUS" = "N/A" || "$cvd_STATUS" = "N/A" || "$cvfwd_STATUS" = "N/A" || "$ClMgrS_STATUS" = "N/A" || "$CvMountd_STATUS" = "N/A" ]]; then
    VALUE=0
    COMMVAULT_STATUS="Inactive"
else
    VALUE=1
		COMMVAULT_STATUS="Active"
fi

echo "host.Commvault_Status,commvault_status=$COMMVAULT_STATUS $VALUE" | /opt/dynatrace/oneagent/agent/tools/dynatrace_ingest --verbose

================================================================================================================================
​for i in `find /data/sftp_files/home/CORP_WS_UPLOAD/6420023/Files_Incoming -type f -mtime -1 -exec echo {} +`; do echo $i; chmod 777 $i; done &

================How to Backup Configuration Files on Remote Linux System===========================================================================================================>

# vi /home/daygeek/shell-script/configuration_files_backup.sh

#!/bin/bash
echo -e "Hold on...Server Configuration Check is running on..."
echo "========================================================"
touch /tmp/$(hostname)-configuration_output-$(date +%d%b%Y).txt
OUTPUT_FILE=$(ls  /tmp/$(hostname)-configuration_output-$(date +%d%b%Y).txt)
if [ -f $OUTPUT_FILE ]
then
cat /dev/null > $OUTPUT_FILE
echo -e "==================================General Commands OutPut==================================" >> $OUTPUT_FILE
echo "HOSTNAME-------: `hostname`" >> $OUTPUT_FILE
echo "IP-------------: `hostname -i`" >> $OUTPUT_FILE
echo "DATE-----------: `date`" >> $OUTPUT_FILE
echo "KERNEL---------: `uname -r`" >> $OUTPUT_FILE
echo -e "----------------------------/etc/hosts File OutPut----------------------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# cat /etc/hosts" >> $OUTPUT_FILE
cat /etc/hosts >> $OUTPUT_FILE

echo -e "\n==================================Disk Commands/Config File OutPut==================================" >> $OUTPUT_FILE
echo -e "\n----------------------------df -hT Command OutPut----------------------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# df -hT" >> $OUTPUT_FILE
df -hT >> $OUTPUT_FILE
echo -e "\n----------------------------blkid Command OutPut-----------------------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# blkid" >> $OUTPUT_FILE
blkid >> $OUTPUT_FILE
echo -e "\n----------------------------lsblk Command OutPut-----------------------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# lsblk" >> $OUTPUT_FILE
lsblk >> $OUTPUT_FILE
echo -e "\n----------------------------PVS Command OutPut-------------------------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# pvs" >> $OUTPUT_FILE
pvs >> $OUTPUT_FILE
echo -e "\n----------------------------VGS Command OutPut-------------------------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# vgs" >> $OUTPUT_FILE
vgs >> $OUTPUT_FILE
echo -e "\n----------------------------LVS Command OutPut-------------------------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# lvs" >> $OUTPUT_FILE
lvs >> $OUTPUT_FILE
echo -e "\n----------------------------PVdisplay Command OutPut-------------------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# pvdisplay" >> $OUTPUT_FILE
pvdisplay >> $OUTPUT_FILE
echo -e "\n----------------------------VGdisplay Command OutPut-------------------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# vgdisplay" >> $OUTPUT_FILE
vgdisplay >> $OUTPUT_FILE
echo -e "\n----------------------------LVdisplay Command OutPut-------------------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# lvdisplay" >> $OUTPUT_FILE
lvdisplay >> $OUTPUT_FILE
echo -e "\n----------------------------lsscsi Command OutPut----------------------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# lsscsi --scsi --size" >> $OUTPUT_FILE
lsscsi --scsi --size >> $OUTPUT_FILE
echo -e "\n----------------------------mount Command OutPut-----------------------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# mount" >> $OUTPUT_FILE
mount >> $OUTPUT_FILE
echo -e "\n----------------------------/dev/mapper Devices OutPut-----------------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# ls -ltr /dev/mapper" >> $OUTPUT_FILE
ls -ltr /dev/mapper >> $OUTPUT_FILE
echo -e "\n----------------------------/proc/partitions OutPut--------------------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# cat /proc/partitions" >> $OUTPUT_FILE
cat /proc/partitions >> $OUTPUT_FILE
echo -e "\n----------------------------/etc/fstab File OutPut---------------------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# cat /etc/fstab" >> $OUTPUT_FILE
cat /etc/fstab >> $OUTPUT_FILE
echo -e "\n----------------------------/etc/sudoers File OutPut-------------------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# cat /etc/sudoers" >> $OUTPUT_FILE
cat /etc/sudoers >> $OUTPUT_FILE

echo -e "\n==================================Network Commands/Config File OutPut==================================" >> $OUTPUT_FILE
echo -e "\n----------------------------ip Command OutPut--------------------------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# ip a" >> $OUTPUT_FILE
ip a >> $OUTPUT_FILE
echo -e "\n----------------------------ip Command Customized OutPut---------------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# ip a | grep -i inet | grep -v inte6" >> $OUTPUT_FILE
ip a | grep -i inet | grep -v inte6 >> $OUTPUT_FILE
echo -e "\n----------------------------ip Command Customized OutPut-1-------------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# ip -br a" >> $OUTPUT_FILE
ip -br a >> $OUTPUT_FILE
echo -e "\n----------------------------ip route Command OutPut--------------------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# ip r" >> $OUTPUT_FILE
ip r >> $OUTPUT_FILE
echo -e "\n----------------------------ifconfig Command OutPut--------------------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# ifconfig -a" >> $OUTPUT_FILE
ifconfig -a >> $OUTPUT_FILE
echo -e "\n----------------------------netstat -ni Command OutPut-----------------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# netstat -ni" >> $OUTPUT_FILE
netstat -ni >> $OUTPUT_FILE
echo -e "\n----------------------------netstat -nr Command OutPut-----------------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# netstat -nr" >> $OUTPUT_FILE
netstat -nr >> $OUTPUT_FILE
echo -e "\n----------------------------netstat Command OutPut with Ports----------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# netstat -tplugn | grep -i LISTEN" >> $OUTPUT_FILE
netstat -tplugn | grep -i LISTEN >> $OUTPUT_FILE
echo -e "\n----------------------------List Network Script Files------------------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# ls -ltrh /etc/sysconfig/network-scripts/ifcfg-*" >> $OUTPUT_FILE
ls -ltrh /etc/sysconfig/network-scripts/ifcfg-* >> $OUTPUT_FILE
echo -e "\n----------------------------Print each Network Script file OutPut------------" >> $OUTPUT_FILE
for inet_file in `ls /etc/sysconfig/network-scripts/ifcfg-*`
do
echo "----------$inet_file----------" >> $OUTPUT_FILE
echo -e "[`hostname`]# $inet_file" >> $OUTPUT_FILE
cat $inet_file >> $OUTPUT_FILE
done

echo -e "\n==================================Kernel Commands/Config File OutPut==================================" >> $OUTPUT_FILE
echo -e "\n----------------------------sysctl Command OutPut----------------------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# sysctl -p" >> $OUTPUT_FILE
sysctl -p >> $OUTPUT_FILE
echo -e "\n----------------------------/etc/sysctl.conf File OutPut---------------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# cat /etc/sysctl.conf" >> $OUTPUT_FILE
cat /etc/sysctl.conf >> $OUTPUT_FILE

ps -ef | egrep 'pmon|LISTENER' | grep -v grep > /dev/null 2>&1
if [ $? -eq 0 ]
then
echo -e "\n==================================Oracle DB Commands/Config File OutPut==================================" >> $OUTPUT_FILE
echo -e "\n----------------------------Oracle Processes OutPut--------------------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# ps -ef | egrep 'pmon|LISTENER' | grep -v grep" >> $OUTPUT_FILE
ps -ef | egrep 'pmon|LISTENER' | grep -v grep >> $OUTPUT_FILE
echo -e "\n----------------------------oracleasm Command OutPut-------------------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# oracleasm listdisks" >> $OUTPUT_FILE
oracleasm listdisks >> $OUTPUT_FILE
echo -e "\n----------------------------Oracle Device file OutPut------------------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# ls -ltr /dev/oracleasm/disks" >> $OUTPUT_FILE
ls -ltr /dev/oracleasm/disks >> $OUTPUT_FILE
else
echo -e "\nThis is not an Oracle DB server..." >> $OUTPUT_FILE
fi

lscpu | grep -w '^Hypervisor vendor:'  > /dev/null 2>&1
if [ $? -ne 0 ]
then
echo -e "\n==================================Multipath Command OutPut==================================" >> $OUTPUT_FILE
echo -e "\n----------------------------multipath -ll Command OutPut---------------------" >> $OUTPUT_FILE
echo -e "[`hostname`]# multipath -ll" >> $OUTPUT_FILE
multipath -ll >> $OUTPUT_FILE
else
echo -e "\nThis is a VM (Virtual Machine), so multipath configuration is not applicable..." >> $OUTPUT_FILE
fi

echo -e "Configuration file backup has been completed and the OutPut file will be placed at '/home/daygeek/backup/' directory..."
echo "============================================Configuration file backup Script Completed====================================" >> $OUTPUT_FILE
else
echo "OutPut file isn't found, So exit the script" >> $OUTPUT_FILE
fi

==============Supporting nor helper script:==================================================================================================================>


# vi configuration_files_backup_PUSH.sh

#!/bin/bash
echo -e '\n'
echo "Please ENTER a list of 'HostName or IP' to take a configuration file backup, and press 'ctrl+d' to execute the script."
for server in `cat`
  do
    echo -e "\n$server\n=============>>"
	ssh -q -o StrictHostKeyChecking=no -o ConnectTimeout=5 -o "BatchMode yes" $server 'bash -s' < /home/daygeek/shell-script/configuration_files_backup.sh
	scp -pr "$server:/tmp/*-configuration_output-$(date +%d%b%Y).txt" "/home/daygeek/backup/"
  done
  
  
# sh /home/daygeek/shell-script/configuration_files_backup_PUSH.sh
Please ENTER a list of 'HostName or IP' to take a configuration file backup, and press 'ctrl+d' to execute the script.

CentOS7.2daygeek.com
CentOS8.2daygeek.com
=========================================================================================================================================================================>

Source Bash Script for User Addition:
vi /home/daygeek/shell-script/user_add.sh

#!/bin/bash
user_info=$(cat << EOF
mageshm:2gadmins:Local User | L3 Engineer (Magesh Maruthamuthu)
tanisha:2gadmins:Local User | L2 Engineer (Tanisha)
renusha:2gadmins:Local User | L1 Engineer (Renusha)
EOF
)
echo "$user_info" | while IFS=':' read -r user_ name group_name u_comments
  do
    id $user_name
      if [ $? -eq 0 ]
        then
          echo "User $user_name is already exist in system..."
        else
          echo "Creating $user_name....User"
          useradd -m -g "$group_name" -c "$u_comments" "$user_name"
          echo P@ssw0rd@`date +%d%b%Y` | passwd --stdin "$user_name"
          echo "$user_name Password is: P@ssw0rd@`date +%d%b%Y`"
          echo -e "\n"
      fi
  done
Remote call Bash Script:
vi /home/daygeek/shell-script/user_add_PUSH.sh

#!/bin/bash
echo -e '\n'
echo "Please ENTER a list of HostName or IP to create a user, and press 'ctrl+d' to execute the script."
for server in `cat`
  do
    echo -e "\n$server\n=============>>"
    ssh -q -o StrictHostKeyChecking=no -o ConnectTimeout=5 -o "BatchMode yes" $server 'bash -s' < /home/daygeek/shell-script/user_add.sh
  done

=========================================================================================================================================================================>
How to map LUN, Disk, LVM and FileSystem in Linux

vi block_device_mapping_with_LUN_FS_LVM.sh

#!/bin/bash
for bdevice in `lsblk | grep disk | awk '{print $1}' | grep -v 'sda'`
do
for mpoint in `lsblk /dev/$bdevice | grep lvm | awk '{print $NF}'`
do
LVM_INFO=`lvs -o +devices | grep -i $bdevice | awk '{print $1,$2}'`
LUN_ID=`lsscsi --scsi | grep $bdevice | awk '{print $NF}'`
echo "$bdevice --> $mpoint --> $LVM_INFO --> $LUN_ID"
done
done
Set an executable permission to ‘block_device_mapping_with_LUN_FS_LVM.sh’ file.

chmod +x block_device_mapping_with_LUN_FS_LVM.sh
Finally run the script to view the results.

sh block_device_mapping_with_LUN_FS_LVM.sh
=========================================================================================================================================================================>
#!/bin/bash
#####Tile :- SBI SCD V14
#####Purpose :- Implementation,Verification and artifacts collection of SCD V14 on RHEL 7 and AIX Servers
#####Version 14
if [ "$(id -u)" -ne 0 ]
then
        echo "=========================================="
        echo "Script needs to be executed with root user"
        echo "=========================================="
        exit
fi
if [ "$(uname)" == "Linux" ]
then
        ECHO="echo -e"
else
        ECHO="echo"
fi
cdate="$(date '+%d%m%Y_%H%M%S')"
DHM=$(date '+%d%m%Y_%H%M')
OKCOLOR="\033[42;30m"
KOCOLOR="\033[41;30m"
COCOLOR="\033[43;30m"
BASECOLOR="\033[40;37m"
EXIT_STATUS=0
printok()
        {
        $ECHO "$OKCOLOR $1 $BASECOLOR"
        }
printko()
        {
        $ECHO "$KOCOLOR $1 $BASECOLOR"
        }
output()
{
        $ECHO "Execute Command:- $cmd"
        $ECHO "Output:-"
        eval $cmd
        $ECHO ".........................................................................................................................."
}
msg_header()
{
        $ECHO "====================================================="
        $ECHO "$@"
        $ECHO "====================================================="
}
sub_msg_ok()
{
        $ECHO  "$OKCOLOR $@ $BASECOLOR --> $OKCOLOR PASS $BASECOLOR"
        $ECHO "....................................................."
}
sub_msg_ko()
{
        $ECHO "$KOCOLOR $@ $BASECOLOR --> $KOCOLOR FAILED $BASECOLOR"
        $ECHO "....................................................."
}
info_msg()
{
        $ECHO "$COCOLOR $@ $BASECOLOR"
        $ECHO "....................................................."
}
backup_file()
{
        SCD_BKP_DIR="/root/SCD14_bkp_config_$DHM"
        mkdir -p $SCD_BKP_DIR
        cp $1 $SCD_BKP_DIR/$(echo $1 | awk -F '/' '{print $NF}')_$DHM
}
check_status()
{
if [ $? -eq $EXIT_STATUS ]
then
        sub_msg_ok "$@"
else
        sub_msg_ko "$@"
fi
}

check_implement()
{
if [ $(grep "$@" $FILENAME | wc -l) -ge 1 ]
then
        sub_msg_ok "$CTRL_NO $@ $FILENAME"
else
        echo "$@"  | sed 's/*[[:space:]]*//g'>> $FILENAME
        sub_msg_ok "$CTRL_NO $@ $FILENAME"
fi
}

linux_implement()
{
        echo "======================================================================"
        echo "                LINUX SCD Implementation Started"
        echo "======================================================================"
        rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
        rpm -qa --last > $SCD_BKP_DIR/rpm_qa_last_"$DHM".txt
        sysctl -a >  $SCD_BKP_DIR/sysctl_a_"$DHM".txt 2>> /dev/null
        systemctl --all list-unit-files > $SCD_BKP_DIR/systemctl_all_list-unit-files_"$DHM".txt

        msg_header "2.1. Filesystem Configuration"

        cmd='chmod 1777 /tmp/ /var/tmp/ /dev/shm'
        EXIT_STATUS=0
        $cmd
        check_status 2.1.1 $cmd

        cmd='mount -o remount,nodev,nosuid,noexec /home /tmp'
        EXIT_STATUS=0
        $cmd
        check_status 2.1.2 $cmd

        backup_file /etc/fstab
        cmd="sed -i -e '/tmp.*/s/defaults.*/defaults,nodev,noexec,nosuid 1 2/g' /etc/fstab"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.3 $cmd
        cmd="sed -i -e '/home /s/defaults.*/defaults,nodev,noexec,nosuid 1 2/g' /etc/fstab"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.3 $cmd

        backup_file /etc/modprobe.d/CIS.conf
        CTRL_NO="2.1.4.1"
        CONFIG="install cramfs /bin/true"
        FILENAME="/etc/modprobe.d/CIS.conf"
        check_implement "$CONFIG"
        CTRL_NO="2.1.4.2"
        CONFIG="install freevxfs /bin/true"
        check_implement "$CONFIG"
        CTRL_NO="2.1.4.3"
        CONFIG="install jffs2 /bin/true"
        check_implement "$CONFIG"
        CTRL_NO="2.1.4.4"
        CONFIG="install hfs /bin/true"
        check_implement "$CONFIG"
        CTRL_NO="2.1.4.5"
        CONFIG="install hfsplus /bin/true"
        check_implement "$CONFIG"
        CTRL_NO="2.1.4.6"
        CONFIG="install squashfs /bin/true"
        check_implement "$CONFIG"

        msg_header "2.2. Configure Software Updates"
        backup_file /etc/yum.conf
        cmd='sed -i -e '/gpgcheck/s/gpgcheck.*/gpgcheck=1/' /etc/yum.conf'
        EXIT_STATUS=0
        $cmd
        check_status 2.2.1 $cmd
        backup_file /etc/yum.repos.d/base.repo
        cmd='sed -i -e '/gpgcheck/s/gpgcheck.*/gpgcheck=1/' /etc/yum.repos.d/base.repo'
        EXIT_STATUS=0
        $cmd
        check_status 2.2.2 $cmd

        msg_header "2.3. Advanced Intrusion Detection Environment (AIDE)"
        cmd='yum install aide -y'
        EXIT_STATUS=0
        $cmd
        check_status 2.3.1 $cmd
        #cmd='aide --init && mv /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz &'
        #EXIT_STATUS=0
        #eval $cmd
        #check_status 2.3.2 $cmd

        msg_header "3.1. Remove Legacy Services"
        cmd='systemctl disable telnet.socket'
        EXIT_STATUS=1
        eval $cmd
        check_status 3.1.1 $cmd

        cmd='yum erase telnet* -y'
        EXIT_STATUS=0
        eval $cmd
        check_status 3.1.2 $cmd
        cmd='yum erase rsh -y'
        EXIT_STATUS=0
        eval $cmd
        check_status 3.1.3 \& 3.1.4 $cmd
        cmd='yum erase ypbind -y'
        EXIT_STATUS=0
        eval $cmd
        check_status 3.1.5 $cmd
        cmd='yum erase ypserv -y'
        EXIT_STATUS=0
        eval $cmd
        check_status 3.1.6 $cmd
        cmd='systemctl disable tftp.socket'
        EXIT_STATUS=1
        eval $cmd
        check_status 3.1.7 $cmd
        cmd='yum erase tftp-server -y'
        EXIT_STATUS=0
        eval $cmd
        check_status 3.1.8 $cmd
        cmd='yum erase talk -y'
        EXIT_STATUS=0
        eval $cmd
        check_status 3.1.9 $cmd
        cmd='yum erase ntalk -y'
        EXIT_STATUS=0
        eval $cmd
        check_status 3.1.10 $cmd
        cmd='yum erase xinetd -y'
        EXIT_STATUS=0
        eval $cmd
        check_status 3.1.11 3.1.12 3.1.13 3.1.14 3.1.15 3.1.16 3.1.17  $cmd
        cmd='systemctl disable tcpmux-server'
        EXIT_STATUS=1
        eval $cmd
        check_status 3.1.18 $cmd
        cmd='rpm -e $(rpm -qa | grep  xorg-x11*) --nodeps'
        EXIT_STATUS=1
        eval $cmd
        check_status 3.1.19 $cmd
        cmd='yum erase avahi -y'
        EXIT_STATUS=0
        eval $cmd
        check_status 3.1.20 $cmd
        cmd='yum erase cups -y'
        EXIT_STATUS=0
        eval $cmd
        check_status 3.1.21 $cmd
        cmd='yum erase dhcp -y'
        EXIT_STATUS=0
        eval $cmd
        check_status 3.1.22 $cmd
        cmd='yum erase openldap-servers -y'
        EXIT_STATUS=0
        eval $cmd
        check_status 3.1.23 $cmd
        #cmd='yum erase nfs-utils rpcbind -y'
        #EXIT_STATUS=0
        #eval $cmd
        #check_status 3.1.24 $cmd
      	#cmd='yum erase bind -y'
        #EXIT_STATUS=0
        #eval $cmd
        #check_status 3.1.25 $cmd
        cmd='yum erase vsftpd -y'
        EXIT_STATUS=0
        eval $cmd
        check_status 3.1.26 $cmd
        #cmd='yum erase httpd -y'
        #EXIT_STATUS=0
        #eval $cmd
        #check_status 3.1.27 $cmd
        cmd='yum erase dovecot -y'
        EXIT_STATUS=0
        eval $cmd
        check_status 3.1.28 $cmd
        cmd='yum erase samba -y'
        EXIT_STATUS=0
        eval $cmd
        #check_status 3.1.29 $cmd
        #cmd='yum erase squid -y'
        #EXIT_STATUS=0
        #eval $cmd
        check_status 3.1.30 $cmd
        cmd='yum erase snmpd -y'
        EXIT_STATUS=0
        eval $cmd
        check_status 3.1.31 $cmd

        msg_header 4.1. Configure Network Time Protocol
        cmd="sed -i 's/^OPTIONS=.*/OPTIONS=\"-u chrony\"/g' /etc/sysconfig/chronyd || echo 'OPTIONS=\"-u chrony\"' >> /etc/sysconfig/chronyd"
        eval $cmd
        check_status 4.1 $cmd

        msg_header 4.2. Configure Mail Transfer Agent for Local-Only Mode
        backup_file /etc/postfix/main.cf
        cmd="sed -i -e '/^inet_interfaces/s/inet_interfaces.*/inet_interfaces = localhost/g' /etc/postfix/main.cf"
        EXIT_STATUS=0
        eval $cmd
        check_status 4.2.1 $cmd
        cmd="systemctl restart postfix"
        EXIT_STATUS=0
        eval $cmd
        check_status 4.2.2 $cmd

        msg_header 4.3. Check for Unconfined Daemons
        cmd='ps -eZ | egrep "initrc" | egrep -vw "tr|ps|egrep|bash|awk" | tr ":" " " | awk "{ print $NF }"'
        EXIT_STATUS=0
        echo -e "$COCOLOR"
        eval $cmd
        echo -e "$BASECOLOR"
        check_status 4.3. $cmd

        msg_header 5. Network Configuration and Firewalls
        backup_file /etc/sysctl.conf
        cmd="/sbin/sysctl -w net.ipv4.ip_forward=0;/sbin/sysctl -w net.ipv4.conf.all.send_redirects=0;/sbin/sysctl -w net.ipv4.conf.default.send_redirects=0;/sbin/sysctl -w net.ipv4.conf.all.accept_source_route=0;/sbin/sysctl -w net.ipv4.conf.default.accept_source_route=0;/sbin/sysctl -w net.ipv4.conf.all.accept_redirects=0;/sbin/sysctl -w net.ipv4.conf.default.accept_redirects=0;/sbin/sysctl -w net.ipv4.conf.all.secure_redirects=0;/sbin/sysctl -w net.ipv4.conf.default.secure_redirects=0;/sbin/sysctl -w net.ipv4.conf.all.log_martians=1;/sbin/sysctl -w net.ipv4.conf.default.log_martians=1;/sbin/sysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1;/sbin/sysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1;/sbin/sysctl -w net.ipv4.conf.all.rp_filter=1;/sbin/sysctl -w net.ipv4.conf.default.rp_filter=1;/sbin/sysctl -w net.ipv4.tcp_syncookies=1;/sbin/sysctl -w net.ipv6.conf.all.accept_ra=0;/sbin/sysctl -w net.ipv6.conf.default.accept_ra=0;/sbin/sysctl -w net.ipv6.conf.all.accept_redirects=0;/sbin/sysctl -w net.ipv6.conf.default.accept_redirects=0;/sbin/sysctl -w net.ipv6.conf.all.disable_ipv6=1"
        EXIT_STATUS=0
        eval $cmd
        check_status 5.1 5.2 $cmd
        for i in net.ipv4.ip_forward*[[:space:]]*=*[[:space:]]*0 net.ipv4.conf.all.send_redirects*[[:space:]]*=*[[:space:]]*0 net.ipv4.conf.default.send_redirects*[[:space:]]*=*[[:space:]]*0 net.ipv4.conf.all.accept_source_route*[[:space:]]*=*[[:space:]]*0 net.ipv4.conf.default.accept_source_route*[[:space:]]*=*[[:space:]]*0 net.ipv4.conf.all.accept_redirects*[[:space:]]*=*[[:space:]]*0 net.ipv4.conf.default.accept_redirects*[[:space:]]*=*[[:space:]]*0 net.ipv4.conf.all.secure_redirects*[[:space:]]*=*[[:space:]]*0 net.ipv4.conf.default.secure_redirects*[[:space:]]*=*[[:space:]]*0 net.ipv4.conf.all.log_martians*[[:space:]]*=*[[:space:]]*1 net.ipv4.conf.default.log_martians*[[:space:]]*=*[[:space:]]*1 net.ipv4.icmp_echo_ignore_broadcasts*[[:space:]]*=*[[:space:]]*1 net.ipv4.icmp_ignore_bogus_error_responses*[[:space:]]*=*[[:space:]]*1 net.ipv4.conf.all.rp_filter*[[:space:]]*=*[[:space:]]*1 net.ipv4.conf.default.rp_filter*[[:space:]]*=*[[:space:]]*1 net.ipv4.tcp_syncookies*[[:space:]]*=*[[:space:]]*1 net.ipv6.conf.all.accept_ra*[[:space:]]*=*[[:space:]]*0 net.ipv6.conf.default.accept_ra*[[:space:]]*=*[[:space:]]*0 net.ipv6.conf.all.accept_redirects*[[:space:]]*=*[[:space:]]*0 net.ipv6.conf.default.accept_redirects*[[:space:]]*=*[[:space:]]*0 net.ipv6.conf.all.disable_ipv6*[[:space:]]*=*[[:space:]]*1
        do
                cmd="grep -q "$i" /etc/sysctl.conf || echo "$i" | sed 's/\*\[\[\:space\:\]\]\*/ /g' >> /etc/sysctl.conf"
                EXIT_STATUS=0
                eval $cmd
                check_status 5.1 5.2 $cmd
        done
        #msg_header 5.3. Install TCP Wrappers
        #cmd="echo 'ALL: ALL' > /etc/hosts.deny;chown root:root /etc/hosts.allow;chmod 644 /etc/hosts.allow;chown root:root /etc/hosts.deny;chmod 644 /etc/hosts.deny"
        #EXIT_STATUS=0
        #eval $cmd
        #check_status 5.3 $cmd

        msg_header 5.4. Uncommon Network Protocols
        CTRL_NO="5.4.1"
        CONFIG="install dccp /bin/true"
        FILENAME="/etc/modprobe.d/CIS.conf"
        check_implement "$CONFIG"
        CTRL_NO="5.4.2"
        CONFIG="install sctp /bin/true"
        FILENAME="/etc/modprobe.d/CIS.conf"
        check_implement "$CONFIG"
        CTRL_NO="5.4.3"
        CONFIG="install rds /bin/true"
        FILENAME="/etc/modprobe.d/CIS.conf"
        check_implement "$CONFIG"
        CTRL_NO="5.4.4"
        CONFIG="install tipc /bin/true"
        FILENAME="/etc/modprobe.d/CIS.conf"
        check_implement "$CONFIG"

        msg_header 5.5. Enable Server Firewall
        cmd="systemctl enable firewalld && systemctl restart firewalld"
        EXIT_STATUS=0
        eval $cmd
        check_status 5.5 $cmd

        msg_header 6.1. Configure rsyslog
        cmd="yum install rsyslog rsyslog-ng -y"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.1.1 $cmd
        cmd="systemctl enable rsyslog"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.1.2 $cmd

        backup_file /etc/rsyslog.conf
        for i in auth,user.\*[[:space:]]*/var/log/messages kern.\*[[:space:]]*/var/log/kern.log daemon.\*[[:space:]]*/var/log/daemon.log syslog.\*[[:space:]]*/var/log/syslog lpr,news,uucp,local0,local1,local2,local3,local4,local5,local6.\*[[:space:]]*/var/log/unused.log
        do
              cmd="grep -q "^$i" /etc/rsyslog.conf || echo "$i" | sed 's/\[\[\:space\:\]\]\*/ /g' >> /etc/rsyslog.conf"
              EXIT_STATUS=0
              eval $cmd
              check_status 6.1.3 $cmd
        done
        cmd="pkill -HUP rsyslogd"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.1.3 $cmd
        cmd="chown root:root /var/log/messages /var/log/kern.log /var/log/daemon.log /var/log/syslog /var/log/unused.log; chmod og-rwx /var/log/messages /var/log/kern.log /var/log/daemon.log /var/log/syslog /var/log/unused.log"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.1.4 $cmd
        for i in \$ModLoad*[[:space:]]*imtcp.so \$InputTCPServerRun*[[:space:]]*514 \$WorkDirectory*[[:space:]]*/var/lib/rsyslog
        do
              cmd="grep -q "^\\$i" /etc/rsyslog.conf || echo "\\$i" | sed 's/\*\[\[\:space\:\]\]\*/ /g' >> /etc/rsyslog.conf"
              EXIT_STATUS=0
              eval $cmd
              check_status 6.1.7 $cmd
        done
        cmd="pkill -HUP rsyslogd"
        EXIT_STATUS=0
        eval $cmd

        msg_header 6.2. Configure System Accounting
        cmd="systemctl enable auditd"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.1 $cmd

        cmd="sed -i -e 's/^max_log_file*[[:space:]]*=.*/max_log_file = 8/g' -e 's/^space_left_action*[[:space:]]*=.*/space_left_action = email/g' -e 's/action_mail_acct*[[:space:]]*=.*/action_mail_acct = root/g' -e 's/max_log_file_action*[[:space:]]*=.*/max_log_file_action = keep_logs/g' /etc/audit/auditd.conf"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.1 $cmd

        cmd="grep -q '^-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.1 $cmd
        cmd="grep -q '^-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.1 $cmd
        cmd="grep -q '^-a always,exit -F arch=b32 -S clock_settime -k time-change -w /etc/localtime -p wa -k time-change' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b32 -S clock_settime -k time-change -w /etc/localtime -p wa -k time-change' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.1 $cmd
        cmd="grep -q '^-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.2 $cmd
        cmd="grep -q '^-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.2 $cmd
        cmd="grep -q '^-a always,exit -F arch=b64 -S clock_settime -k time-change' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b64 -S clock_settime -k time-change' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.2 $cmd
        cmd="grep -q '^-a always,exit -F arch=b32 -S clock_settime -k time-change' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b32 -S clock_settime -k time-change' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.2 $cmd
        cmd="grep -q '^-w /etc/localtime -p wa -k time-change' /etc/audit/rules.d/audit.rules || echo '-w /etc/localtime -p wa -k time-change' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.2 $cmd
        cmd="grep -q '^-w /etc/group -p wa -k identity' /etc/audit/rules.d/audit.rules || echo '-w /etc/group -p wa -k identity' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.3 $cmd
        cmd="grep -q '^-w /etc/passwd -p wa -k identity' /etc/audit/rules.d/audit.rules || echo '-w /etc/passwd -p wa -k identity' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.3 $cmd
        cmd="grep -q '^-w /etc/gshadow -p wa -k identity' /etc/audit/rules.d/audit.rules || echo '-w /etc/gshadow -p wa -k identity' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.3 $cmd
        cmd="grep -q '^-w /etc/shadow -p wa -k identity' /etc/audit/rules.d/audit.rules || echo '-w /etc/shadow -p wa -k identity' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.3 $cmd
        cmd="grep -q '^-w /etc/security/opasswd -p wa -k identity' /etc/audit/rules.d/audit.rules || echo '-w /etc/security/opasswd -p wa -k identity' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.3 $cmd
        cmd="grep -q '^-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.4 $cmd
        cmd="grep -q '^-w /etc/issue -p wa -k system-locale' /etc/audit/rules.d/audit.rules || echo '-w /etc/issue -p wa -k system-locale' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.4 $cmd
        cmd="grep -q '^-w /etc/issue.net -p wa -k system-locale' /etc/audit/rules.d/audit.rules || echo '-w /etc/issue.net -p wa -k system-locale' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.4 $cmd
        cmd="grep -q '^-w /etc/hosts -p wa -k system-locale' /etc/audit/rules.d/audit.rules || echo '-w /etc/hosts -p wa -k system-locale' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.4 $cmd
        cmd="grep -q '^-w /etc/sysconfig/network -p wa -k system-locale' /etc/audit/rules.d/audit.rules || echo '-w /etc/sysconfig/network -p wa -k system-locale' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.4 $cmd
        cmd="grep -q '^-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.4 $cmd
        cmd="grep -q '^-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.4 $cmd
        cmd="grep -q '^-w /etc/issue -p wa -k system-locale' /etc/audit/rules.d/audit.rules || echo '-w /etc/issue -p wa -k system-locale' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.4 $cmd
        cmd="grep -q '^-w /etc/issue.net -p wa -k system-locale' /etc/audit/rules.d/audit.rules || echo '-w /etc/issue.net -p wa -k system-locale' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.4 $cmd
        cmd="grep -q '^-w /etc/hosts -p wa -k system-locale' /etc/audit/rules.d/audit.rules || echo '-w /etc/hosts -p wa -k system-locale' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.4 $cmd
        cmd="grep -q '^-w /etc/sysconfig/network -p wa -k system-locale' /etc/audit/rules.d/audit.rules || echo '-w /etc/sysconfig/network -p wa -k system-locale' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.4 $cmd
        cmd="grep -q '^-w /etc/selinux/ -p wa -k MAC-policy' /etc/audit/rules.d/audit.rules || echo '-w /etc/selinux/ -p wa -k MAC-policy' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.5 $cmd
        cmd="grep -q '^-w /var/log/lastlog -p wa -k logins' /etc/audit/rules.d/audit.rules || echo '-w /var/log/lastlog -p wa -k logins' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.6 $cmd
        cmd="grep -q '^-w /var/run/faillock/ -p wa -k logins' /etc/audit/rules.d/audit.rules || echo '-w /var/run/faillock/ -p wa -k logins' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.6 $cmd
        cmd="grep -q '^-w /var/run/utmp -p wa -k session' /etc/audit/rules.d/audit.rules || echo '-w /var/run/utmp -p wa -k session' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.7 $cmd
        cmd="grep -q '^-w /var/log/wtmp -p wa -k session' /etc/audit/rules.d/audit.rules || echo '-w /var/log/wtmp -p wa -k session' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.7 $cmd
        cmd="grep -q '^-w /var/log/btmp -p wa -k session' /etc/audit/rules.d/audit.rules || echo '-w /var/log/btmp -p wa -k session' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.7 $cmd
        cmd="grep -q '^-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.8 $cmd
        cmd="grep -q '^-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.8 $cmd
        cmd="grep -q '^-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.8 $cmd
        cmd="grep -q '^-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.8 $cmd
        cmd="grep -q '^-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.8 $cmd
        cmd="grep -q '^-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.8 $cmd
        cmd="grep -q '^-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.9 $cmd
        cmd="grep -q '^-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.9 $cmd
        cmd="grep -q '^-w /etc/sudoers -p wa -k scope' /etc/audit/rules.d/audit.rules || echo '-w /etc/sudoers -p wa -k scope' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.10 $cmd
        cmd="grep -q '^-w /etc/sudoers.d -p wa -k scope' /etc/audit/rules.d/audit.rules || echo '-w /etc/sudoers.d -p wa -k scope' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.10 $cmd
        cmd="grep -q '^-w /var/log/sudo.log -p wa -k actions' /etc/audit/rules.d/audit.rules || echo '-w /var/log/sudo.log -p wa -k actions' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.10 $cmd
        cmd="pkill -HUP -P1 auditd; service auditd restart"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.3 $cmd

        msg_header 6.4. Ensure file deletion events by users are collected
        cmd="grep -q '^-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.4.1 $cmd
        cmd="grep -q '^-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.4.2 $cmd
        cmd="grep -q '^-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.4.3 $cmd
        cmd="grep -q '^-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.4.4 $cmd


        msg_header 6.3. Ensure the audit configuration is immutable
        cmd="sed -i -e '/^-e 2/d' /etc/audit/rules.d/audit.rules;echo '-e 2' >> /etc/audit/rules.d/audit.rules;pkill -HUP -P1 auditd; service auditd restart"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.3 $cmd

        msg_header 6.6. Ensure auditing for processes that start prior to auditd is enabled
        cmd="grep -q 'audit=1' /etc/default/grub"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.6 $cmd

        msg_header 6.7. Ensure auditd service is enabled
        cmd="systemctl enable auditd"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.7 $cmd

        msg_header 6.8. Ensure system is disabled when audit logs are full
        cmd="sed -i -e 's/^space_left_action*[[:space:]]*=.*/space_left_action = email/g' -e 's/^action_mail_acct*[[:space:]]*=.*/action_mail_acct = root/g' -e 's/admin_space_left_action*[[:space:]]*=.*/admin_space_left_action = halt/g' /etc/audit/auditd.conf"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.8 $cmd

        msg_header 7.1. Restrict access to Cron
        cmd="chown root:root /etc/crontab;chmod 640 /etc/crontab"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.1 $cmd

        msg_header 7.2. Configure SSH
        backup_file /etc/ssh/sshd_config
        cmd="sed -i -e 's/^Protocol*[[:space:]].*/Protocol 2/g' -e 's/^LogLevel*[[:space:]].*/LogLevel INFO/g' -e 's/^X11Forwarding*[[:space:]].*/X11Forwarding no/g' -e 's/^MaxAuthTries*[[:space:]].*/MaxAuthTries 3/g' -e 's/IgnoreRhosts*[[:space:]].*/IgnoreRhosts yes/g' -e 's/HostbasedAuthentication*[[:space:]].*/HostbasedAuthentication no/g' -e 's/PermitUserEnvironment*[[:space:]].*/PermitUserEnvironment no/g' -e 's/^MACs*[[:space:]].*/MACs hmac-sha1,umac-64@openssh.com,hmac-ripemd160,hmac-sha2-256,hmac-sha2-512,hmac-ripemd160@openssh.com/g' -e 's/^ClientAliveInterval*[[:space:]].*/ClientAliveInterval 300/g' -e 's/^ClientAliveCountMax*[[:space:]].*/ClientAliveCountMax 0/g' -e 's/^MaxStartups*[[:space:]].*/MaxStartups 10:30:60/g' -e 's/^AllowTcpForwarding*[[:space:]].*/AllowTcpForwarding no/g' -e 's/^LoginGraceTime*[[:space:]].*/LoginGraceTime 60/g' -e 's/^#MaxSessions*[[:space:]].*/MaxSessions 10/g' -e 's/^Banner*[[:space:]].*/Banner \/etc\/issue.net/g' /etc/ssh/sshd_config; chown root:root /etc/ssh/sshd_config; chmod 644 /etc/ssh/sshd_config"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.2 $cmd
        for i in Protocol.*[[:space:]].*2 LogLevel.*[[:space:]].*INFO X11Forwarding.*[[:space:]].*no MaxAuthTries.*[[:space:]].*3 IgnoreRhosts.*[[:space:]].*yes HostbasedAuthentication.*[[:space:]].*no PermitUserEnvironment.*[[:space:]].*no ClientAliveInterval.*[[:space:]].*300 ClientAliveCountMax.*[[:space:]].*0 AllowTcpForwarding*[[:space:]].*no LoginGraceTime*[[:space:]].*60 MaxSessions*[[:space:]].*10 MaxStartups*[[:space:]].*10:30:60 Banner.*[[:space:]].*/etc/issue.net Port.*[[:space:]].*22 Port.*[[:space:]].*27041 MACs.*[[:space:]].*hmac-sha1,umac-64@openssh.com,hmac-ripemd160,hmac-sha2-256,hmac-sha2-512,hmac-ripemd160@openssh.com Ciphers.*[[:space:]].*aes128-ctr,aes192-ctr,aes256-ctr AllowGroups DenyUsers DenyGroups
        do
              cmd="grep -q "^$i" /etc/ssh/sshd_config || echo "$i" | sed 's/\.\*\[\[\:space\:\]\]\.\*/ /g' >> /etc/ssh/sshd_config"
              EXIT_STATUS=0
              eval $cmd
              check_status 7.2 $cmd
        done

        msg_header 7.3. Configure PAM
        backup_file /etc/pam.d/password-auth-ac
        backup_file /etc/pam.d/system-auth-ac
        cmd="authconfig --passalgo=sha512 --update"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.3.1 $cmd
        for i in retry=3 try_first_pass
        do
              cmd="grep -q \"^password.*[[:space:]].*requisite.*[[:space:]].*pam_pwquality.so.*[[:space:]].*$i\" /etc/pam.d/password-auth-ac || sed -i \"/^password.*[[:space:]].*requisite.*[[:space:]].*pam_pwquality.so.*[[:space:]].*/s/$/ $i/g\"  /etc/pam.d/password-auth-ac"
              EXIT_STATUS=0
              eval $cmd
              check_status 7.3.2 7.3.4 7.3.5 $cmd
        done
        cmd="grep -q \"^password.*[[:space:]].*requisite.*[[:space:]].*pam_pwquality.so\" /etc/pam.d/password-auth-ac || echo 'password requisite pam_pwquality.so try_first_pass retry=3' >> /etc/pam.d/password-auth-ac"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.3.2 7.3.4 7.3.5 $cmd
        for i in retry=3 try_first_pass
        do
              cmd="grep -q \"^password.*[[:space:]].*requisite.*[[:space:]].*pam_pwquality.so.*[[:space:]].*$i\" /etc/pam.d/system-auth-ac || sed -i \"/^password.*[[:space:]].*requisite.*[[:space:]].*pam_pwquality.so.*[[:space:]].*/s/$/ $i/g\"  /etc/pam.d/system-auth-ac"
              EXIT_STATUS=0
              eval $cmd
              check_status 7.3.2 7.3.4 7.3.5 $cmd
        done
        cmd="grep -q "^password.*[[:space:]].*requisite.*[[:space:]].*pam_pwquality.so" /etc/pam.d/system-auth-ac || echo 'password requisite pam_pwquality.so try_first_pass retry=3' >> /etc/pam.d/system-auth-ac"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.3.2 7.3.4 7.3.5 $cmd


        for i in preauth audit silent deny=3 unlock_time=900
        do
              cmd="grep -q \"^auth.*[[:space:]].*required.*[[:space:]].*pam_faillock.so.*[[:space:]].*$i\" /etc/pam.d/password-auth-ac || sed -i \"/^auth.*[[:space:]].*required.*[[:space:]].*pam_faillock.so*[[:space:]].*/s/$/ $i/g\"  /etc/pam.d/password-auth-ac"
              EXIT_STATUS=0
              eval $cmd
              check_status 7.3.2 7.3.4 7.3.5 $cmd
        done
        cmd="grep -q \"^auth.*[[:space:]].*required.*[[:space:]].*pam_faillock.so\" /etc/pam.d/password-auth-ac || echo 'auth required pam_faillock.so preauth audit silent deny=3 unlock_time=900' >> /etc/pam.d/password-auth-ac"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.3.2 7.3.4 7.3.5 $cmd
        for i in preauth audit silent deny=3 unlock_time=900
        do
              cmd="grep -q \"^auth.*[[:space:]].*required.*[[:space:]].*pam_faillock.so.*[[:space:]].*$i\" /etc/pam.d/system-auth-ac || sed -i \"/^auth.*[[:space:]].*required.*[[:space:]].*pam_faillock.so.*[[:space:]].*/s/$/ $i/g\"  /etc/pam.d/system-auth-ac"
              EXIT_STATUS=0
              eval $cmd
              check_status 7.3.2 7.3.4 7.3.5 $cmd
        done
        cmd="grep -q \"^auth.*[[:space:]].*required.*[[:space:]].*pam_faillock.so\" /etc/pam.d/system-auth-ac || echo 'auth required pam_faillock.so preauth audit silent deny=3 unlock_time=900' >> /etc/pam.d/system-auth-ac"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.3.2 7.3.4 7.3.5 $cmd

        cmd="grep -q \"^auth.*[[:space:]].*pam_unix.so\" /etc/pam.d/password-auth-ac || echo 'auth pam_unix.so' >> /etc/pam.d/password-auth-ac"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.3.2 7.3.4 7.3.5 $cmd
        cmd="grep -q \"^auth.*[[:space:]].*pam_unix.so\" /etc/pam.d/system-auth-ac || echo 'auth pam_unix.so' >> /etc/pam.d/system-auth-ac"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.3.2 7.3.4 7.3.5 $cmd

        cmd="grep -q \"^auth.*[[:space:]].*\[default=die\]\" /etc/pam.d/password-auth-ac || echo 'auth  [default=die]' >> /etc/pam.d/password-auth-ac"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.3.2 7.3.4 7.3.5 $cmd
        cmd="grep -q \"^auth.*[[:space:]].*\[default=die\]\" /etc/pam.d/system-auth-ac || echo 'auth  [default=die]' >> /etc/pam.d/system-auth-ac"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.3.2 7.3.4 7.3.5 $cmd

        for i in pam_faillock.so authfail audit deny=3 unlock_time=900
        do
              cmd="grep -q \"^auth.*[[:space:]].*\[default=die\].*$i\" /etc/pam.d/password-auth-ac || sed -i \"/^auth.*[[:space:]].*\[default=die\].*/s/$/ $i/g\"  /etc/pam.d/password-auth-ac"
              EXIT_STATUS=0
              eval $cmd
              check_status 7.3.2 7.3.4 7.3.5 $cmd
        done
        for i in pam_faillock.so authfail audit deny=3 unlock_time=900
        do
              cmd="grep -q \"^auth.*[[:space:]].*\[default=die\].*$i\" /etc/pam.d/system-auth-ac || sed -i \"/^auth.*[[:space:]].*\[default=die\].*/s/$/ $i/g\"  /etc/pam.d/system-auth-ac"
              EXIT_STATUS=0
              eval $cmd
              check_status 7.3.2 7.3.4 7.3.5 $cmd
        done

        cmd="grep -q \"^auth.*[[:space:]].*sufficient.*[[:space:]].*pam_faillock.so\" /etc/pam.d/password-auth-ac || echo 'auth sufficient pam_faillock.so' >> /etc/pam.d/password-auth-ac"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.3.2 7.3.4 7.3.5 $cmd
        cmd="grep -q \"^auth.*[[:space:]].*sufficient.*[[:space:]].*pam_faillock.so\" /etc/pam.d/system-auth-ac || echo 'auth sufficient pam_faillock.so' >> /etc/pam.d/system-auth-ac"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.3.2 7.3.4 7.3.5 $cmd
        for i in authsucc audit deny=3 unlock_time=900
        do
              cmd="grep -q \"^auth.*[[:space:]].*sufficient.*[[:space:]].*pam_faillock.so.*$i\" /etc/pam.d/password-auth-ac || sed -i \"/^auth.*[[:space:]].*sufficient.*[[:space:]].*pam_faillock.so.*/s/$/ $i/g\"  /etc/pam.d/password-auth-ac"
              EXIT_STATUS=0
              eval $cmd
              check_status 7.3.2 7.3.4 7.3.5 $cmd
        done
        for i in authsucc audit deny=3 unlock_time=900
        do
              cmd="grep -q \"^auth.*[[:space:]].*sufficient.*[[:space:]].*pam_faillock.so.*$i\" /etc/pam.d/system-auth-ac || sed -i \"/^auth.*[[:space:]].*sufficient.*[[:space:]].*pam_faillock.so.*/s/$/ $i/g\"  /etc/pam.d/system-auth-ac"
              EXIT_STATUS=0
              eval $cmd
              check_status 7.3.2 7.3.4 7.3.5 $cmd
        done

        cmd="grep -q \"^password.*[[:space:]].*sufficient.*[[:space:]].*remember=5\" /etc/pam.d/password-auth-ac || sed -i \"/^password.*[[:space:]].*sufficient.*/s/$/ remember=5/g\"  /etc/pam.d/password-auth-ac"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.3.2 7.3.4 7.3.5 $cmd
        cmd="grep -q \"^password.*[[:space:]].*sufficient.*[[:space:]].*remember=5\" /etc/pam.d/system-auth-ac || sed -i \"/^password.*[[:space:]].*sufficient.*/s/$/ remember=5/g\"  /etc/pam.d/system-auth-ac"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.3.2 7.3.4 7.3.5 $cmd
        cmd="sed -i -e 's/^minlen.*[[:space:]].*/minlen = 8/g' -e 's/^dcredit.*[[:space:]].*/dcredit = -1/g' -e 's/^ucredit.*[[:space:]].*/ucredit = -1/g' -e 's/^ocredit.*[[:space:]].*/ocredit = -1/g' -e 's/^lcredit.*[[:space:]].*/lcredit = -1/g' /etc/security/pwquality.conf"
        EXIT_STATUS=0
        eval $cmd

        check_status 7.3.3 $cmd
        for i in minlen.*[[:space:]].*=.*[[:space:]].*8 dcredit.*[[:space:]].*=.*[[:space:]].*\-\1 ucredit.*[[:space:]].*=.*[[:space:]].*-1 ocredit.*[[:space:]].*=.*[[:space:]].*-1 lcredit.*[[:space:]].*=.*[[:space:]].*-1
        do
              cmd="grep -q "^$i" /etc/security/pwquality.conf || echo "$i" | sed 's/\.\*\[\[\:space\:\]\]\.\*/ /g' >> /etc/security/pwquality.conf"
              EXIT_STATUS=0
              eval $cmd
              check_status 7.3.3 $cmd
        done

        msg_header 7.4. Restrict Access to the su Command
        backup_file /etc/pam.d/su
        cmd="grep -q '^auth.*[[:space:]].*required.*[[:space:]].*pam_wheel.so.*[[:space:]].*use_uid' /etc/pam.d/su || echo 'auth required pam_wheel.so use_uid' >> /etc/pam.d/su"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.4 $cmd

        msg_header 7.5. Ensure permissions on bootloader config are configured
        cmd="chown root:root /boot/grub2/grub.cfg ; chmod og-rwx /boot/grub2/grub.cfg  "
        EXIT_STATUS=0
        eval $cmd
        check_status 7.5 $cmd

        msg_header 7.6. Disable Automounting
        cmd="systemctl disable autofs"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.6 $cmd

        msg_header 7.7. Ensure audit logs are not automatically deleted
        cmd="sed -i -e 's/max_log_file_action.*[[:space:]].*/max_log_file_action = keep_logs/g' /etc/audit/auditd.conf"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.7 $cmd

        msg_header 7.8. Ensure no world writable files exist
        cmd="df --local -P | egrep 'rootvg|rhel|boot' | awk {'if (NR!=1) print \$6'} | xargs -I '{}' find '{}' -xdev -type f -perm -0002 | xargs -I '{}' chmod o-w '{}'"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.8 $cmd

        msg_header 8.1. Set Shadow Password Suite Parameters
        backup_file /etc/login.defs
        cmd="sed -i -e 's/^PASS_MAX_DAYS.*/PASS_MAX_DAYS 90/g' -e 's/^PASS_MIN_DAYS.*/PASS_MIN_DAYS 2/g' -e 's/^PASS_WARN_AGE.*/PASS_WARN_AGE 14/g' -e 's/^PASS_MIN_LEN.*/PASS_MIN_LEN 8/g' /etc/login.defs"
        EXIT_STATUS=0
        eval $cmd
        for i in PASS_MAX_DAYS.*[[:space:]].*90 PASS_MIN_DAYS.*[[:space:]].*2 PASS_WARN_AGE.*[[:space:]].*14 PASS_MIN_LEN.*[[:space:]].*8
        do
                cmd="grep -q '$i' /etc/login.defs || echo $i | sed 's/\.\*\[\[\:space\:\]\]\.\*/ /g' >> /etc/login.defs"
                eval $cmd
                check_status 8.1 $cmd
        done
        check_status 8.1 $cmd

        msg_header 8.2. Disable System Accounts
        info_msg Check with IAM Team

        msg_header 8.3. Set Default Group for root Account
        cmd="usermod -g0 root"
        EXIT_STATUS=0
        eval $cmd
        check_status 8.3 $cmd

        msg_header 8.4. Set Default umask for Users
        backup_file /etc/bashrc
        backup_file /etc/profile
        backup_file /etc/profile.d/cis.sh
        cmd="sed -i -e 's/umask.*/umask 027/g'  /etc/profile.d/cis.sh /etc/bashrc /etc/profile"
        EXIT_STATUS=0
        eval $cmd
        check_status 8.4 $cmd
        cmd="grep -q "umask.*[[:space:]].*027" /etc/profile || echo 'umask 027' >> /etc/profile"
        EXIT_STATUS=0
        eval $cmd
        check_status 8.4 $cmd
        cmd="grep -q "umask.*[[:space:]].*027" /etc/bashrc || echo 'umask 027' >> /etc/bashrc"
        EXIT_STATUS=0
        eval $cmd
        check_status 8.4 $cmd
        cmd="grep -q "umask.*[[:space:]].*027" /etc/profile.d/cis.sh || echo 'umask 027' >> /etc/profile.d/cis.sh"
        EXIT_STATUS=0
        eval $cmd
        check_status 8.4 $cmd

        msg_header 8.5. Lock Inactive User Accounts
        backup_file /etc/shadow
        cmd="sed -i '/^root/! s~^\([^:]*\):\([^:]*\):\([^:]*\):\([^:]*\):\([^:]*\):\([^:]*\):\([^:]*\)~\1:\2:\3:\4:\5:\6:35~' /etc/shadow"
        EXIT_STATUS=0
        eval $cmd
        check_status 8.5 $cmd
        cmd="sed -i 's/INACTIVE=.*/INACTIVE=30/g' /etc/default/useradd"
        EXIT_STATUS=0
        eval $cmd
        check_status 8.5.1 $cmd

        msg_header 8.6. Disabled aotomounting
        cmd="systemctl disable autofs"
        EXIT_STATUS=0
        eval $cmd
        check_status 8.6 $cmd

        msg_header 9.1. Set Warning Banner for Standard Login Services
        cmd="chown root:root /etc/motd /etc/issue /etc/issue.net;chmod 644 /etc/motd /etc/issue /etc/issue.net"
        EXIT_STATUS=0
        eval $cmd
        check_status 9.1 $cmd

        msg_header 9.2. Remove OS Information from Login Warning Banners
        echo 'Authorized users only. All activity may be monitored and reported.' > /etc/motd
        echo 'Authorized users only. All activity may be monitored and reported.' > /etc/issue
        echo 'Authorized users only. All activity may be monitored and reported.' > /etc/issue.net
        cmd="grep -q 'Authorized users only. All activity may be monitored and reported.' /etc/motd /etc/issue /etc/issue.net"
        EXIT_STATUS=0
        eval $cmd
        check_status 9.2 $cmd

        msg_header 9.3. Set GNOME Warning Banner
        info_msg Not Applicable as X11 packages has been removed as per the SCD policy

        msg_header 10.1. Verify System File Permissions
        cmd="chown root:root /etc/passwd /etc/shadow /etc/gshadow /etc/group;chmod 644 /etc/passwd /etc/group;chmod 000 /etc/shadow /etc/gshadow"
        EXIT_STATUS=0
        eval $cmd
        check_status 10.1 $cmd

        msg_header 10.2. Review User and Group Settings
        info_msg Check with IAM Team

        msg_header 11.2. Enable TLS 1.2 \& Above protocol
        info_msg Not Applicable as HTTPD package is not installed

        msg_header 11.3. Disable weak encryption protocol
        info_msg Not Applicable as HTTPD package is not installed

        echo -e "\033[46;30m"
        msg_header Log file generated at /tmp/$(hostname)_SCD_LINUX_V14_log_impl_"$cdate".txt
        echo -e "\033[40;37m"

}

linux_verification()
{
        echo "======================================================================"
        echo "                  LINUX SCD Verification Started"
        echo "======================================================================"
        msg_header 2.1. Filesystem Configuration
        cmd="ls -ld /tmp/ /var/tmp/ /dev/shm | grep drwxrwxrwt | wc -l"
        [[ $(eval $cmd) -eq 3 ]] && sub_msg_ok 2.1.1 $cmd || sub_msg_ko 2.1.1 $cmd
        cmd="egrep 'defaults,nodev,noexec,nosuid' /etc/fstab | wc -l"
        [[ $(eval $cmd) -eq 2 ]] && sub_msg_ok 2.1.2 $cmd || sub_msg_ko 2.1.2 $cmd
        cmd="egrep 'install\s+cramfs\s+/bin/true|install\s+freevxfs\s+/bin/true|install\s+jffs2\s+/bin/true|install\s+hfs\s+/bin/true|install\s+hfsplus\s+/bin/true|install\s+squashfs\s+/bin/true' /etc/modprobe.d/CIS.conf | wc -l"
        [[ $(eval $cmd) -eq 6 ]] && sub_msg_ok 2.1.2 $cmd || sub_msg_ko 2.1.2 $cmd

        msg_header 2.2. Configure Software Updates
        cmd="grep 'gpgcheck.*[[:space:]].*=.*[[:space:]].*0' /etc/yum.conf /etc/yum.repos.d/*.repo | wc -l"
        [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 2.2 $cmd || sub_msg_ko 2.2 $cmd

        msg_header 2.3. Advanced Intrusion Detection Environment
        cmd="rpm -qa | grep -i aide | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 2.3 $cmd || sub_msg_ko 2.3 $cmd

        msg_header 3. OS Services
        cmd="systemctl list-unit-files --type=service --state=enabled --no-pager  | egrep 'telnet|rlogin|rexec|rsh|ypserv|tftp.socket|ntalk|xinetd|avahi-daemon|dhcpd|slapd|nfs|rpcbind|named|vsftpd|httpd|dovecot|smb|squid|snmpd' | wc -l"
        [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 3 $cmd || sub_msg_ko 3 $cmd
        cmd="rpm -qa | egrep 'telnet|ypbind|talk|xorg-11' | wc -l"
        [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 3 $cmd || sub_msg_ko 3 $cmd

        msg_header 4.1. Configure Network Time Protocol
        cmd="cat /etc/chrony.conf | grep 'server.*[[:space:]].*10.' | wc -l"
        [[ $(eval $cmd) -ge 2 ]] && sub_msg_ok 4.1 $cmd || sub_msg_ko 4.1 $cmd

        msg_header 4.1.1 Chrony SYNC status
        cmd="chronyc sources |  grep '\*' | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 4.1.1 $cmd || sub_msg_ko 4.1.1 $cmd

        msg_header 4.2. Configure Mail Transfer Agent for Local-Only Mode
        cmd="grep '^inet_interfaces.*[[:space:]]=.*[[:space:]]localhost' /etc/postfix/main.cf  | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 4.1.1 $cmd || sub_msg_ko 4.1.1 $cmd

        msg_header 4.3. Check for Unconfined Daemons
        cmd="ps -eZ | egrep 'initrc' | egrep -vw 'tr|ps|egrep|bash|awk' | tr ':' ' ' | awk '{ print $NF }'"
        sub_msg_ok 4.3.

        msg_header 5.1. Modify Network Parameters and 5.2. IPv6
        for i in net.ipv4.ip_forward=0 net.ipv4.conf.all.send_redirects=0 net.ipv4.conf.default.send_redirects=0 net.ipv4.conf.all.accept_source_route=0  net.ipv4.conf.default.accept_source_route=0 net.ipv4.conf.all.accept_redirects=0 net.ipv4.conf.default.accept_redirects=0 net.ipv4.conf.all.secure_redirects=0 net.ipv4.conf.default.secure_redirects=0 net.ipv4.conf.all.log_martians=1  net.ipv4.conf.default.log_martians=1 net.ipv4.icmp_echo_ignore_broadcasts=1 net.ipv4.icmp_ignore_bogus_error_responses=1  net.ipv4.conf.all.rp_filter=1 net.ipv4.conf.default.rp_filter=1 net.ipv4.tcp_syncookies=1 net.ipv6.conf.all.accept_ra=0 net.ipv6.conf.default.accept_ra=0 net.ipv6.conf.all.accept_redirects=0 net.ipv6.conf.default.accept_redirects=0 net.ipv6.conf.all.disable_ipv6=1
        do
               cmd="grep \"$(echo $i | sed 's/=/*[[:space:]]*=*[[:space:]]*/g')\" /etc/sysctl.conf | wc -l"
               [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 5.1 and 5.2 $cmd || sub_msg_ko 5.1 and 5.2 $cmd
        done

        msg_header 5.3. Install TCP Wrappers
        cmd="grep 'ALL: ALL' /etc/hosts.deny | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 5.3.4 $cmd || sub_msg_ko 5.3.4 $cmd

        cmd="stat -c%u%g%a  /etc/hosts.allow /etc/hosts.deny  | grep '00644' | wc -l"
        [[ $(eval $cmd) -eq 2 ]] && sub_msg_ok 5.3.4 $cmd || sub_msg_ko 5.3.4 $cmd

        msg_header 5.4. Uncommon Network Protocols
        cmd="egrep 'install\s+dccp\s+/bin/true|install\s+sctp\s+/bin/true|install\s+rds\s+/bin/true|install\s+tipc\s+/bin/true' /etc/modprobe.d/CIS.conf | wc -l"
        [[ $(eval $cmd) -eq 4 ]] && sub_msg_ok 2.1.2 $cmd || sub_msg_ko 2.1.2 $cmd

        msg_header 5.5. Enable Server Firewall
        cmd="systemctl list-unit-files --type=service --state=enabled --no-pager  | egrep 'firewall' | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 5.5. $cmd || sub_msg_ko 5.5. $cmd

        msg_header 6.1. Configure rsyslog
        cmd="rpm -qa | grep -i ^rsyslog | wc -l"
        [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 6.1.1 $cmd || sub_msg_ko 6.1.1 $cmd

        cmd="systemctl list-unit-files --type=service --state=enabled --no-pager  | egrep 'rsyslog' | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 6.1.2 $cmd || sub_msg_ko 6.1.2 $cmd

        for i in auth,user.*[[:space:]]/var/log/messages kern.*[[:space:]]/var/log/kern.log daemon.*[[:space:]]/var/log/daemon.log syslog.*[[:space:]]/var/log/syslog lpr,news,uucp,local0,local1,local2,local3,local4,local5,local6.*[[:space:]]/var/log/unused.log
        do
               cmd="grep $i /etc/rsyslog.conf | wc -l"
               [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 6.1.3 $cmd || sub_msg_ko 6.1.3 $cmd
        done

        cmd="stat -c%u%g%a /var/log/messages /var/log/kern.log /var/log/daemon.log /var/log/syslog | grep '^00.00$' | wc -l"
        [[ $(eval $cmd) -eq 4 ]] && sub_msg_ok 6.1.4 $cmd || sub_msg_ko 6.1.4 $cmd

        cmd="egrep '^\\\$ModLoad*[[:space:]]*imtcp.so|^\\\$InputTCPServerRun*[[:space:]]*514' /etc/rsyslog.conf | wc -l"
        [[ $(eval $cmd) -eq 2 ]] && sub_msg_ok 6.1.7 $cmd || sub_msg_ko 6.1.7 $cmd

        msg_header 6.2. Configure System Accounting \& 6.3. Ensure the audit configuration is immutable \& 6.4. Ensure file deletion events by users are collected
        cmd="systemctl list-unit-files --type=service --state=enabled --no-pager  | egrep 'auditd' | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 6.2.1. $cmd || sub_msg_ko 6.2.1. $cmd

        cmd="egrep '^max_log_file.*[[:space:]].*=.*[[:space:]].*8|^space_left_action.*[[:space:]].*=.*[[:space:]].*email|^action_mail_acct.*[[:space:]].*=.*[[:space:]].*root|^max_log_file_action.*[[:space:]].*=.*[[:space:]].*keep_logs' /etc/audit/auditd.conf | wc -l"
        [[ $(eval $cmd) -eq 4 ]] && sub_msg_ok 6.2.2. $cmd || sub_msg_ko 6.2.2. $cmd

audit_rules="-w /etc/selinux/ -p wa -k MAC-policy
-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
-a always,exit -F arch=b32 -S clock_settime -k time-change -w /etc/localtime -p wa -k time-change
-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change
-a always,exit -F arch=b64 -S clock_settime -k time-change
-w /etc/localtime -p wa -k time-change
-w /etc/group -p wa -k identity
-w /etc/passwd -p wa -k identity
-w /etc/gshadow -p wa -k identity
-w /etc/shadow -p wa -k identity
-w /etc/security/opasswd -p wa -k identity
-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
-w /etc/issue -p wa -k system-locale
-w /etc/issue.net -p wa -k system-locale
-w /etc/hosts -p wa -k system-locale
-w /etc/sysconfig/network -p wa -k system-locale
-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale
-w /var/log/lastlog -p wa -k logins
-w /var/run/faillock/ -p wa -k logins
-w /var/run/utmp -p wa -k session
-w /var/log/wtmp -p wa -k session
-w /var/log/btmp -p wa -k session
-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
-w /etc/sudoers -p wa -k scope
-w /etc/sudoers.d -p wa -k scope
-w /var/log/sudo.log -p wa -k actions
-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
-e 2"
        echo "$audit_rules" | while IFS= read -r line
        do
               cmd="grep $(echo \'$line\' | sed 's/-/\\-/g') /etc/audit/audit.rules | wc -l"
               [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 6.2 $cmd || sub_msg_ko 6.2 $cmd
        done

        msg_header 6.6. Ensure auditing for processes that start prior to auditd is enabled
        cmd="grep 'audit=1'  /etc/default/grub | wc -l"
        [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 6.6 $cmd || sub_msg_ko 6.6 $cmd

        msg_header 6.7. Ensure auditd service is enabled
        cmd="systemctl list-unit-files --type=service --state=enabled --no-pager  | egrep 'auditd' | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 6.7. $cmd || sub_msg_ko 6.7. $cmd

        msg_header 6.8. Ensure system is disabled when audit logs are full
        cmd="egrep 'space_left_action.*[[:space:]].*=.*[[:space:]].*email|action_mail_acct.*[[:space:]].*=.*[[:space:]].*root|admin_space_left_action.*[[:space:]].*=.*[[:space:]].*halt' /etc/audit/auditd.conf | wc -l"
        [[ $(eval $cmd) -eq 3 ]] && sub_msg_ok 6.8. $cmd || sub_msg_ko 6.8. $cmd

        msg_header 7.1. Restrict access to Cron
        cmd="stat -c%u%g%a  /etc/crontab  | grep '00640' | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 7.1 $cmd || sub_msg_ko 7.1 $cmd

        msg_header 7.2. Configure SSH
        for i in ^Protocol.*[[:space:]].*2 ^LogLevel.*[[:space:]].*INFO ^X11Forwarding.*[[:space:]].*no ^MaxAuthTries.*[[:space:]].*3 ^IgnoreRhosts.*[[:space:]].*yes ^HostbasedAuthentication.*[[:space:]].*no ^PermitUserEnvironment.*[[:space:]].*no ^MACs hmac-sha1,umac-64@openssh.com,hmac-ripemd160,hmac-sha2-256,hmac-sha2-512,hmac-ripemd160@openssh.com ClientAliveInterval 300 ClientAliveCountMax 0 ^AllowTcpForwarding*[[:space:]].*no ^LoginGraceTime*[[:space:]].*60 MaxSessions*[[:space:]].*10 MaxStartups*[[:space:]].*10:30:60 AllowUsers AllowGroups DenyUsers DenyGroups Banner.*[[:space:]].*/etc/issue.net
        do
               cmd="egrep '$i' /etc/ssh/sshd_config | wc -l"
               [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 7.2 $cmd || sub_msg_ko 7.2 $cmd
        done

        msg_header 7.3. Configure PAM
        for i in password requisite pam_pwquality.so try_first_pass retry=3 pam_faillock.so preauth audit silent deny=3 unlock_time=900 \\[default=die\\] pam_faillock.so authfail audit deny=3 unlock_time=900 authsucc audit deny=3 remember=5
        do
               cmd="egrep '$i' /etc/pam.d/password-auth /etc/pam.d/system-auth | wc -l"
               [[ $(eval $cmd) -ge 2 ]] && sub_msg_ok 7.3 $cmd || sub_msg_ko 7.3 $cmd
        done
        for i in minlen.*[[:space:]].*=.*[[:space:]].*8 dcredit.*[[:space:]].*=.*[[:space:]].*-1 ucredit.*[[:space:]].*=.*[[:space:]].*-1 ocredit.*[[:space:]].*=.*[[:space:]].*-1 lcredit.*[[:space:]].*=.*[[:space:]].*-1
        do
               cmd="egrep '$i' /etc/security/pwquality.conf | wc -l"
               [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 7.3 $cmd || sub_msg_ko 7.3 $cmd
        done
        msg_header 7.4. Restrict Access to the su Command
        cmd="egrep 'pam_wheel.so.*[[:space:]].*use_uid'  /etc/pam.d/su | grep -v '#' | wc -l"
        [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 7.4 $cmd || sub_msg_ko 7.4 $cmd

        msg_header 7.5. Ensure permissions on bootloader config are configured
        cmd="stat -c%u%g%a /boot/grub2/grub.cfg | grep '^00.00$' | wc -l"
        [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 7.5 $cmd || sub_msg_ko 7.5 $cmd

        msg_header 7.6. Disable Automounting
        cmd="systemctl list-unit-files --type=service --state=enabled --no-pager  | egrep 'autofs' | wc -l"
        [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 7.6 $cmd || sub_msg_ko 7.6 $cmd

        msg_header 7.7. Ensure audit logs are not automatically deleted
        cmd="grep 'max_log_file_action.*[[:space:]].*=.*[[:space:]].*keep_logs'  /etc/audit/auditd.conf"
        [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 7.7 $cmd || sub_msg_ko 7.7 $cmd

        msg_header 7.8. Ensure no world writable files exist
        echo -e "$COCOLOR $(df --local -P | egrep 'rootvg|rhel|boot' | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -0002) $BASECOLOR"

        msg_header 8.1. Set Shadow Password Suite Parameters
        for i in PASS_MAX_DAYS.*[[:space:]].*90 PASS_MIN_DAYS.*[[:space:]].*2 PASS_WARN_AGE.*[[:space:]].*14 PASS_MIN_LEN.*[[:space:]].*8
        do
               cmd="egrep '$i'  /etc/login.defs | wc -l"
               [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 8.1 $cmd || sub_msg_ko 8.1 $cmd
        done

        msg_header 8.3. Set Default Group for root Account
        cmd="id -g root | grep '0' | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 8.3 $cmd || sub_msg_ko 8.3 $cmd

        msg_header 8.4. Set Default umask for Users
        cmd="grep umask /etc/bashrc  /etc/profile | grep -v  027 | wc -l"
        [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 8.4 $cmd || sub_msg_ko 8.4 $cmd

        msg_header 8.5. Lock Inactive User Accounts
        cmd="awk -F':' '\$7 != 35 {print \$0}' /etc/shadow | grep -v root | wc -l"
        [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 8.5 $cmd || sub_msg_ko 8.5 $cmd
        cmd="grep 'INACTIVE=30' /etc/default/useradd | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 8.5.1 $cmd || sub_msg_ko 8.5.1 $cmd

        msg_header 8.6. Disabled automounting
        cmd="systemctl list-unit-files --type=service --state=enabled --no-pager  | egrep 'autofs' | wc -l"
        [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 8.6 $cmd || sub_msg_ko 8.6 $cmd

        msg_header 9.1. Set Warning Banner for Standard Login Services
        cmd="stat -c%u%g%a  /etc/motd /etc/issue /etc/issue.net  | grep '00644' | wc -l"
        [[ $(eval $cmd) -eq 3 ]] && sub_msg_ok 9.1 $cmd || sub_msg_ko 9.1 $cmd

        msg_header 9.3. Set GNOME Warning Banner
        info_msg Not Applicable as X11 packages are removed as per SCD V14

        msg_header 10.1. Verify System File Permissions
        cmd="stat -c%u%g  /etc/passwd /etc/shadow /etc/gshadow /etc/group  | grep '00' | wc -l"
        [[ $(eval $cmd) -eq 4 ]] && sub_msg_ok 10.1 $cmd || sub_msg_ko 10.1 $cmd
        cmd="stat -c%a  /etc/passwd /etc/group  | grep '644' | wc -l"
        [[ $(eval $cmd) -eq 2 ]] && sub_msg_ok 10.1 $cmd || sub_msg_ko 10.1 $cmd
        cmd="stat -c%a  /etc/shadow /etc/gshadow  | grep '0' | wc -l"
        [[ $(eval $cmd) -eq 2 ]] && sub_msg_ok 10.1 $cmd || sub_msg_ko 10.1 $cmd

        msg_header 11.1. Restrict Cipher list
        cmd="egrep 'aes256-ctr|aes192-ctr|aes128-ctr' /etc/ssh/sshd_config | wc -l"
        [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 11.1 $cmd || sub_msg_ko 11.1 $cmd

        msg_header 11.2. Enable TLS 1.2 \& Above protocol and 11.3. Disable weak encryption protocol
        info_msg HTTPD package is not installed as per SCD
        echo -e "\033[46;30m"
        msg_header Log file generated at /tmp/$(hostname)_SCD_LINUX_V14_log_veri_"$cdate".txt
        echo -e "\033[40;37m"
}
linux_artifacts()
{
        echo "======================================================================"
        echo "               LINUX SCD Artifacts Collection Started"
        echo "======================================================================"
        msg_header 2.1. Filesystem Configuration
        cmd="ls -ld /tmp/ /var/tmp/ /dev/shm"
        output
        cmd="egrep 'defaults,nodev,noexec,nosuid' /etc/fstab"
        output
        cmd="egrep 'install\s+cramfs\s+/bin/true|install\s+freevxfs\s+/bin/true|install\s+jffs2\s+/bin/true|install\s+hfs\s+/bin/true|install\s+hfsplus\s+/bin/true|install\s+squashfs\s+/bin/true' /etc/modprobe.d/CIS.conf "
        output

        msg_header 2.2. Configure Software Updates
        cmd="grep 'gpgcheck=1' /etc/yum.conf /etc/yum.repos.d/*.repo"
        output

        msg_header 2.3. Advanced Intrusion Detection Environment
        cmd="rpm -qa | grep -i aide"
        output

        msg_header 3. OS Services
        cmd="systemctl list-unit-files --type=service --state=disabled --no-pager  | egrep 'telnet|rlogin|rexec|rsh|ypserv|tftp.socket|ntalk|xinetd|avahi-daemon|dhcpd|slapd|nfs|rpcbind|named|vsftpd|httpd|dovecot|smb|squid|snmpd'"
        output
        cmd="rpm -qa | egrep 'telnet|ypbind|talk|xorg-11'"
        output

        msg_header 4.1. Configure Network Time Protocol
        cmd="cat /etc/chrony.conf | grep 'server.*[[:space:]].*10.'"
        output
        cmd="grep 'OPTIONS=\"-u chrony\"' /etc/sysconfig/chronyd"
        output
        msg_header 4.1.1 Chrony SYNC status
        cmd="chronyc sources |  grep '\*'"
        output

        msg_header 4.2. Configure Mail Transfer Agent for Local-Only Mode
        cmd="grep '^inet_interfaces.*[[:space:]]=.*[[:space:]]localhost' /etc/postfix/main.cf"
        output

        msg_header 4.3. Check for Unconfined Daemons
        cmd="ps -eZ | egrep 'initrc' | egrep -vw 'tr|ps|egrep|bash|awk' | tr ':' ' ' | awk '{ print \$NF }'"
        output

        msg_header 5.1. Modify Network Parameters and 5.2. IPv6
        cmd="egrep 'net.ipv4.ip_forward=0|net.ipv4.conf.all.send_redirects=0|net.ipv4.conf.default.send_redirects=0|net.ipv4.conf.all.accept_source_route=0|net.ipv4.conf.default.accept_source_route=0|net.ipv4.conf.all.accept_redirects=0|net.ipv4.conf.default.accept_redirects=0|net.ipv4.conf.all.secure_redirects=0|net.ipv4.conf.default.secure_redirects=0|net.ipv4.conf.all.log_martians=1|net.ipv4.conf.default.log_martians=1|net.ipv4.icmp_echo_ignore_broadcasts=1|net.ipv4.icmp_ignore_bogus_error_responses=1|net.ipv4.conf.all.rp_filter=1|net.ipv4.conf.default.rp_filter=1|net.ipv4.tcp_syncookies=1|net.ipv6.conf.all.accept_ra=0|net.ipv6.conf.default.accept_ra=0|net.ipv6.conf.all.accept_redirects=0|net.ipv6.conf.default.accept_redirects=0|net.ipv6.conf.all.disable_ipv6=1' /etc/sysctl.conf"
        output

        msg_header 5.3. Install TCP Wrappers
        cmd="grep 'ALL: ALL' /etc/hosts.deny"
        output
        cmd="stat -c%u%g%a  /etc/hosts.allow /etc/hosts.deny"
        output

        msg_header 5.4. Uncommon Network Protocols
        cmd="egrep 'install\s+dccp\s+/bin/true|install\s+sctp\s+/bin/true|install\s+rds\s+/bin/true|install\s+tipc\s+/bin/true' /etc/modprobe.d/CIS.conf"
        output

        msg_header 5.5. Enable Server Firewall
        cmd="systemctl list-unit-files --type=service --state=enabled --no-pager  | egrep 'firewall'"
        output

        msg_header 6.1. Configure rsyslog
        cmd="rpm -qa | grep -i ^rsyslog "
        output
        cmd="systemctl list-unit-files --type=service --state=enabled --no-pager  | egrep 'rsyslog'"
        output
        cmd="egrep 'auth,user.*[[:space:]]/var/log/messages|kern.*[[:space:]]/var/log/kern.log|daemon.*[[:space:]]/var/log/daemon.log|syslog.*[[:space:]]/var/log/syslog|lpr,news,uucp,local0,local1,local2,local3,local4,local5,local6.*[[:space:]]/var/log/unused.log' /etc/rsyslog.conf"
        output
        cmd="stat -c%u%g%a /var/log/messages /var/log/kern.log /var/log/daemon.log /var/log/syslog"
        output
        cmd="egrep '^\\\$ModLoad*[[:space:]]*imtcp.so|^\\\$InputTCPServerRun*[[:space:]]*514' /etc/rsyslog.conf"
        output

        msg_header 6.2. Configure System Accounting \& 6.3. Ensure the audit configuration is immutable \& 6.4. Ensure file deletion events by users are collected
        cmd="systemctl list-unit-files --type=service --state=enabled --no-pager  | egrep 'auditd'"
        output
        cmd="egrep '^max_log_file.*[[:space:]].*=.*[[:space:]].*8|^space_left_action.*[[:space:]].*=.*[[:space:]].*email|^action_mail_acct.*[[:space:]].*=.*[[:space:]].*root|^max_log_file_action.*[[:space:]].*=.*[[:space:]].*keep_logs' /etc/audit/auditd.conf "
        output
        cmd="egrep '-w /etc/selinux/ -p wa -k MAC-policy|\
-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod|\
-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts|\
-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change|\
-a always,exit -F arch=b32 -S clock_settime -k time-change -w /etc/localtime -p wa -k time-change|\
-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change|\
-a always,exit -F arch=b64 -S clock_settime -k time-change|\
-w /etc/localtime -p wa -k time-change|\
-w /etc/group -p wa -k identity|\
-w /etc/passwd -p wa -k identity|\
-w /etc/gshadow -p wa -k identity|\
-w /etc/shadow -p wa -k identity|\
-w /etc/security/opasswd -p wa -k identity|\
-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale|\
-w /etc/issue -p wa -k system-locale|\
-w /etc/issue.net -p wa -k system-locale|\
-w /etc/hosts -p wa -k system-locale|\
-w /etc/sysconfig/network -p wa -k system-locale|\
-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale|\
-w /var/log/lastlog -p wa -k logins|\
-w /var/run/faillock/ -p wa -k logins|\
-w /var/run/utmp -p wa -k session|\
-w /var/log/wtmp -p wa -k session|\
-w /var/log/btmp -p wa -k session|\
-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access|\
-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access|\
-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access|\
-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access|\
-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts|\
-w /etc/sudoers -p wa -k scope|\
-w /etc/sudoers.d -p wa -k scope|\
-w /var/log/sudo.log -p wa -k actions|\
-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete|\
-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete|\
-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete|\
-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete|\
-e 2' /etc/audit/audit.rules"
        cmd=$(echo "$cmd" | sed 's/-/\\-/g')
        output

        msg_header 6.6. Ensure auditing for processes that start prior to auditd is enabled
        cmd="grep 'audit=1'  /etc/default/grub"
        output

        msg_header 6.7. Ensure auditd service is enabled
        cmd="systemctl list-unit-files --type=service --state=enabled --no-pager  | egrep 'auditd'"
        output

        msg_header 6.8. Ensure system is disabled when audit logs are full
        cmd="egrep 'space_left_action.*[[:space:]].*=.*[[:space:]].*email|action_mail_acct.*[[:space:]].*=.*[[:space:]].*root|admin_space_left_action.*[[:space:]].*=.*[[:space:]].*halt' /etc/audit/auditd.conf"
        output

        msg_header 7.1. Restrict access to Cron
        cmd="stat -c%u%g%a  /etc/crontab"
        output

        msg_header 7.2. Configure SSH
        cmd="egrep '^Protocol.*[[:space:]].*2|^LogLevel.*[[:space:]].*INFO|^X11Forwarding.*[[:space:]].*no|^MaxAuthTries.*[[:space:]].*3|^IgnoreRhosts.*[[:space:]].*yes|^HostbasedAuthentication.*[[:space:]].*no|^PermitUserEnvironment.*[[:space:]].*no|^AllowTcpForwarding*[[:space:]].*no|^LoginGraceTime*[[:space:]].*60|MaxSessions*[[:space:]].*10|MaxStartups*[[:space:]].*10:30:60|^MACs|ClientAliveInterval.*[[:space:]].*300|ClientAliveCountMax.*[[:space:]].*0|AllowUsers|AllowGroups|DenyUsers|DenyGroups|Banner.*[[:space:]].*/etc/issue.net' /etc/ssh/sshd_config"
        output

        msg_header 7.3. Configure PAM
        cmd="egrep 'password.*[[:space:]].*requisite.*[[:space:]].*pam_pwquality.so.*[[:space:]].*try_first_pass.*[[:space:]].*retry=3|auth.*[[:space:]].*required.*[[:space:]].*pam_faillock.so.*[[:space:]].*preauth.*[[:space:]].*audit.*[[:space:]].*silent.*[[:space:]].*deny=3.*[[:space:]].*unlock_time=900|auth.*[[:space:]].*pam_unix.so|auth.*[[:space:]].*[default=die].*[[:space:]].*pam_faillock.so.*[[:space:]].*authfail.*[[:space:]].*audit.*[[:space:]].*deny=3.*[[:space:]].*unlock_time=900|auth.*[[:space:]].*sufficient|pam_faillock.so.*[[:space:]].*authsucc.*[[:space:]].*audit.*[[:space:]].*deny=3.*[[:space:]].*unlock_time=900|password.*[[:space:]].*sufficient.*[[:space:]].*pam_unix.so.*[[:space:]].*remember=5' /etc/pam.d/password-auth"
        output
        cmd="egrep 'password.*[[:space:]].*requisite.*[[:space:]].*pam_pwquality.so.*[[:space:]].*try_first_pass.*[[:space:]].*retry=3|auth.*[[:space:]].*required.*[[:space:]].*pam_faillock.so.*[[:space:]].*preauth.*[[:space:]].*audit.*[[:space:]].*silent.*[[:space:]].*deny=3.*[[:space:]].*unlock_time=900|auth.*[[:space:]].*pam_unix.so|auth.*[[:space:]].*[default=die].*[[:space:]].*pam_faillock.so.*[[:space:]].*authfail.*[[:space:]].*audit.*[[:space:]].*deny=3.*[[:space:]].*unlock_time=900|auth.*[[:space:]].*sufficient|pam_faillock.so.*[[:space:]].*authsucc.*[[:space:]].*audit.*[[:space:]].*deny=3.*[[:space:]].*unlock_time=900|password.*[[:space:]].*sufficient.*[[:space:]].*pam_unix.so.*[[:space:]].*remember=5' /etc/pam.d/system-auth"
        output
        cmd="egrep '^minlen.*[[:space:]].*=.*[[:space:]].*8|^dcredit.*[[:space:]].*=.*[[:space:]].*-1|^ucredit.*[[:space:]].*=.*[[:space:]].*-1|^ocredit.*[[:space:]].*=.*[[:space:]].*-1|^lcredit.*[[:space:]].*=.*[[:space:]].*-1' /etc/security/pwquality.conf"
        output

        msg_header 7.4. Restrict Access to the su Command
        cmd="egrep 'pam_wheel.so.*[[:space:]].*use_uid'  /etc/pam.d/su | grep -v '#'"
        output

        msg_header 7.5. Ensure permissions on bootloader config are configured
        cmd="stat -c%u%g%a /boot/grub2/grub.cfg | grep '^00.00$'"
        output

        msg_header 7.6. Disable Automounting
        cmd="systemctl list-unit-files --type=service --state=disabled --no-pager  | egrep 'autofs'"
        output

        msg_header 7.7. Ensure audit logs are not automatically deleted
        cmd="grep 'max_log_file_action.*[[:space:]].*=.*[[:space:]].*keep_logs'  /etc/audit/auditd.conf"
        output

        msg_header 7.8. Ensure no world writable files exist
        cmd="df --local -P | egrep 'rootvg|rhel|boot' | awk {'if (NR!=1) print \$6'} | xargs -I '{}' find '{}' -xdev -type f -perm -0002"
        output

        msg_header 8.1. Set Shadow Password Suite Parameters
        cmd="egrep '^PASS_MAX_DAYS.*[[:space:]].*90|^PASS_MIN_DAYS.*[[:space:]].*2|^PASS_WARN_AGE.*[[:space:]].*14|^PASS_MIN_LEN.*[[:space:]].*8' /etc/login.defs"
        output

        msg_header 8.3. Set Default Group for root Account
        cmd="id -g root"
        output

        msg_header 8.4. Set Default umask for Users
        cmd="grep umask /etc/bashrc  /etc/profile"
        output

        msg_header 8.5. Lock Inactive User Accounts
        cmd="awk -F':' '\$7 == 35 {print \$0}' /etc/shadow"
        output
        cmd="grep 'INACTIVE=30' /etc/default/useradd"
        output

        msg_header 8.6. Disabled aotomounting
        cmd="systemctl list-unit-files --type=service --state=disabled --no-pager  | egrep 'autofs'"
        output

        msg_header 9.1. Set Warning Banner for Standard Login Services
        cmd="stat -c%u%g%a  /etc/motd /etc/issue /etc/issue.net"
        output

        msg_header 9.3. Set GNOME Warning Banner
        cmd="ls -ld /etc/dconf/db/gdm.d/01-banner-message"
        output

        msg_header 10.1. Verify System File Permissions
        cmd="stat -c%u%g  /etc/passwd /etc/shadow /etc/gshadow /etc/group"
        output
        cmd="stat -c%a  /etc/passwd /etc/group"
        output
        cmd="stat -c%a  /etc/shadow /etc/gshadow"
        output

        msg_header 11.1. Restrict Cipher list
        cmd="egrep 'aes256-ctr|aes192-ctr|aes128-ctr' /etc/ssh/sshd_config"
        output

        msg_header 11.2. Enable TLS 1.2 \& Above protocol and 11.3. Disable weak encryption protocol
        cmd="ls -ld /etc/httpd/conf.d/ssl.conf"
        output

        echo -e "\033[46;30m"
        msg_header Log file generated at /tmp/$(hostname)_SCD_LINUX_V14_log_artifacts_"$cdate".txt
        echo -e "\033[40;37m"
}


aix_implement()
{
        echo "======================================================================"
        echo "                 AIX SCD Implementation Started"
        echo "======================================================================"
        for i in /etc/security/user /etc/security/login.cfg /etc/inittab /etc/rc.tcpip /etc/inetd.conf /etc/ssh/sshd_config /etc/tunables/nextboot /var/adm/cron/cron.allow /var/adm/cron/at.allow /etc/ftpusers /etc/syslog.conf /etc/snmpd.conf /etc/security/tsd/tsd.dat /etc/profile /etc/csh.login /var/spool/cron/crontabs/adm /etc/motd /etc/passwd /etc/group /etc/mail/sendmail.cf
        do
                backup_file $i
        done
        msg_header 2.1.1. Password Policy
        cmd="chsec -f /etc/security/user -s default -a mindiff=4"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.1 $cmd
        cmd="chsec -f /etc/security/user -s default -a minage=1"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.2 $cmd
        cmd="chsec -f /etc/security/user -s default -a maxage=13"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.3 $cmd
        cmd="chsec -f /etc/security/user -s default -a minlen=8"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.4 $cmd
        cmd="chsec -f /etc/security/user -s default -a minalpha=2"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.5 $cmd
        cmd="chsec -f /etc/security/user -s default -a histexpire=13"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.6 $cmd
	cmd="chsec -f /etc/security/user -s default -a histsize=5"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.7 $cmd
	cmd="chsec -f /etc/security/user -s default -a maxexpired=13"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.8 $cmd
	cmd="chsec -f /etc/security/user -s default -a minspecialchar=1"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.9 $cmd
	cmd="chsec -f /etc/security/user -s default -a maxrepeats=4"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.10 $cmd
	cmd="chsec -f /etc/security/user -s default -a mindigit=1"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.11 $cmd
	cmd="chsec -f /etc/security/user -s default -a minloweralpha=1"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.12 $cmd
	cmd="chsec -f /etc/security/user -s default -a minupperalpha=1"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.13 $cmd

        msg_header 2.2.1. Login Policy
        counter=0
        for i in daemon bin sys adm nobody
        do
                cmd="chuser login=false rlogin=false $i"
                counter=`expr $counter + 1`
                EXIT_STATUS=0
                eval $cmd
                check_status 2.2.1.$counter $cmd
        done
        cmd="chsec -f /etc/security/login.cfg -s default -a logindisable=10"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.8 $cmd
        cmd="chsec -f /etc/security/user -s default -a loginretries=3"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.9 $cmd

        msg_header 2.3.1. System Services Management
        counter=0
        for i in qdaemon lpd piobe dt rcnfs
        do
                cmd="rmitab $i"
                counter=`expr $counter + 1`
                EXIT_STATUS=1
                eval $cmd
                check_status 2.3.1.$counter $cmd
        done
        for i in sendmail snmpd dhcpcd dhcprd dhcpsd autoconf6 gated mrouted named routed rwhod timed dpid2 hostmibd snmpmibd aixmibd ndpd-host ndpd-router
        do
                cmd="chrctcp -d $i"
                counter=`expr $counter + 1`
                EXIT_STATUS=0
                eval $cmd
                check_status 2.3.1.$counter $cmd
        done
        for i in telnet,tcpv6 exec,tcpv6 daytime,tcp daytime,udp shell,tcpv6 cmsd,sunrpc_udp ttdbserver,sunrpc_tcp uucp,tcp time,udp time,tcp login,tcp talk,udp ntalk,udp ftp,tcp6 chargen,tcp chargen,udp discard,tcp discard,udp dtspc,tcp echo,tcp echo,udp pcnfsd,udp rstatd,udp rusersd,udp rwalld,udp sprayd,udp klogin,tcp kshell,tcp rquotad,udp tftp,udp imap2,tcp pop3,tcp finger,tcp instsrv,tcp
        do
                a=$(echo "$i" | cut -d',' -f1)
                b=$(echo "$i" | cut -d',' -f2)
                cmd="chsubserver -r inetd -C /etc/inetd.conf -d -v $a -p $b"
                counter=`expr $counter + 1`
                EXIT_STATUS=0
                eval $cmd
                check_status 2.3.1.$counter $cmd
        done
        cmd="chmod u=rw,go=r /etc/inetd.conf && chown root:system /etc/inetd.conf"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.53 $cmd

        msg_header 2.4.1. Disabling Remote Services
        cmd="chmod ugo= /usr/bin/rcp /usr/bin/rlogin /usr/bin/rsh /usr/sbin/rlogind /usr/sbin/rshd /usr/sbin/tftpd"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.4.1 $cmd

        msg_header 2.4.2. Configuring SSH set privilege separation
        cmd="grep -q "^UsePrivilegeSeparation[[:blank:]]yes" /etc/ssh/sshd_config || perl -i -pe 's/UsePrivilegeSeparation.*/UsePrivilegeSeparation yes/g' /etc/ssh/sshd_config"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.4.2 $cmd

        #msg_header 2.4.3. Configuring SSH removal of .shosts file
        #cmd="find / -name ".shosts" -exec rm {} \;echo ' ' "
        #EXIT_STATUS=0
        #eval $cmd
        #check_status 2.4.3 $cmd

        msg_header 2.4.4. Configuring SSH removal of /etc/shosts.equiv
        cmd="rm -f /etc/shosts.equiv"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.4.4 $cmd

        msg_header 2.4.5. Configuring SSH limit access via SSH
        for i in AllowUsers AllowGroups DenyUsers DenyGroups
        do
                cmd="grep -q "^$i" /etc/ssh/sshd_config || echo "$i" >> /etc/ssh/sshd_config"
                EXIT_STATUS=0
                eval $cmd
                check_status 2.4.5 $cmd
        done

        msg_header 2.4.6. Configuring SSH sshd_config permissions lockdown
        cmd="chmod u=rw,go=r /etc/ssh/sshd_config"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.4.6 $cmd

        msg_header 2.5.1. Automated Authentication
        cmd="find / -name ".netrc" -exec rm {} \; echo ' '"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.5.1.1 $cmd
        cmd="find / -name ".rhosts" -exec rm {} \; echo ' '"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.5.1.2 $cmd
        cmd="sed '/^\s*$/d;s/^\(\s*[^#].*\)/#\1/' /etc/hosts.equiv > /etc/hosts.equiv.work && mv /etc/hosts.equiv.work /etc/hosts.equiv && chown root:system /etc/hosts.equiv && chmod 644 /etc/hosts.equiv"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.5.1.2 $cmd

        msg_header 2.6.1. TCP/IP Hardening
        counter=0
        for i in ipsrcrouteforward=0 ipignoreredirects=1 clean_partial_conns=1 ipsrcroutesend=0 ipforwarding=0 ipsendredirects=0 ip6srcrouteforward=0 directed_broadcast=0 tcp_pmtu_discover=0 bcastping=0 icmpaddressmask=0 udp_pmtu_discover=0 ipsrcrouterecv=0 nonlocsrcroute=0 tcp_tcpsecure=7 sockthresh=60 rfc1323=1 tcp_sendspace=262144 tcp_recvspace=262144 tcp_mssdflt=1448
        do
                cmd="no -p -o $i"
                counter=`expr $counter + 1`
                EXIT_STATUS=0
                eval $cmd
                check_status 2.5.1.$counter $cmd
        done
        for i in portcheck=1 nfs_use_reserved_ports=1
        do
                cmd="nfso -p -o $i"
                counter=`expr $counter + 1`
                EXIT_STATUS=0
                eval $cmd
                check_status 2.5.1.$counter $cmd
        done

        msg_header 2.7.1. Miscellaneous Enhancements
        #cmd="echo 'root\nadm' > /var/adm/cron/cron.allow && rm -f /var/adm/cron/cron.deny"
        #EXIT_STATUS=0
        #eval $cmd
        #check_status 2.7.1.1 $cmd
        cmd="echo 'root' > /var/adm/cron/at.allow && rm -f /var/adm/cron/at.deny"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.1.2 $cmd
        cmd="grep -q root /etc/ftpusers || echo 'root' >> /etc/ftpusers"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.1.3 $cmd
        cmd='chsec -f /etc/security/login.cfg -s default -a herald="Unauthorized use of this system is prohibited.\nlogin:"'
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.1.4 $cmd
        cmd="rmuser -p guest ; rm -rf /home/guest"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.1.5 $cmd
        cmd="Crontab permission"
        OUT=$(crontab -l |egrep -v '^#' |awk '{print $6}' |grep "^/" |sort -u | while read DIR
        do
                DIR=${DIR:-$(pwd)}
                while [[ -a ${DIR} ]]
                do
                        [[ "$(ls -ld ${DIR} | grep -v '^l')" = @(????????w? *) ]] && echo " WARNING ${DIR} is world writable"
                        [[ "$(ls -ld ${DIR} | grep -v '^l')" = @(?????w???? *) ]] && echo " WARNING ${DIR} is group writable"
                        [[ "$(ls -ld ${DIR} | awk '{print $3}' | grep -v '^l')" != @(root|bin) ]] && echo " WARNING ${DIR} is not owned by root or bin"
                        DIR=${DIR%/*}
                done
        done
        )
        [[ $(echo "$OUT" | wc -c) -le 1 ]] && sub_msg_ok 2.7.1.6 $cmd || sub_msg_ko 2.7.1.6 $OUT \\n $cmd
        cmd="chsec -f /etc/security/user -s default -a umask=027"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.1.7 $cmd
        cmd="mount | grep -iq audit"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.1.8 $cmd
        cmd="grep 'auth.info.*[[:blank:]].*/var/adm/authlog.*[[:blank:]].*rotate.*[[:blank:]].*time.*[[:blank:]].*1w.*[[:blank:]].*files.*[[:blank:]].*4' /etc/syslog.conf || perl -i -pe 's/auth.info.*/auth.info\t\t\/var\/adm\/authlog rotate time 1w files 4/g' /etc/syslog.conf"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.1.9 $cmd
        cmd="chmod u=rw,g=r,o= /var/adm/syslog && chown root:system /var/adm/syslog &&  refresh -s syslogd"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.1.9.1 $cmd
        cmd="echo 'Unauthorized use of this system is prohibited.' > /etc/ssh/ssh_banner && perl -i -pe 's/Banner.*/Banner \/etc\/ssh\/ssh_banner/g' /etc/ssh/sshd_config"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.1.10 $cmd
        cmd="perl -i -pe 's/^community/#community      public/g' /etc/snmpd.conf"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.1.11 $cmd
        cmd="chown -R root:security /etc/security && chmod u=rwx,g=rx,o= /etc/security && chmod -R go-w,o-rx /etc/security"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.1.12 $cmd

        msg_header 2.7.2. Configuring SSH -disable null passwords
        cmd="perl -i -pe 's/^PermitEmptyPasswords.*/PermitEmptyPasswords no/g' /etc/ssh/sshd_config && stopsrc -s sshd && sleep 1 && startsrc -s sshd"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.2.1 $cmd
        
	msg_header 2.7.2.2 Configuring SSH -ignore Rhosts
        cmd="perl -i -pe 's/#IgnoreRhosts.*/IgnoreRhosts yes/g' /etc/ssh/sshd_config && stopsrc -s sshd && sleep 1 && startsrc -s sshd"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.2.2 $cmd
	
	msg_header 2.7.2.3 Configuring SSH -ignore PermitUserEnvironment 
        cmd="perl -i -pe 's/#PermitUserEnvironment.*/PermitUserEnvironment no/g' /etc/ssh/sshd_config && stopsrc -s sshd && sleep 1 && startsrc -s sshd"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.2.3 $cmd
	
	msg_header 2.7.2.4 Configuring SSH -ignore HostbasedAuthentication 
        cmd="perl -i -pe 's/#HostbasedAuthentication.*/HostbasedAuthentication no/g' /etc/ssh/sshd_config && stopsrc -s sshd && sleep 1 && startsrc -s sshd"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.2.4 $cmd

        msg_header 2.7.3. Miscellaneous Config -all unlocked accounts must have a password
        cmd="pwdck -y ALL"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.3 $cmd

        msg_header 2.8.1. Miscellaneous Config disable NCS
        cmd="rmitab rcncs"
        EXIT_STATUS=1
        eval $cmd
        check_status 2.8.1 $cmd

        msg_header 2.8.2. Miscellaneous Config disable httpdlite
        cmd="rmitab httpdlite"
        EXIT_STATUS=1
        eval $cmd
        check_status 2.8.2 $cmd

        msg_header 2.8.3. Miscellaneous Config disable pmd
        cmd="rmitab pmd"
        EXIT_STATUS=1
        eval $cmd
        check_status 2.8.3 $cmd

        msg_header 2.8.4. Miscellaneous Config block talk/write
        cmd="grep -q '^mesg n' /etc/profile || echo 'mesg n' >> /etc/profile"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.8.4 $cmd

        msg_header 2.8.4. Miscellaneous Config block talk/write
        cmd="grep -q '^mesg n' /etc/csh.login || echo 'mesg n' >> /etc/csh.login"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.8.4 $cmd

        msg_header 2.8.5. Miscellaneous Config enable sar accounting
        cmd="perl -i -pe 's/^#0/0/g' /var/spool/cron/crontabs/adm"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.8.5 $cmd
        cmd="perl -i -pe 's/^#1/1/g' /var/spool/cron/crontabs/adm"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.8.5 $cmd
        cmd="perl -i -pe 's/^#5/5/g' /var/spool/cron/crontabs/adm"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.8.5 $cmd
sar_crons='
0 8-17 \* \* 1-5 /usr/lib/sa/sa1 1200 3 &
0 \* \* \* 0,6 /usr/lib/sa/sa1 &
0 18-7 \* \* 1-5 /usr/lib/sa/sa1 &
5 18 \* \* 1-5 /usr/lib/sa/sa2 -s 8:00 -e 18:01 -i 3600 -ubcwyaqvm &
10 23 \* \* 0-6 /usr/lib/acct/runacct 2>/usr/adm/acct/nite/accterr > /dev/null
0 23 \* \* 0-6 /usr/lib/acct/dodisk > /dev/null 2>&1
0 \* \* \* \* /usr/lib/acct/ckpacct > /dev/null 2>&1
15 4 1 \* \* /usr/lib/acct/monacct > /dev/null 2>&1
'
        echo "$sar_crons" | while IFS= read -r line
        do
                cmd="grep -q '^$line' /var/spool/cron/crontabs/adm || echo '$line' | sed 's/\\\//g' >> /var/spool/cron/crontabs/adm"
                eval $cmd
        done

        msg_header 2.8.6. Miscellaneous Config ftp banner
        cmd='dspcat -g /usr/lib/nls/msg/en_US/ftpd.cat > /tmp/ftpd.tmp && sed "s/\"\%s FTP server (\%s) ready.\"/\"\%s Authorized uses only. All activity may be monitored and reported\"/" /tmp/ftpd.tmp > /tmp/ftpd.msg && gencat /usr/lib/nls/msg/en_US/ftpd.cat /tmp/ftpd.msg && rm -f /tmp/ftpd.tmp /tmp/ftpd.msg'
        EXIT_STATUS=0
        eval $cmd
        check_status 2.8.6 $cmd

        msgeader 2.8.7. Miscellaneous Config /etc/motd
        cmd="echo '***************************************************************************\n
NOTICE TO USERS This computer system is the private property of its owner, whether individual, corporate or\n
government. It is for authorized use only. Users (authorized or unauthorized) have no explicit or implicit\n
expectation of privacy. Any or all uses of this system and all files on this system may be intercepted, monitored,\n
recorded, copied, audited, inspected, and disclosed to your employer, to authorized site, government, and law\n
enforcement personnel, as well as authorized officials of government agencies, both domestic and foreign. <p>\n
By using this system, the user consents to such interception, monitoring,recording, copying, auditing,\n
inspection, and disclosure at the discretion of such personnel or officials. Unauthorized or improper use of this\n
system may result in civil and criminal penalties and administrative or disciplinary action, as appropriate. By\n
continuing to <p> use this system you indicate your awareness of and consent to these terms and conditions of\n
use. LOG OFF IMMEDIATELY if you do not agree to the conditions stated in this warning.\n
****************************************************************************' > /etc/motd;chmod 644 /etc/motd;chown bin:bin /etc/motd"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.8.7 $cmd

        msg_header 2.8.8. Miscellaneous Config all user id must be unique
        cmd="[[ $(cut -d: -f 3 /etc/passwd |sort -n | uniq -d | wc -l) -gt 0 ]] && EXIT_STATUS=1 || EXIT_STATUS=0"
        eval $cmd
        check_status 2.8.8 $cmd

        msg_header 2.8.9. Miscellaneous Config all user id must be unique
        cmd="[[ $(cut -d: -f 3 /etc/group |sort -n | uniq -d | wc -l) -gt 0 ]] && EXIT_STATUS=1 || EXIT_STATUS=0"
        eval $cmd
        check_status 2.8.9 $cmd

       # msg_header 2.8.10. Miscellaneous Config unnecessary user and group removal
       # for i in uucp nuucp lpd printq
       # do
       #         cmd="rmuser -p $i; perl -i -pe 's/#$i.*//g' /etc/passwd; perl -i -pe 's/^\n$//g' /etc/passwd"
       #         EXIT_STATUS=0
       #         eval $cmd
       #         check_status 2.8.10 $cmd
       # done
       # msg_header 2.8.10. Miscellaneous Config unnecessary user and group removal
       # for i in uucp  printq
       # do
       #         cmd="rmgroup $i ; perl -i -pe 's/#$i.*//g' /etc/group; perl -i -pe 's/^\n$//g' /etc/group"
       #         EXIT_STATUS=0
       #         eval $cmd
       #         check_status 2.8.10 $cmd
       # done

        msg_header 2.8.11. Miscellaneous Config removing current working directory from root PATH
        cmd="[[ $(su - root -c "echo ${PATH}" |awk '/((:[ \t]*:)|(:[\t]*$)|(^[ \t]*:)|(^.:)|(:.$)|(:.:))/' | wc -l) -gt 0 ]] && EXIT_STATUS=1 || EXIT_STATUS=0"
        eval $cmd
        check_status 2.8.11 $cmd

        msg_header 2.9.1. Restrict Cipher list
        cmd="perl -i -pe 's/^Ciphers.*/Ciphers aes128-ctr,aes192-ctr,aes256-ctr/g' /etc/ssh/sshd_config; stopsrc -s sshd; sleep 1;startsrc -s sshd"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.9.1 $cmd

        msg_header 2.9.2. Enable TLS 1.2 \& Above protocol
        echo "$COCOLOR Not Applicable as HTTP packages are not installed $BASECOLOR"

        msg_header 2.10.1. /etc/mail/sendmail.cf SmtpGreetingMessage
        cmd="perl -i -pe 's/SmtpGreetingMessage=.*/SmtpGreetingMessage=mailerready/g' /etc/mail/sendmail.cf"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.10.1 $cmd

        msg_header 2.10.2. /etc/mail/sendmail.cf permissions and ownership
        cmd="chmod u=rw,g=r,o= /etc/mail/sendmail.cf"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.10.2 $cmd

        msg_header 2.10.3. /var/spool/mqueue permissions and ownership
        cmd="chmod u=rwx,go= /var/spool/mqueue && chown root /var/spool/mqueue"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.10.3 $cmd

        msg_header 2.11.1. Install updated security patches
        echo "$COCOLOR Manual Verification Required $BASECOLOR"
}

aix_verification()
{
        echo "======================================================================"
        echo "                 AIX SCD Verification Started"
        echo "======================================================================"
        msg_header 2.1. Filesystem Configuration
        cmd="lssec -f /etc/security/user -s default -a mindiff | grep -q 'default mindiff=4'"
        eval $cmd
        check_status 2.1.1 $cmd
        cmd="lssec -f /etc/security/user -s default -a minage | grep -q 'default minage=1'"
        eval $cmd
        check_status 2.1.2 $cmd
        cmd="lssec -f /etc/security/user -s default -a maxage | grep -q 'default maxage=13'"
        eval $cmd
        check_status 2.1.3 $cmd
        cmd="lssec -f /etc/security/user -s default -a minlen | grep -q 'default minlen=8'"
        eval $cmd
        check_status 2.1.4 $cmd
        cmd="lssec -f /etc/security/user -s default -a minalpha | grep -q 'default minalpha=2'"
        eval $cmd
        check_status 2.1.5 $cmd
        cmd="lssec -f /etc/security/user -s default -a histexpire | grep -q 'histexpire=13'"
        eval $cmd
        check_status 2.1.1.6 $cmd
	cmd="lssec -f /etc/security/user -s default -a histsize | grep -q 'default histsize=5'"
        eval $cmd
        check_status 2.1.1.7 $cmd
	cmd="lssec -f /etc/security/user -s default -a maxexpired | grep -q 'default maxexpired=13'"
        eval $cmd
        check_status 2.1.1.8 $cmd
	cmd="lssec -f /etc/security/user -s default -a minspecialchar | grep -q 'default minspecialchar=1'"
        eval $cmd
        check_status 2.1.1.9 $cmd
	cmd="lssec -f /etc/security/user -s default -a maxrepeats | grep -q 'default maxrepeats=4'"
        eval $cmd
        check_status 2.1.1.10 $cmd
	cmd="lssec -f /etc/security/user -s default -a mindigit | grep -q 'default mindigit=1'"
        eval $cmd
        check_status 2.1.1.11 $cmd
	cmd="lssec -f /etc/security/user -s default -a minloweralpha | grep -q 'default minloweralpha'"
        eval $cmd
        check_status 2.1.1.12 $cmd
	cmd="lssec -f /etc/security/user -s default -a minupperalpha | grep -q 'default minupperalpha=1'"
        eval $cmd
        check_status 2.1.1.13 $cmd

        msg_header 2.2.1. Login Policy
        counter=0
        for i in daemon bin sys adm nobody
        do
                counter=`expr $counter + 1`
                cmd="lsuser -c -a login rlogin $i | grep -q "$i:false:false""
                eval $cmd
                check_status 2.2.1.$counter $cmd
        done
        cmd="lssec -f /etc/security/login.cfg -s default -a logindisable | grep -q 'default logindisable=10'"
        eval $cmd
        check_status 2.2.1.8 $cmd
        cmd="lssec -f /etc/security/user -s default -a loginretries | grep -q 'default loginretries=3'"
        eval $cmd
        check_status 2.2.1.9 $cmd

        msg_header 2.3.1. System Services Management
        counter=0
        for i in qdaemon lpd piobe dt rcnfs
        do
                counter=`expr $counter + 1`
                cmd="lsitab $i"
                EXIT_STATUS=1
                eval $cmd
                check_status 2.3.1.$counter $cmd
        done
        for i in sendmail snmpd dhcpcd dhcprd dhcpsd autoconf6 gated mrouted named routed rwhod timed dpid2 hostmibd snmpmibd aixmibd ndpd-host ndpd-router
        do
                counter=`expr $counter + 1`
                cmd="cat /etc/rc.tcpip | grep 'start /.*$i' | grep -q '^#'"
                EXIT_STATUS=0
                eval $cmd
                check_status 2.3.1.$counter $cmd
        done
        for i in telnet exec daytime shell cmsd ttdbserver uucp time login talk ntalk ftp chargen discard dtspc echo pcnfsd rstatd rusersd rwalld sprayd klogin kshell rquotad tftp imap2 pop3 finger instsrv
        do
                counter=`expr $counter + 1`
                cmd="cat /etc/inetd.conf | grep -q '#$i'"
                EXIT_STATUS=0
                eval $cmd
                check_status 2.3.1.$counter $cmd
        done
        cmd="ls -ld /etc/inetd.conf | grep -q '^\-rw\-r\-\-r\-\-.*root'"
        eval $cmd
        check_status 2.3.1.53 $cmd

        msg_header 2.4.1. Disabling Remote Services
        cmd="ls -ld /usr/bin/rcp /usr/bin/rlogin  /usr/bin/rsh | grep -v '\-\-\-\-\-\-\-\-\-\-'"
        EXIT_STATUS=1
        eval $cmd
        check_status 2.4.1.1 $cmd
        cmd="ls -ld /usr/sbin/rlogind /usr/sbin/rshd  /usr/sbin/tftpd  | grep -v '\-\-\-\-\-\-\-\-\-\-'"
        EXIT_STATUS=1
        eval $cmd
        check_status 2.4.1.2 $cmd

        msg_header 2.4.2. Configuring SSH set privilege separation
        cmd="grep -q 'UsePrivilegeSeparation yes' /etc/ssh/sshd_config"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.4.2. $cmd

        #msg_header 2.4.3. Configuring SSH removal of .shosts files
        #cmd="find / -name ".shosts";echo ' '"
        #EXIT_STATUS=0
        #eval $cmd
        #check_status 2.4.3. $cmd

        msg_header 2.4.4. Configuring SSH removal of /etc/shosts.equiv
        cmd="ls -ld /etc/shosts.equiv"
        EXIT_STATUS=2
        eval $cmd
        check_status 2.4.4. $cmd

        msg_header 2.4.5. Configuring SSH limit access via SSH
        cmd="egrep '^AllowUsers|^AllowGroups|^DenyUsers|^DenyGroups' /etc/ssh/sshd_config | wc -l"
        [[ $(eval $cmd) -eq 4 ]] && sub_msg_ok 2.4.5. $cmd || sub_msg_ko 2.4.5. $cmd

        msg_header 2.4.6. Configuring SSH sshd_config permissions lockdown
        cmd="ls -ld /etc/ssh/sshd_config | grep -q '\-rw\-r\-\-r\-\-'"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.4.6. $cmd

        msg_header 2.5.1. Automated Authentication
        cmd="find ./ -name .netrc -o -name .rhosts | wc -l"
        [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 2.5.1.1 $cmd || sub_msg_ko 2.5.1.1 $cmd
        cmd="ls -ld /etc/hosts.equiv  | grep -q '\-rw\-r\-\-r\-\-'"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.5.1.2 $cmd

        msg_header 2.6.1. TCP/IP Hardening
        counter=0
tcp_param="ipsrcrouteforward = \"0\"
ipignoreredirects = \"1\"
clean_partial_conns = \"1\"
ipsrcroutesend = \"0\"
ipforwarding = \"0\"
ipsendredirects = \"0\"
ip6srcrouteforward = \"0\"
directed_broadcast = \"0\"
tcp_pmtu_discover = \"0\"
bcastping = \"0\"
icmpaddressmask = \"0\"
udp_pmtu_discover = \"0\"
ipsrcrouterecv = \"0\"
nonlocsrcroute = \"0\"
tcp_tcpsecure = \"7\"
sockthresh = \"60\"
rfc1323 = \"1\"
tcp_sendspace = \"262144\"
tcp_recvspace = \"262144\"
tcp_mssdflt = \"1448\"
nfs_use_reserved_ports = \"1\""
        echo "$tcp_param" | while IFS= read -r line
        do
                counter=`expr $counter + 1`
               cmd="grep '$line' /etc/tunables/nextboot | wc -l"
               [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 2.6.1.$counter  $cmd || sub_msg_ko 2.6.1.$counter $cmd
        done

        msg_header 2.7.1. Miscellaneous Enhancements
        #cmd="cat /var/adm/cron/cron.allow | egrep 'root|adm' | wc -l"
        #[[ $(eval $cmd) -eq 2 ]] && sub_msg_ok 2.7.1.1 $cmd || sub_msg_ko 2.7.1.1 $cmd
        #cmd="/var/adm/cron/cron.deny"
        #[[ ! -f $cmd ]] && sub_msg_ok 2.7.1.1 $cmd || sub_msg_ko 2.7.1.1 $cmd
        cmd="cat  /var/adm/cron/at.allow | grep -i 'root' | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 2.7.1.2 $cmd || sub_msg_ko 2.7.1.2 $cmd
        cmd="/var/adm/cron/at.deny"
        [[ ! -f $cmd ]] && sub_msg_ok 2.7.1.2 $cmd || sub_msg_ko 2.7.1.2 $cmd
        cmd="cat /etc/ftpusers | grep -i root | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 2.7.1.3 $cmd || sub_msg_ko 2.7.1.3 $cmd
        cmd="lssec -f /etc/security/login.cfg -s default -a herald | grep -i Unauthorized | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 2.7.1.4 $cmd || sub_msg_ko 2.7.1.4 $cmd
        cmd="grep -i guest /etc/security/passwd  | wc -l"
        [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 2.7.1.5 $cmd || sub_msg_ko 2.7.1.5 $cmd
        cmd="Crontab permission"
        OUT=$(crontab -l |egrep -v '^#' |awk '{print $6}' |grep "^/" |sort -u | while read DIR
        do
                DIR=${DIR:-$(pwd)}
                while [[ -a ${DIR} ]]
                do
                        [[ "$(ls -ld ${DIR} | grep -v '^l')" = @(????????w? *) ]] && echo " WARNING ${DIR} is world writable"
                        [[ "$(ls -ld ${DIR} | grep -v '^l')" = @(?????w???? *) ]] && echo " WARNING ${DIR} is group writable"
                        [[ "$(ls -ld ${DIR} | awk '{print $3}' | grep -v '^l')" != @(root|bin) ]] && echo " WARNING ${DIR} is not owned by root or bin"
                        DIR=${DIR%/*}
                done
        done
        )
        [[ $(echo "$OUT" | wc -c) -le 1 ]] && sub_msg_ok 2.7.1.6 $cmd || sub_msg_ko 2.7.1.6 $OUT \\n $cmd
        cmd="lssec -f /etc/security/user -s default -a umask | grep 'default umask=27' | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 2.7.1.7 $cmd || sub_msg_ko 2.7.1.7 $cmd
        cmd="mount | grep -iq audit"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.1.8 $cmd
        cmd="grep 'auth.info*[[:space:]]*/var/adm/authlog*[[:space:]]*rotate*[[:space:]]*time*[[:space:]]*1w*[[:space:]]*files*[[:space:]]*4' /etc/syslog.conf | wc -l"
        [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 2.7.1.9 $cmd || sub_msg_ko 2.7.1.9 $cmd
        cmd="grep 'Unauthorized use of this system is prohibited' /etc/ssh/ssh_banner | wc -l"
        [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 2.7.1.10 $cmd || sub_msg_ko 2.7.1.10 $cmd
        cmd="grep '^#community*[[:space:]]*public' /etc/snmpd.conf  | wc -l"
        [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 2.7.1.11 $cmd || sub_msg_ko 2.7.1.11 $cmd
        cmd="ls -ld /etc/security| grep 'drwxr\-x\-\-\-' | grep 'root' | grep 'security' | wc -l"
        [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 2.7.1.12 $cmd || sub_msg_ko 2.7.1.12 $cmd

        msg_header 2.7.2.1 Configuring SSH -disable null passwords
        cmd="grep '^PermitEmptyPasswords*[[:space:]]*no' /etc/ssh/sshd_config | wc -l"
        [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 2.7.2.1 $cmd || sub_msg_ko 2.7.2.1 $cmd
        
	msg_header 2.7.2.2 Configuring SSH -ignore Rhosts
        cmd="grep '^IgnoreRhosts*[[:space:]]*yes' /etc/ssh/sshd_config | wc -l"
        [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 2.7.2.2 $cmd || sub_msg_ko 2.7.2.2 $cmd
	
	msg_header 2.7.2.3 Configuring SSH -ignore PermitUserEnvironment 
        cmd="grep '^PermitUserEnvironment*[[:space:]]*no' /etc/ssh/sshd_config | wc -l"
        [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 2.7.2.3 $cmd || sub_msg_ko 2.7.2.3 $cmd
	
	msg_header 2.7.2.4 Configuring SSH -ignore HostbasedAuthentication 
        cmd="grep '^HostbasedAuthentication*[[:space:]]*no' /etc/ssh/sshd_config | wc -l"
        [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 2.7.2.4 $cmd || sub_msg_ko 2.7.2.4 $cmd

        msg_header 2.7.3. Miscellaneous Config -all unlocked accounts must have a password
        cmd="pwdck -n ALL | wc -l"
        [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 2.7.3 $cmd || sub_msg_ko 2.7.3 $cmd

        msg_header 2.7.4. TE implementation
        info_msg Implement this control manually

        msg_header 2.8.1. Miscellaneous Config disable NCS
        cmd="lsitab -a |grep "/etc/rc.ncs" | cut -f1 -d: | wc -l"
        [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 2.8.1 $cmd || sub_msg_ko 2.8.1 $cmd

        msg_header 2.8.2. Miscellaneous Config disable httpdlite
        cmd="lsitab httpdlite"
        EXIT_STATUS=1
        eval $cmd
        check_status 2.8..2 $cmd

        msg_header 2.8.3. Miscellaneous Config disable pmd
        cmd="lsitab pmd"
        EXIT_STATUS=1
        eval $cmd
        check_status 2.8.3 $cmd

        msg_header 2.8.4. Miscellaneous Config block talk/write
        cmd="grep 'mesg n' /etc/profile /etc/csh.login  | wc -l"
        [[ $(eval $cmd) -eq 2 ]] && sub_msg_ok 2.8.4 $cmd || sub_msg_ko 2.8.4 $cmd

        msg_header 2.8.5. Miscellaneous Config enable sar accounting
        cmd="cat /var/spool/cron/crontabs/adm | egrep 'sa|acct' | grep -v '#' | wc -l"
        [[ $(eval $cmd) -eq 8 ]] && sub_msg_ok 2.8.5 $cmd || sub_msg_ko 2.8.5 $cmd

        msg_header 2.8.6. Miscellaneous Config ftp banner
        cmd="dspcat -g /usr/lib/nls/msg/en_US/ftpd.cat | grep '^9[[:blank:]]' | grep ' Authorized uses only. All activity may be monitored and reported' | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 2.8.6 $cmd || sub_msg_ko 2.8.6 $cmd

        msg_header 2.8.7. Miscellaneous Config /etc/motd
        cmd="ls -ld /etc/motd | grep '\-rw\-r\-\-r\-\-' | grep 'bin' | wc -l'"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 2.8.7 $cmd || sub_msg_ko 2.8.7 $cmd

        msg_header 2.8.8. Miscellaneous Config all user id must be unique
        cmd="cut -d: -f 3 /etc/passwd |sort -n |uniq -d | wc -l"
        [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 2.8.8 $cmd || sub_msg_ko 2.8.8 $cmd

        msg_header 2.8.9. Miscellaneous Config all group id must be unique
        cmd="cut -d: -f 3 /etc/group |sort -n | uniq -d | wc -l"
        [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 2.8.9 $cmd || sub_msg_ko 2.8.9 $cmd

       #msg_header 2.8.10. Miscellaneous Config unnecessary user and group removal
       # cmd="egrep 'uucp|nuucp|lpd|printq' /etc/passwd /etc/group | wc -l"
       # [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 2.8.10 $cmd || sub_msg_ko 2.8.10 $cmd

        msg_header 2.8.11. Miscellaneous Config removing current working directory
        cmd="su - root -c 'echo ${PATH}' |awk '/((:[\t]*:)|(:[ \t]*$)|(^[ \t]*:)|(^.:)|(:.$)|(:.:))/' | wc -l"
        [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 2.8.11 $cmd || sub_msg_ko 2.8.11 $cmd

        msg_header 2.9.1. Restrict Cipher list
        cmd="grep  ^Cipher /etc/ssh/sshd_config | wc -l"
        [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 2.9.1 $cmd || sub_msg_ko 2.9.1 $cmd

        msg_header 2.9.2. Enable TLS 1.2 \& Above protocol
        info_msg Not Applicable as HTTP packages are not installed

        msg_header 2.10.1. /etc/mail/sendmail.cf SmtpGreetingMessage
        cmd="grep 'SmtpGreetingMessage=mailerready' /etc/mail/sendmail.cf | grep -v '#' | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 2.10.1 $cmd || sub_msg_ko 2.10.1 $cmd

        msg_header 2.10.2. /etc/mail/sendmail.cf permissions and ownership
        cmd="ls -ld /etc/mail/sendmail.cf | grep '\-rw\-r\-\-\-\-\-' | grep 'root' | grep 'system' | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 2.10.2 $cmd || sub_msg_ko 2.10.2 $cmd

        msg_header 2.10.3. /var/spool/mqueue permissions and ownership
        cmd="ls -ld /var/spool/mqueue | grep 'drwx\-\-\-\-\-\-' | grep 'root' | grep 'system' | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 2.10.3 $cmd || sub_msg_ko 2.10.3 $cmd

        msg_header 2.11.1. Install updated security patches
        info_msg Manual verification is required

}
aix_artifacts()
{
        echo "======================================================================"
        echo "                 AIX SCD Artifacts Collection Started"
        echo "======================================================================"
        msg_header 2.1. Filesystem Configuration
        cmd="lssec -f /etc/security/user -s default -a mindiff "
        CTRL_NO=2.1.1
        output
        cmd="lssec -f /etc/security/user -s default -a minage"
        CTRL_NO=2.1.2
        output
        cmd="lssec -f /etc/security/user -s default -a maxage"
        CTRL_NO=2.1.3
        output
        cmd="lssec -f /etc/security/user -s default -a minlen"
        CTRL_NO=2.1.4
        output
        cmd="lssec -f /etc/security/user -s default -a minalpha"
        CTRL_NO=2.1.5
        output
        cmd="lssec -f /etc/security/user -s default -a histexpire"
        CTRL_NO=2.1.1.6
        output
        cmd="lssec -f /etc/security/user -s default -a histsize"
        CTRL_NO=2.1.1.7
        output
        cmd="lssec -f /etc/security/user -s default -a maxexpired"
        CTRL_NO=2.1.1.8
        output
        cmd="lssec -f /etc/security/user -s default -a minspecialchar"
        CTRL_NO=2.1.1.9
        output
        cmd="lssec -f /etc/security/user -s default -a maxrepeats"
        CTRL_NO=2.1.1.10
        output
        cmd="lssec -f /etc/security/user -s default -a mindigit"
        CTRL_NO=2.1.1.11
        output
        cmd="lssec -f /etc/security/user -s default -a minloweralpha"
        CTRL_NO=2.1.1.12
        output
        cmd="lssec -f /etc/security/user -s default -a minupperalpha"
        CTRL_NO=2.1.1.13
        output

        msg_header 2.2.1. Login Policy
        counter=0
        for i in daemon bin sys adm nobody
        do
                counter=`expr $counter + 1`
                cmd="lsuser -c -a login rlogin $i"
                CTRL_NO=2.2.1.$counter
                output
        done
        cmd="lssec -f /etc/security/login.cfg -s default -a logindisable "
        CTRL_NO=2.2.1.8
        output
        cmd="lssec -f /etc/security/user -s default -a loginretries"
        CTRL_NO=2.2.1.9
        output

        msg_header 2.3.1. System Services Management
        counter=0
        for i in qdaemon lpd piobe dt rcnfs
        do
                counter=`expr $counter + 1`
                cmd="lsitab $i"
                CTRL_NO=2.3.1.$counter
                output
        done
        for i in sendmail snmpd dhcpcd dhcprd dhcpsd autoconf6 gated mrouted named routed rwhod timed dpid2 hostmibd snmpmibd aixmibd ndpd-host ndpd-router
        do
                counter=`expr $counter + 1`
                cmd="cat /etc/rc.tcpip | grep 'start /.*$i' | grep '^#'"
                CTRL_NO=2.3.1.$counter
                output
        done
        for i in telnet exec daytime shell cmsd ttdbserver uucp time login talk ntalk ftp chargen discard dtspc echo pcnfsd rstatd rusersd rwalld sprayd klogin kshell rquotad tftp imap2 pop3 finger instsrv
        do
                counter=`expr $counter + 1`
                cmd="cat /etc/inetd.conf | grep '#$i'"
                CTRL_NO=2.3.1.$counter
                output
        done
        cmd="ls -ld /etc/inetd.conf"
        CTRL_NO=2.3.1.53
        output

        msg_header 2.4.1. Disabling Remote Services
        cmd="ls -ld /usr/bin/rcp /usr/bin/rlogin  /usr/bin/rsh"
        CTRL_NO=2.4.1.1
        output
        cmd="ls -ld /usr/sbin/rlogind /usr/sbin/rshd  /usr/sbin/tftpd"
        CTRL_NO=2.4.1.2
        output

        msg_header 2.4.2. Configuring SSH set privilege separation
        cmd="grep 'UsePrivilegeSeparation yes' /etc/ssh/sshd_config"
        CTRL_NO=2.4.2
        output

        #msg_header 2.4.3. Configuring SSH removal of .shosts files
        #cmd="find / -name '.shosts' 2> /dev/null"
        #CTRL_NO=2.4.3
        #output

        msg_header 2.4.4. Configuring SSH removal of /etc/shosts.equiv
        cmd="ls -ld /etc/shosts.equiv"
        CTRL_NO=2.4.4
        output

        msg_header 2.4.5. Configuring SSH limit access via SSH
        cmd="egrep '^AllowUsers|^AllowGroups|^DenyUsers|^DenyGroups' /etc/ssh/sshd_config | grep -v '#'"
        CTRL_NO=2.4.5
        output

        msg_header 2.4.6. Configuring SSH sshd_config permissions lockdown
        cmd="ls -ld /etc/ssh/sshd_config"
        CTRL_NO=2.4.6
        output

        msg_header 2.5.1. Automated Authentication
        cmd="find ./ -name .netrc -o -name .rhosts 2> /dev/null"
        CTRL_NO=2.5.1
        output
        cmd="ls -ld /etc/hosts.equiv"
        CTRL_NO=2.5.2
        output

        msg_header 2.6.1. TCP/IP Hardening
        counter=0
tcp_param="ipsrcrouteforward = \"0\"
ipignoreredirects = \"1\"
clean_partial_conns = \"1\"
ipsrcroutesend = \"0\"
ipforwarding = \"0\"
ipsendredirects = \"0\"
ip6srcrouteforward = \"0\"
directed_broadcast = \"0\"
tcp_pmtu_discover = \"0\"
bcastping = \"0\"
icmpaddressmask = \"0\"
udp_pmtu_discover = \"0\"
ipsrcrouterecv = \"0\"
nonlocsrcroute = \"0\"
tcp_tcpsecure = \"7\"
sockthresh = \"60\"
rfc1323 = \"1\"
tcp_sendspace = \"262144\"
tcp_recvspace = \"262144\"
tcp_mssdflt = \"1448\"
nfs_use_reserved_ports = \"1\""
        echo "$tcp_param" | while IFS= read -r line
        do
                counter=`expr $counter + 1`
                cmd="grep '$line' /etc/tunables/nextboot"
                CTRL_NO=2.6.1.$counter
                output
        done

        msg_header 2.7.1. Miscellaneous Enhancements
        #cmd="cat /var/adm/cron/cron.allow"
        #CTRL_NO=2.7.1.1
        #output
        #cmd=" ls -ld /var/adm/cron/cron.deny"
        #CTRL_NO=2.7.1.1
        #output
        cmd="cat  /var/adm/cron/at.allow"
        CTRL_NO=2.7.1.2
        output
        cmd="ls -ld /var/adm/cron/at.deny"
        CTRL_NO=2.7.1.2
        output
        cmd="cat /etc/ftpusers | grep -i root"
        CTRL_NO=2.7.1.3
        output
        cmd="lssec -f /etc/security/login.cfg -s default -a herald"
        CTRL_NO=2.7.1.4
        output
        cmd="grep -i guest /etc/security/passwd"
        CTRL_NO=2.7.1.5
        output
        cmd="$(crontab -l |egrep -v '^#' |awk '{print $6}' |grep "^/" |sort -u | while read DIR
        do
                DIR=${DIR:-$(pwd)}
                while [[ -a ${DIR} ]]
                do
                        [[ "$(ls -ld ${DIR} | grep -v '^l')" = @(????????w? *) ]] && echo " WARNING ${DIR} is world writable"
                        [[ "$(ls -ld ${DIR} | grep -v '^l')" = @(?????w???? *) ]] && echo " WARNING ${DIR} is group writable"
                        [[ "$(ls -ld ${DIR} | awk '{print $3}' | grep -v '^l')" != @(root|bin) ]] && echo " WARNING ${DIR} is not owned by root or bin"
                        DIR=${DIR%/*}
                done
        done
        )"
        CTRL_NO=2.7.1.6
        output
        cmd="lssec -f /etc/security/user -s default -a umask"
        CTRL_NO=2.7.1.7
        output
        cmd="mount | grep -i audit"
        CTRL_NO=2.7.1.8
        output
        cmd="grep 'auth.info*[[:space:]]*/var/adm/authlog*[[:space:]]*rotate*[[:space:]]*time*[[:space:]]*1w*[[:space:]]*files*[[:space:]]*4' /etc/syslog.conf"
        CTRL_NO=2.7.1.9
        output
        cmd="grep 'Unauthorized use of this system is prohibited' /etc/ssh/ssh_banner"
        CTRL_NO=2.7.1.10
        output
        cmd="grep '^#community*[[:space:]]*public' /etc/snmpd.conf"
        CTRL_NO=2.7.1.11
        output
        cmd="ls -ld /etc/security"
        CTRL_NO=2.7.1.12
        output

        msg_header 2.7.2.1 Configuring SSH -disable null passwords
        cmd="grep '^PermitEmptyPasswords*[[:space:]]*no' /etc/ssh/sshd_config"
        CTRL_NO=2.7.2.1
        output

        msg_header 2.7.2.2 Configuring SSH -ignore Rhosts
        cmd="grep '^IgnoreRhosts*[[:space:]]*yes' /etc/ssh/sshd_config"
        CTRL_NO=2.7.2.2
        output

        msg_header 2.7.2.3 Configuring SSH -ignore PermitUserEnvironment
        cmd="grep '^PermitUserEnvironment*[[:space:]]*no' /etc/ssh/sshd_config"
        CTRL_NO=2.7.2.3
        output

        msg_header 2.7.2.4 Configuring SSH -ignore HostbasedAuthentication 
        cmd="grep '^HostbasedAuthentication*[[:space:]]*no' /etc/ssh/sshd_config"
        CTRL_NO=2.7.2.4
        output

        msg_header 2.7.3. Miscellaneous Config -all unlocked accounts must have a password
        cmd="pwdck -n ALL"
        CTRL_NO=2.7.3
        output

        msg_header 2.8.1. Miscellaneous Config disable NCS
        cmd="lsitab -a |grep "/etc/rc.ncs" | cut -f1 -d: | wc -l"
        CTRL_NO=2.8.1
        output

        msg_header 2.8.2. Miscellaneous Config disable httpdlite
        cmd="lsitab httpdlite"
        CTRL_NO=2.8.2
        output

        msg_header 2.8.3. Miscellaneous Config disable pmd
        cmd="lsitab pmd"
        CTRL_NO=2.8.3
        output

        msg_header 2.8.4. Miscellaneous Config block talk/write
        cmd="grep 'mesg n' /etc/profile /etc/csh.login"
        CTRL_NO=2.8.4
        output

        msg_header 2.8.5. Miscellaneous Config enable sar accounting
        cmd="cat /var/spool/cron/crontabs/adm"
        CTRL_NO=2.8.5
        output

        msg_header 2.8.6. Miscellaneous Config ftp banner
        cmd="dspcat -g /usr/lib/nls/msg/en_US/ftpd.cat | grep '^9[[:blank:]]'"
        CTRL_NO=2.8.6
        output

        msg_header 2.8.7. Miscellaneous Config /etc/motd
        cmd="ls -ld /etc/motd"
        CTRL_NO=2.8.7
        output

        msg_header 2.8.8. Miscellaneous Config all user id must be unique
        cmd="cut -d: -f 3 /etc/passwd |sort -n |uniq -d"
        CTRL_NO=2.8.8
        output

        msg_header 2.8.9. Miscellaneous Config all group id must be unique
        cmd="cut -d: -f 3 /etc/group |sort -n | uniq -d"
        CTRL_NO=2.8.9
        output

        #msg_header 2.8.10. Miscellaneous Config unnecessary user and group removal
        #cmd="egrep 'uucp|nuucp|lpd|printq' /etc/passwd /etc/group"
        #CTRL_NO=2.8.10
        #output

        msg_header 2.8.11. Miscellaneous Config removing current working directory
        cmd="su - root -c 'echo ${PATH}' |awk '/((:[\t]*:)|(:[ \t]*$)|(^[ \t]*:)|(^.:)|(:.$)|(:.:))/'"
        CTRL_NO=2.8.11
        output

        msg_header 2.9.1. Restrict Cipher list
        cmd="grep  ^Cipher /etc/ssh/sshd_config"
        CTRL_NO=2.9.1
        output

        msg_header 2.9.2. Enable TLS 1.2 \& Above protocol
        info_msg Not Applicable as HTTP packages are not installed

        msg_header 2.10.1. /etc/mail/sendmail.cf SmtpGreetingMessage
        cmd="grep 'SmtpGreetingMessage=mailerready' /etc/mail/sendmail.cf | grep -v '#'"
        CTRL_NO=2.10.1
        output

        msg_header 2.10.2. /etc/mail/sendmail.cf permissions and ownership
        cmd="ls -ld /etc/mail/sendmail.cf"
        CTRL_NO=2.10.2
        output

        msg_header 2.10.3. /var/spool/mqueue permissions and ownership
        cmd="ls -ld /var/spool/mqueue"
        CTRL_NO=2.10.3
        output


}

usage()
{
        echo "usage:"
        echo "      -i :- Implement SCD V14 on server "
        echo "      -v :- Verify SCD V14 control points on server"
        echo "      -a :- Collects SCD V14 artifatcs"
        echo "      -d :- Use this option with other options to start script in debug mode"
}
while getopts 'ivadh' c
do
  case $c in
    i)
        if [ "$(uname)" == "Linux" ]
        then
                linux_implement | tee -a /tmp/$(hostname)_SCD_LINUX_V14_log_impl_"$cdate".txt 2>&1
        else
                aix_implement | tee -a /tmp/$(hostname)_SCD_AIX_V14_log_impl_"$cdate".txt 2>&1
        fi ;;
    v)
        if [ "$(uname)" == "Linux" ]
        then
                linux_verification | tee -a /tmp/$(hostname)_SCD_LINUX_V14_log_veri_"$cdate".txt 2>&1
        else
                aix_verification | tee -a /tmp/$(hostname)_SCD_AIX_V14_log_veri_"$cdate".txt 2>&1
        fi;;
    a)
        if [ "$(uname)" == "Linux" ]
        then
                linux_artifacts | tee -a /tmp/$(hostname)_SCD_LINUX_V14_log_artifacts_"$cdate".txt 2>&1
        else
                aix_artifacts | tee -a /tmp/$(hostname)_SCD_AIX_V14_log_artifacts_"$cdate".txt 2>&1
        fi;;
    d) set -x;;
    h|?) usage ;;
    *) usage;;
  esac
done
if ((OPTIND == 1))
then
    echo "No options specified"
    usage
fi



=========================================================================================================================================================================>

SCDv14

#!/bin/bash
#####Tile :- SBI SCD V14
#####Purpose :- Implementation,Verification and artifacts collection of SCD V14 on RHEL 7 and AIX Servers
#####Version 14
if [ "$(id -u)" -ne 0 ]
then
        echo "=========================================="
        echo "Script needs to be executed with root user"
        echo "=========================================="
        exit
fi
if [ "$(uname)" == "Linux" ]
then
        ECHO="echo -e"
else
        ECHO="echo"
fi
cdate="$(date '+%d%m%Y_%H%M%S')"
DHM=$(date '+%d%m%Y_%H%M')
OKCOLOR="\033[42;30m"
KOCOLOR="\033[41;30m"
COCOLOR="\033[43;30m"
BASECOLOR="\033[40;37m"
EXIT_STATUS=0
printok()
        {
        $ECHO "$OKCOLOR $1 $BASECOLOR"
        }
printko()
        {
        $ECHO "$KOCOLOR $1 $BASECOLOR"
        }
output()
{
        $ECHO "Execute Command:- $cmd"
        $ECHO "Output:-"
        eval $cmd
        $ECHO ".........................................................................................................................."
}
msg_header()
{
        $ECHO "====================================================="
        $ECHO "$@"
        $ECHO "====================================================="
}
sub_msg_ok()
{
        $ECHO  "$OKCOLOR $@ $BASECOLOR --> $OKCOLOR PASS $BASECOLOR"
        $ECHO "....................................................."
}
sub_msg_ko()
{
        $ECHO "$KOCOLOR $@ $BASECOLOR --> $KOCOLOR FAILED $BASECOLOR"
        $ECHO "....................................................."
}
info_msg()
{
        $ECHO "$COCOLOR $@ $BASECOLOR"
        $ECHO "....................................................."
}
backup_file()
{
        SCD_BKP_DIR="/root/SCD14_bkp_config_$DHM"
        mkdir -p $SCD_BKP_DIR
        cp $1 $SCD_BKP_DIR/$(echo $1 | awk -F '/' '{print $NF}')_$DHM
}
check_status()
{
if [ $? -eq $EXIT_STATUS ]
then
        sub_msg_ok "$@"
else
        sub_msg_ko "$@"
fi
}

check_implement()
{
if [ $(grep "$@" $FILENAME | wc -l) -ge 1 ]
then
        sub_msg_ok "$CTRL_NO $@ $FILENAME"
else
        echo "$@"  | sed 's/*[[:space:]]*//g'>> $FILENAME
        sub_msg_ok "$CTRL_NO $@ $FILENAME"
fi
}

linux_implement()
{
        echo "======================================================================"
        echo "                LINUX SCD Implementation Started"
        echo "======================================================================"
        rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
        rpm -qa --last > $SCD_BKP_DIR/rpm_qa_last_"$DHM".txt
        sysctl -a >  $SCD_BKP_DIR/sysctl_a_"$DHM".txt 2>> /dev/null
        systemctl --all list-unit-files > $SCD_BKP_DIR/systemctl_all_list-unit-files_"$DHM".txt

        msg_header "2.1. Filesystem Configuration"

        cmd='chmod 1777 /tmp/ /var/tmp/ /dev/shm'
        EXIT_STATUS=0
        $cmd
        check_status 2.1.1 $cmd

        cmd='mount -o remount,nodev,nosuid,noexec /home /tmp'
        EXIT_STATUS=0
        $cmd
        check_status 2.1.2 $cmd

        backup_file /etc/fstab
        cmd="sed -i -e '/tmp.*/s/defaults.*/defaults,nodev,noexec,nosuid 1 2/g' /etc/fstab"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.3 $cmd
        cmd="sed -i -e '/home /s/defaults.*/defaults,nodev,noexec,nosuid 1 2/g' /etc/fstab"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.3 $cmd

        backup_file /etc/modprobe.d/CIS.conf
        CTRL_NO="2.1.4.1"
        CONFIG="install cramfs /bin/true"
        FILENAME="/etc/modprobe.d/CIS.conf"
        check_implement "$CONFIG"
        CTRL_NO="2.1.4.2"
        CONFIG="install freevxfs /bin/true"
        check_implement "$CONFIG"
        CTRL_NO="2.1.4.3"
        CONFIG="install jffs2 /bin/true"
        check_implement "$CONFIG"
        CTRL_NO="2.1.4.4"
        CONFIG="install hfs /bin/true"
        check_implement "$CONFIG"
        CTRL_NO="2.1.4.5"
        CONFIG="install hfsplus /bin/true"
        check_implement "$CONFIG"
        CTRL_NO="2.1.4.6"
        CONFIG="install squashfs /bin/true"
        check_implement "$CONFIG"

        msg_header "2.2. Configure Software Updates"
        backup_file /etc/yum.conf
        cmd='sed -i -e '/gpgcheck/s/gpgcheck.*/gpgcheck=1/' /etc/yum.conf'
        EXIT_STATUS=0
        $cmd
        check_status 2.2.1 $cmd
        backup_file /etc/yum.repos.d/base.repo
        cmd='sed -i -e '/gpgcheck/s/gpgcheck.*/gpgcheck=1/' /etc/yum.repos.d/base.repo'
        EXIT_STATUS=0
        $cmd
        check_status 2.2.2 $cmd

        msg_header "2.3. Advanced Intrusion Detection Environment (AIDE)"
        cmd='yum install aide -y'
        EXIT_STATUS=0
        $cmd
        check_status 2.3.1 $cmd
        #cmd='aide --init && mv /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz &'
        #EXIT_STATUS=0
        #eval $cmd
        #check_status 2.3.2 $cmd

        msg_header "3.1. Remove Legacy Services"
        cmd='systemctl disable telnet.socket'
        EXIT_STATUS=1
        eval $cmd
        check_status 3.1.1 $cmd

        cmd='yum erase telnet* -y'
        EXIT_STATUS=0
        eval $cmd
        check_status 3.1.2 $cmd
        cmd='yum erase rsh -y'
        EXIT_STATUS=0
        eval $cmd
        check_status 3.1.3 \& 3.1.4 $cmd
        cmd='yum erase ypbind -y'
        EXIT_STATUS=0
        eval $cmd
        check_status 3.1.5 $cmd
        cmd='yum erase ypserv -y'
        EXIT_STATUS=0
        eval $cmd
        check_status 3.1.6 $cmd
        cmd='systemctl disable tftp.socket'
        EXIT_STATUS=1
        eval $cmd
        check_status 3.1.7 $cmd
        cmd='yum erase tftp-server -y'
        EXIT_STATUS=0
        eval $cmd
        check_status 3.1.8 $cmd
        cmd='yum erase talk -y'
        EXIT_STATUS=0
        eval $cmd
        check_status 3.1.9 $cmd
        cmd='yum erase ntalk -y'
        EXIT_STATUS=0
        eval $cmd
        check_status 3.1.10 $cmd
        cmd='yum erase xinetd -y'
        EXIT_STATUS=0
        eval $cmd
        check_status 3.1.11 3.1.12 3.1.13 3.1.14 3.1.15 3.1.16 3.1.17  $cmd
        cmd='systemctl disable tcpmux-server'
        EXIT_STATUS=1
        eval $cmd
        check_status 3.1.18 $cmd
        cmd='rpm -e $(rpm -qa | grep  xorg-x11*) --nodeps'
        EXIT_STATUS=1
        eval $cmd
        check_status 3.1.19 $cmd
        cmd='yum erase avahi -y'
        EXIT_STATUS=0
        eval $cmd
        check_status 3.1.20 $cmd
        cmd='yum erase cups -y'
        EXIT_STATUS=0
        eval $cmd
        check_status 3.1.21 $cmd
        cmd='yum erase dhcp -y'
        EXIT_STATUS=0
        eval $cmd
        check_status 3.1.22 $cmd
        cmd='yum erase openldap-servers -y'
        EXIT_STATUS=0
        eval $cmd
        check_status 3.1.23 $cmd
        #cmd='yum erase nfs-utils rpcbind -y'
        #EXIT_STATUS=0
        #eval $cmd
        #check_status 3.1.24 $cmd
      	#cmd='yum erase bind -y'
        #EXIT_STATUS=0
        #eval $cmd
        #check_status 3.1.25 $cmd
        cmd='yum erase vsftpd -y'
        EXIT_STATUS=0
        eval $cmd
        check_status 3.1.26 $cmd
        #cmd='yum erase httpd -y'
        #EXIT_STATUS=0
        #eval $cmd
        #check_status 3.1.27 $cmd
        cmd='yum erase dovecot -y'
        EXIT_STATUS=0
        eval $cmd
        check_status 3.1.28 $cmd
        cmd='yum erase samba -y'
        EXIT_STATUS=0
        eval $cmd
        #check_status 3.1.29 $cmd
        #cmd='yum erase squid -y'
        #EXIT_STATUS=0
        #eval $cmd
        check_status 3.1.30 $cmd
        cmd='yum erase snmpd -y'
        EXIT_STATUS=0
        eval $cmd
        check_status 3.1.31 $cmd

        msg_header 4.1. Configure Network Time Protocol
        cmd="sed -i 's/^OPTIONS=.*/OPTIONS=\"-u chrony\"/g' /etc/sysconfig/chronyd || echo 'OPTIONS=\"-u chrony\"' >> /etc/sysconfig/chronyd"
        eval $cmd
        check_status 4.1 $cmd

        msg_header 4.2. Configure Mail Transfer Agent for Local-Only Mode
        backup_file /etc/postfix/main.cf
        cmd="sed -i -e '/^inet_interfaces/s/inet_interfaces.*/inet_interfaces = localhost/g' /etc/postfix/main.cf"
        EXIT_STATUS=0
        eval $cmd
        check_status 4.2.1 $cmd
        cmd="systemctl restart postfix"
        EXIT_STATUS=0
        eval $cmd
        check_status 4.2.2 $cmd

        msg_header 4.3. Check for Unconfined Daemons
        cmd='ps -eZ | egrep "initrc" | egrep -vw "tr|ps|egrep|bash|awk" | tr ":" " " | awk "{ print $NF }"'
        EXIT_STATUS=0
        echo -e "$COCOLOR"
        eval $cmd
        echo -e "$BASECOLOR"
        check_status 4.3. $cmd

        msg_header 5. Network Configuration and Firewalls
        backup_file /etc/sysctl.conf
        cmd="/sbin/sysctl -w net.ipv4.ip_forward=0;/sbin/sysctl -w net.ipv4.conf.all.send_redirects=0;/sbin/sysctl -w net.ipv4.conf.default.send_redirects=0;/sbin/sysctl -w net.ipv4.conf.all.accept_source_route=0;/sbin/sysctl -w net.ipv4.conf.default.accept_source_route=0;/sbin/sysctl -w net.ipv4.conf.all.accept_redirects=0;/sbin/sysctl -w net.ipv4.conf.default.accept_redirects=0;/sbin/sysctl -w net.ipv4.conf.all.secure_redirects=0;/sbin/sysctl -w net.ipv4.conf.default.secure_redirects=0;/sbin/sysctl -w net.ipv4.conf.all.log_martians=1;/sbin/sysctl -w net.ipv4.conf.default.log_martians=1;/sbin/sysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1;/sbin/sysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1;/sbin/sysctl -w net.ipv4.conf.all.rp_filter=1;/sbin/sysctl -w net.ipv4.conf.default.rp_filter=1;/sbin/sysctl -w net.ipv4.tcp_syncookies=1;/sbin/sysctl -w net.ipv6.conf.all.accept_ra=0;/sbin/sysctl -w net.ipv6.conf.default.accept_ra=0;/sbin/sysctl -w net.ipv6.conf.all.accept_redirects=0;/sbin/sysctl -w net.ipv6.conf.default.accept_redirects=0;/sbin/sysctl -w net.ipv6.conf.all.disable_ipv6=1"
        EXIT_STATUS=0
        eval $cmd
        check_status 5.1 5.2 $cmd
        for i in net.ipv4.ip_forward*[[:space:]]*=*[[:space:]]*0 net.ipv4.conf.all.send_redirects*[[:space:]]*=*[[:space:]]*0 net.ipv4.conf.default.send_redirects*[[:space:]]*=*[[:space:]]*0 net.ipv4.conf.all.accept_source_route*[[:space:]]*=*[[:space:]]*0 net.ipv4.conf.default.accept_source_route*[[:space:]]*=*[[:space:]]*0 net.ipv4.conf.all.accept_redirects*[[:space:]]*=*[[:space:]]*0 net.ipv4.conf.default.accept_redirects*[[:space:]]*=*[[:space:]]*0 net.ipv4.conf.all.secure_redirects*[[:space:]]*=*[[:space:]]*0 net.ipv4.conf.default.secure_redirects*[[:space:]]*=*[[:space:]]*0 net.ipv4.conf.all.log_martians*[[:space:]]*=*[[:space:]]*1 net.ipv4.conf.default.log_martians*[[:space:]]*=*[[:space:]]*1 net.ipv4.icmp_echo_ignore_broadcasts*[[:space:]]*=*[[:space:]]*1 net.ipv4.icmp_ignore_bogus_error_responses*[[:space:]]*=*[[:space:]]*1 net.ipv4.conf.all.rp_filter*[[:space:]]*=*[[:space:]]*1 net.ipv4.conf.default.rp_filter*[[:space:]]*=*[[:space:]]*1 net.ipv4.tcp_syncookies*[[:space:]]*=*[[:space:]]*1 net.ipv6.conf.all.accept_ra*[[:space:]]*=*[[:space:]]*0 net.ipv6.conf.default.accept_ra*[[:space:]]*=*[[:space:]]*0 net.ipv6.conf.all.accept_redirects*[[:space:]]*=*[[:space:]]*0 net.ipv6.conf.default.accept_redirects*[[:space:]]*=*[[:space:]]*0 net.ipv6.conf.all.disable_ipv6*[[:space:]]*=*[[:space:]]*1
        do
                cmd="grep -q "$i" /etc/sysctl.conf || echo "$i" | sed 's/\*\[\[\:space\:\]\]\*/ /g' >> /etc/sysctl.conf"
                EXIT_STATUS=0
                eval $cmd
                check_status 5.1 5.2 $cmd
        done
        #msg_header 5.3. Install TCP Wrappers
        #cmd="echo 'ALL: ALL' > /etc/hosts.deny;chown root:root /etc/hosts.allow;chmod 644 /etc/hosts.allow;chown root:root /etc/hosts.deny;chmod 644 /etc/hosts.deny"
        #EXIT_STATUS=0
        #eval $cmd
        #check_status 5.3 $cmd

        msg_header 5.4. Uncommon Network Protocols
        CTRL_NO="5.4.1"
        CONFIG="install dccp /bin/true"
        FILENAME="/etc/modprobe.d/CIS.conf"
        check_implement "$CONFIG"
        CTRL_NO="5.4.2"
        CONFIG="install sctp /bin/true"
        FILENAME="/etc/modprobe.d/CIS.conf"
        check_implement "$CONFIG"
        CTRL_NO="5.4.3"
        CONFIG="install rds /bin/true"
        FILENAME="/etc/modprobe.d/CIS.conf"
        check_implement "$CONFIG"
        CTRL_NO="5.4.4"
        CONFIG="install tipc /bin/true"
        FILENAME="/etc/modprobe.d/CIS.conf"
        check_implement "$CONFIG"

        msg_header 5.5. Enable Server Firewall
        cmd="systemctl enable firewalld && systemctl restart firewalld"
        EXIT_STATUS=0
        eval $cmd
        check_status 5.5 $cmd

        msg_header 6.1. Configure rsyslog
        cmd="yum install rsyslog rsyslog-ng -y"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.1.1 $cmd
        cmd="systemctl enable rsyslog"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.1.2 $cmd

        backup_file /etc/rsyslog.conf
        for i in auth,user.\*[[:space:]]*/var/log/messages kern.\*[[:space:]]*/var/log/kern.log daemon.\*[[:space:]]*/var/log/daemon.log syslog.\*[[:space:]]*/var/log/syslog lpr,news,uucp,local0,local1,local2,local3,local4,local5,local6.\*[[:space:]]*/var/log/unused.log
        do
              cmd="grep -q "^$i" /etc/rsyslog.conf || echo "$i" | sed 's/\[\[\:space\:\]\]\*/ /g' >> /etc/rsyslog.conf"
              EXIT_STATUS=0
              eval $cmd
              check_status 6.1.3 $cmd
        done
        cmd="pkill -HUP rsyslogd"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.1.3 $cmd
        cmd="chown root:root /var/log/messages /var/log/kern.log /var/log/daemon.log /var/log/syslog /var/log/unused.log; chmod og-rwx /var/log/messages /var/log/kern.log /var/log/daemon.log /var/log/syslog /var/log/unused.log"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.1.4 $cmd
        for i in \$ModLoad*[[:space:]]*imtcp.so \$InputTCPServerRun*[[:space:]]*514 \$WorkDirectory*[[:space:]]*/var/lib/rsyslog
        do
              cmd="grep -q "^\\$i" /etc/rsyslog.conf || echo "\\$i" | sed 's/\*\[\[\:space\:\]\]\*/ /g' >> /etc/rsyslog.conf"
              EXIT_STATUS=0
              eval $cmd
              check_status 6.1.7 $cmd
        done
        cmd="pkill -HUP rsyslogd"
        EXIT_STATUS=0
        eval $cmd

        msg_header 6.2. Configure System Accounting
        cmd="systemctl enable auditd"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.1 $cmd

        cmd="sed -i -e 's/^max_log_file*[[:space:]]*=.*/max_log_file = 8/g' -e 's/^space_left_action*[[:space:]]*=.*/space_left_action = email/g' -e 's/action_mail_acct*[[:space:]]*=.*/action_mail_acct = root/g' -e 's/max_log_file_action*[[:space:]]*=.*/max_log_file_action = keep_logs/g' /etc/audit/auditd.conf"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.1 $cmd

        cmd="grep -q '^-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.1 $cmd
        cmd="grep -q '^-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.1 $cmd
        cmd="grep -q '^-a always,exit -F arch=b32 -S clock_settime -k time-change -w /etc/localtime -p wa -k time-change' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b32 -S clock_settime -k time-change -w /etc/localtime -p wa -k time-change' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.1 $cmd
        cmd="grep -q '^-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.2 $cmd
        cmd="grep -q '^-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.2 $cmd
        cmd="grep -q '^-a always,exit -F arch=b64 -S clock_settime -k time-change' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b64 -S clock_settime -k time-change' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.2 $cmd
        cmd="grep -q '^-a always,exit -F arch=b32 -S clock_settime -k time-change' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b32 -S clock_settime -k time-change' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.2 $cmd
        cmd="grep -q '^-w /etc/localtime -p wa -k time-change' /etc/audit/rules.d/audit.rules || echo '-w /etc/localtime -p wa -k time-change' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.2 $cmd
        cmd="grep -q '^-w /etc/group -p wa -k identity' /etc/audit/rules.d/audit.rules || echo '-w /etc/group -p wa -k identity' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.3 $cmd
        cmd="grep -q '^-w /etc/passwd -p wa -k identity' /etc/audit/rules.d/audit.rules || echo '-w /etc/passwd -p wa -k identity' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.3 $cmd
        cmd="grep -q '^-w /etc/gshadow -p wa -k identity' /etc/audit/rules.d/audit.rules || echo '-w /etc/gshadow -p wa -k identity' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.3 $cmd
        cmd="grep -q '^-w /etc/shadow -p wa -k identity' /etc/audit/rules.d/audit.rules || echo '-w /etc/shadow -p wa -k identity' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.3 $cmd
        cmd="grep -q '^-w /etc/security/opasswd -p wa -k identity' /etc/audit/rules.d/audit.rules || echo '-w /etc/security/opasswd -p wa -k identity' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.3 $cmd
        cmd="grep -q '^-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.4 $cmd
        cmd="grep -q '^-w /etc/issue -p wa -k system-locale' /etc/audit/rules.d/audit.rules || echo '-w /etc/issue -p wa -k system-locale' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.4 $cmd
        cmd="grep -q '^-w /etc/issue.net -p wa -k system-locale' /etc/audit/rules.d/audit.rules || echo '-w /etc/issue.net -p wa -k system-locale' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.4 $cmd
        cmd="grep -q '^-w /etc/hosts -p wa -k system-locale' /etc/audit/rules.d/audit.rules || echo '-w /etc/hosts -p wa -k system-locale' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.4 $cmd
        cmd="grep -q '^-w /etc/sysconfig/network -p wa -k system-locale' /etc/audit/rules.d/audit.rules || echo '-w /etc/sysconfig/network -p wa -k system-locale' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.4 $cmd
        cmd="grep -q '^-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.4 $cmd
        cmd="grep -q '^-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.4 $cmd
        cmd="grep -q '^-w /etc/issue -p wa -k system-locale' /etc/audit/rules.d/audit.rules || echo '-w /etc/issue -p wa -k system-locale' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.4 $cmd
        cmd="grep -q '^-w /etc/issue.net -p wa -k system-locale' /etc/audit/rules.d/audit.rules || echo '-w /etc/issue.net -p wa -k system-locale' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.4 $cmd
        cmd="grep -q '^-w /etc/hosts -p wa -k system-locale' /etc/audit/rules.d/audit.rules || echo '-w /etc/hosts -p wa -k system-locale' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.4 $cmd
        cmd="grep -q '^-w /etc/sysconfig/network -p wa -k system-locale' /etc/audit/rules.d/audit.rules || echo '-w /etc/sysconfig/network -p wa -k system-locale' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.4 $cmd
        cmd="grep -q '^-w /etc/selinux/ -p wa -k MAC-policy' /etc/audit/rules.d/audit.rules || echo '-w /etc/selinux/ -p wa -k MAC-policy' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.5 $cmd
        cmd="grep -q '^-w /var/log/lastlog -p wa -k logins' /etc/audit/rules.d/audit.rules || echo '-w /var/log/lastlog -p wa -k logins' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.6 $cmd
        cmd="grep -q '^-w /var/run/faillock/ -p wa -k logins' /etc/audit/rules.d/audit.rules || echo '-w /var/run/faillock/ -p wa -k logins' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.6 $cmd
        cmd="grep -q '^-w /var/run/utmp -p wa -k session' /etc/audit/rules.d/audit.rules || echo '-w /var/run/utmp -p wa -k session' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.7 $cmd
        cmd="grep -q '^-w /var/log/wtmp -p wa -k session' /etc/audit/rules.d/audit.rules || echo '-w /var/log/wtmp -p wa -k session' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.7 $cmd
        cmd="grep -q '^-w /var/log/btmp -p wa -k session' /etc/audit/rules.d/audit.rules || echo '-w /var/log/btmp -p wa -k session' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.7 $cmd
        cmd="grep -q '^-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.8 $cmd
        cmd="grep -q '^-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.8 $cmd
        cmd="grep -q '^-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.8 $cmd
        cmd="grep -q '^-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.8 $cmd
        cmd="grep -q '^-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.8 $cmd
        cmd="grep -q '^-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.8 $cmd
        cmd="grep -q '^-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.9 $cmd
        cmd="grep -q '^-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.9 $cmd
        cmd="grep -q '^-w /etc/sudoers -p wa -k scope' /etc/audit/rules.d/audit.rules || echo '-w /etc/sudoers -p wa -k scope' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.10 $cmd
        cmd="grep -q '^-w /etc/sudoers.d -p wa -k scope' /etc/audit/rules.d/audit.rules || echo '-w /etc/sudoers.d -p wa -k scope' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.10 $cmd
        cmd="grep -q '^-w /var/log/sudo.log -p wa -k actions' /etc/audit/rules.d/audit.rules || echo '-w /var/log/sudo.log -p wa -k actions' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.2.10 $cmd
        cmd="pkill -HUP -P1 auditd; service auditd restart"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.2.3 $cmd

        msg_header 6.4. Ensure file deletion events by users are collected
        cmd="grep -q '^-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.4.1 $cmd
        cmd="grep -q '^-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.4.2 $cmd
        cmd="grep -q '^-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.4.3 $cmd
        cmd="grep -q '^-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete' /etc/audit/rules.d/audit.rules || echo '-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete' >> /etc/audit/rules.d/audit.rules"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.4.4 $cmd


        msg_header 6.3. Ensure the audit configuration is immutable
        cmd="sed -i -e '/^-e 2/d' /etc/audit/rules.d/audit.rules;echo '-e 2' >> /etc/audit/rules.d/audit.rules;pkill -HUP -P1 auditd; service auditd restart"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.3 $cmd

        msg_header 6.6. Ensure auditing for processes that start prior to auditd is enabled
        cmd="grep -q 'audit=1' /etc/default/grub"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.6 $cmd

        msg_header 6.7. Ensure auditd service is enabled
        cmd="systemctl enable auditd"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.7 $cmd

        msg_header 6.8. Ensure system is disabled when audit logs are full
        cmd="sed -i -e 's/^space_left_action*[[:space:]]*=.*/space_left_action = email/g' -e 's/^action_mail_acct*[[:space:]]*=.*/action_mail_acct = root/g' -e 's/admin_space_left_action*[[:space:]]*=.*/admin_space_left_action = halt/g' /etc/audit/auditd.conf"
        EXIT_STATUS=0
        eval $cmd
        check_status 6.8 $cmd

        msg_header 7.1. Restrict access to Cron
        cmd="chown root:root /etc/crontab;chmod 640 /etc/crontab"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.1 $cmd

        msg_header 7.2. Configure SSH
        backup_file /etc/ssh/sshd_config
        cmd="sed -i -e 's/^Protocol*[[:space:]].*/Protocol 2/g' -e 's/^LogLevel*[[:space:]].*/LogLevel INFO/g' -e 's/^X11Forwarding*[[:space:]].*/X11Forwarding no/g' -e 's/^MaxAuthTries*[[:space:]].*/MaxAuthTries 3/g' -e 's/IgnoreRhosts*[[:space:]].*/IgnoreRhosts yes/g' -e 's/HostbasedAuthentication*[[:space:]].*/HostbasedAuthentication no/g' -e 's/PermitUserEnvironment*[[:space:]].*/PermitUserEnvironment no/g' -e 's/^MACs*[[:space:]].*/MACs hmac-sha1,umac-64@openssh.com,hmac-ripemd160,hmac-sha2-256,hmac-sha2-512,hmac-ripemd160@openssh.com/g' -e 's/^ClientAliveInterval*[[:space:]].*/ClientAliveInterval 300/g' -e 's/^ClientAliveCountMax*[[:space:]].*/ClientAliveCountMax 0/g' -e 's/^MaxStartups*[[:space:]].*/MaxStartups 10:30:60/g' -e 's/^AllowTcpForwarding*[[:space:]].*/AllowTcpForwarding no/g' -e 's/^LoginGraceTime*[[:space:]].*/LoginGraceTime 60/g' -e 's/^#MaxSessions*[[:space:]].*/MaxSessions 10/g' -e 's/^Banner*[[:space:]].*/Banner \/etc\/issue.net/g' /etc/ssh/sshd_config; chown root:root /etc/ssh/sshd_config; chmod 644 /etc/ssh/sshd_config"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.2 $cmd
        for i in Protocol.*[[:space:]].*2 LogLevel.*[[:space:]].*INFO X11Forwarding.*[[:space:]].*no MaxAuthTries.*[[:space:]].*3 IgnoreRhosts.*[[:space:]].*yes HostbasedAuthentication.*[[:space:]].*no PermitUserEnvironment.*[[:space:]].*no ClientAliveInterval.*[[:space:]].*300 ClientAliveCountMax.*[[:space:]].*0 AllowTcpForwarding*[[:space:]].*no LoginGraceTime*[[:space:]].*60 MaxSessions*[[:space:]].*10 MaxStartups*[[:space:]].*10:30:60 Banner.*[[:space:]].*/etc/issue.net Port.*[[:space:]].*22 Port.*[[:space:]].*27041 MACs.*[[:space:]].*hmac-sha1,umac-64@openssh.com,hmac-ripemd160,hmac-sha2-256,hmac-sha2-512,hmac-ripemd160@openssh.com Ciphers.*[[:space:]].*aes128-ctr,aes192-ctr,aes256-ctr AllowGroups DenyUsers DenyGroups
        do
              cmd="grep -q "^$i" /etc/ssh/sshd_config || echo "$i" | sed 's/\.\*\[\[\:space\:\]\]\.\*/ /g' >> /etc/ssh/sshd_config"
              EXIT_STATUS=0
              eval $cmd
              check_status 7.2 $cmd
        done

        msg_header 7.3. Configure PAM
        backup_file /etc/pam.d/password-auth-ac
        backup_file /etc/pam.d/system-auth-ac
        cmd="authconfig --passalgo=sha512 --update"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.3.1 $cmd
        for i in retry=3 try_first_pass
        do
              cmd="grep -q \"^password.*[[:space:]].*requisite.*[[:space:]].*pam_pwquality.so.*[[:space:]].*$i\" /etc/pam.d/password-auth-ac || sed -i \"/^password.*[[:space:]].*requisite.*[[:space:]].*pam_pwquality.so.*[[:space:]].*/s/$/ $i/g\"  /etc/pam.d/password-auth-ac"
              EXIT_STATUS=0
              eval $cmd
              check_status 7.3.2 7.3.4 7.3.5 $cmd
        done
        cmd="grep -q \"^password.*[[:space:]].*requisite.*[[:space:]].*pam_pwquality.so\" /etc/pam.d/password-auth-ac || echo 'password requisite pam_pwquality.so try_first_pass retry=3' >> /etc/pam.d/password-auth-ac"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.3.2 7.3.4 7.3.5 $cmd
        for i in retry=3 try_first_pass
        do
              cmd="grep -q \"^password.*[[:space:]].*requisite.*[[:space:]].*pam_pwquality.so.*[[:space:]].*$i\" /etc/pam.d/system-auth-ac || sed -i \"/^password.*[[:space:]].*requisite.*[[:space:]].*pam_pwquality.so.*[[:space:]].*/s/$/ $i/g\"  /etc/pam.d/system-auth-ac"
              EXIT_STATUS=0
              eval $cmd
              check_status 7.3.2 7.3.4 7.3.5 $cmd
        done
        cmd="grep -q "^password.*[[:space:]].*requisite.*[[:space:]].*pam_pwquality.so" /etc/pam.d/system-auth-ac || echo 'password requisite pam_pwquality.so try_first_pass retry=3' >> /etc/pam.d/system-auth-ac"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.3.2 7.3.4 7.3.5 $cmd


        for i in preauth audit silent deny=3 unlock_time=900
        do
              cmd="grep -q \"^auth.*[[:space:]].*required.*[[:space:]].*pam_faillock.so.*[[:space:]].*$i\" /etc/pam.d/password-auth-ac || sed -i \"/^auth.*[[:space:]].*required.*[[:space:]].*pam_faillock.so*[[:space:]].*/s/$/ $i/g\"  /etc/pam.d/password-auth-ac"
              EXIT_STATUS=0
              eval $cmd
              check_status 7.3.2 7.3.4 7.3.5 $cmd
        done
        cmd="grep -q \"^auth.*[[:space:]].*required.*[[:space:]].*pam_faillock.so\" /etc/pam.d/password-auth-ac || echo 'auth required pam_faillock.so preauth audit silent deny=3 unlock_time=900' >> /etc/pam.d/password-auth-ac"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.3.2 7.3.4 7.3.5 $cmd
        for i in preauth audit silent deny=3 unlock_time=900
        do
              cmd="grep -q \"^auth.*[[:space:]].*required.*[[:space:]].*pam_faillock.so.*[[:space:]].*$i\" /etc/pam.d/system-auth-ac || sed -i \"/^auth.*[[:space:]].*required.*[[:space:]].*pam_faillock.so.*[[:space:]].*/s/$/ $i/g\"  /etc/pam.d/system-auth-ac"
              EXIT_STATUS=0
              eval $cmd
              check_status 7.3.2 7.3.4 7.3.5 $cmd
        done
        cmd="grep -q \"^auth.*[[:space:]].*required.*[[:space:]].*pam_faillock.so\" /etc/pam.d/system-auth-ac || echo 'auth required pam_faillock.so preauth audit silent deny=3 unlock_time=900' >> /etc/pam.d/system-auth-ac"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.3.2 7.3.4 7.3.5 $cmd

        cmd="grep -q \"^auth.*[[:space:]].*pam_unix.so\" /etc/pam.d/password-auth-ac || echo 'auth pam_unix.so' >> /etc/pam.d/password-auth-ac"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.3.2 7.3.4 7.3.5 $cmd
        cmd="grep -q \"^auth.*[[:space:]].*pam_unix.so\" /etc/pam.d/system-auth-ac || echo 'auth pam_unix.so' >> /etc/pam.d/system-auth-ac"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.3.2 7.3.4 7.3.5 $cmd

        cmd="grep -q \"^auth.*[[:space:]].*\[default=die\]\" /etc/pam.d/password-auth-ac || echo 'auth  [default=die]' >> /etc/pam.d/password-auth-ac"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.3.2 7.3.4 7.3.5 $cmd
        cmd="grep -q \"^auth.*[[:space:]].*\[default=die\]\" /etc/pam.d/system-auth-ac || echo 'auth  [default=die]' >> /etc/pam.d/system-auth-ac"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.3.2 7.3.4 7.3.5 $cmd

        for i in pam_faillock.so authfail audit deny=3 unlock_time=900
        do
              cmd="grep -q \"^auth.*[[:space:]].*\[default=die\].*$i\" /etc/pam.d/password-auth-ac || sed -i \"/^auth.*[[:space:]].*\[default=die\].*/s/$/ $i/g\"  /etc/pam.d/password-auth-ac"
              EXIT_STATUS=0
              eval $cmd
              check_status 7.3.2 7.3.4 7.3.5 $cmd
        done
        for i in pam_faillock.so authfail audit deny=3 unlock_time=900
        do
              cmd="grep -q \"^auth.*[[:space:]].*\[default=die\].*$i\" /etc/pam.d/system-auth-ac || sed -i \"/^auth.*[[:space:]].*\[default=die\].*/s/$/ $i/g\"  /etc/pam.d/system-auth-ac"
              EXIT_STATUS=0
              eval $cmd
              check_status 7.3.2 7.3.4 7.3.5 $cmd
        done

        cmd="grep -q \"^auth.*[[:space:]].*sufficient.*[[:space:]].*pam_faillock.so\" /etc/pam.d/password-auth-ac || echo 'auth sufficient pam_faillock.so' >> /etc/pam.d/password-auth-ac"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.3.2 7.3.4 7.3.5 $cmd
        cmd="grep -q \"^auth.*[[:space:]].*sufficient.*[[:space:]].*pam_faillock.so\" /etc/pam.d/system-auth-ac || echo 'auth sufficient pam_faillock.so' >> /etc/pam.d/system-auth-ac"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.3.2 7.3.4 7.3.5 $cmd
        for i in authsucc audit deny=3 unlock_time=900
        do
              cmd="grep -q \"^auth.*[[:space:]].*sufficient.*[[:space:]].*pam_faillock.so.*$i\" /etc/pam.d/password-auth-ac || sed -i \"/^auth.*[[:space:]].*sufficient.*[[:space:]].*pam_faillock.so.*/s/$/ $i/g\"  /etc/pam.d/password-auth-ac"
              EXIT_STATUS=0
              eval $cmd
              check_status 7.3.2 7.3.4 7.3.5 $cmd
        done
        for i in authsucc audit deny=3 unlock_time=900
        do
              cmd="grep -q \"^auth.*[[:space:]].*sufficient.*[[:space:]].*pam_faillock.so.*$i\" /etc/pam.d/system-auth-ac || sed -i \"/^auth.*[[:space:]].*sufficient.*[[:space:]].*pam_faillock.so.*/s/$/ $i/g\"  /etc/pam.d/system-auth-ac"
              EXIT_STATUS=0
              eval $cmd
              check_status 7.3.2 7.3.4 7.3.5 $cmd
        done

        cmd="grep -q \"^password.*[[:space:]].*sufficient.*[[:space:]].*remember=5\" /etc/pam.d/password-auth-ac || sed -i \"/^password.*[[:space:]].*sufficient.*/s/$/ remember=5/g\"  /etc/pam.d/password-auth-ac"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.3.2 7.3.4 7.3.5 $cmd
        cmd="grep -q \"^password.*[[:space:]].*sufficient.*[[:space:]].*remember=5\" /etc/pam.d/system-auth-ac || sed -i \"/^password.*[[:space:]].*sufficient.*/s/$/ remember=5/g\"  /etc/pam.d/system-auth-ac"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.3.2 7.3.4 7.3.5 $cmd
        cmd="sed -i -e 's/^minlen.*[[:space:]].*/minlen = 8/g' -e 's/^dcredit.*[[:space:]].*/dcredit = -1/g' -e 's/^ucredit.*[[:space:]].*/ucredit = -1/g' -e 's/^ocredit.*[[:space:]].*/ocredit = -1/g' -e 's/^lcredit.*[[:space:]].*/lcredit = -1/g' /etc/security/pwquality.conf"
        EXIT_STATUS=0
        eval $cmd

        check_status 7.3.3 $cmd
        for i in minlen.*[[:space:]].*=.*[[:space:]].*8 dcredit.*[[:space:]].*=.*[[:space:]].*\-\1 ucredit.*[[:space:]].*=.*[[:space:]].*-1 ocredit.*[[:space:]].*=.*[[:space:]].*-1 lcredit.*[[:space:]].*=.*[[:space:]].*-1
        do
              cmd="grep -q "^$i" /etc/security/pwquality.conf || echo "$i" | sed 's/\.\*\[\[\:space\:\]\]\.\*/ /g' >> /etc/security/pwquality.conf"
              EXIT_STATUS=0
              eval $cmd
              check_status 7.3.3 $cmd
        done

        msg_header 7.4. Restrict Access to the su Command
        backup_file /etc/pam.d/su
        cmd="grep -q '^auth.*[[:space:]].*required.*[[:space:]].*pam_wheel.so.*[[:space:]].*use_uid' /etc/pam.d/su || echo 'auth required pam_wheel.so use_uid' >> /etc/pam.d/su"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.4 $cmd

        msg_header 7.5. Ensure permissions on bootloader config are configured
        cmd="chown root:root /boot/grub2/grub.cfg ; chmod og-rwx /boot/grub2/grub.cfg  "
        EXIT_STATUS=0
        eval $cmd
        check_status 7.5 $cmd

        msg_header 7.6. Disable Automounting
        cmd="systemctl disable autofs"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.6 $cmd

        msg_header 7.7. Ensure audit logs are not automatically deleted
        cmd="sed -i -e 's/max_log_file_action.*[[:space:]].*/max_log_file_action = keep_logs/g' /etc/audit/auditd.conf"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.7 $cmd

        msg_header 7.8. Ensure no world writable files exist
        cmd="df --local -P | egrep 'rootvg|rhel|boot' | awk {'if (NR!=1) print \$6'} | xargs -I '{}' find '{}' -xdev -type f -perm -0002 | xargs -I '{}' chmod o-w '{}'"
        EXIT_STATUS=0
        eval $cmd
        check_status 7.8 $cmd

        msg_header 8.1. Set Shadow Password Suite Parameters
        backup_file /etc/login.defs
        cmd="sed -i -e 's/^PASS_MAX_DAYS.*/PASS_MAX_DAYS 90/g' -e 's/^PASS_MIN_DAYS.*/PASS_MIN_DAYS 2/g' -e 's/^PASS_WARN_AGE.*/PASS_WARN_AGE 14/g' -e 's/^PASS_MIN_LEN.*/PASS_MIN_LEN 8/g' /etc/login.defs"
        EXIT_STATUS=0
        eval $cmd
        for i in PASS_MAX_DAYS.*[[:space:]].*90 PASS_MIN_DAYS.*[[:space:]].*2 PASS_WARN_AGE.*[[:space:]].*14 PASS_MIN_LEN.*[[:space:]].*8
        do
                cmd="grep -q '$i' /etc/login.defs || echo $i | sed 's/\.\*\[\[\:space\:\]\]\.\*/ /g' >> /etc/login.defs"
                eval $cmd
                check_status 8.1 $cmd
        done
        check_status 8.1 $cmd

        msg_header 8.2. Disable System Accounts
        info_msg Check with IAM Team

        msg_header 8.3. Set Default Group for root Account
        cmd="usermod -g0 root"
        EXIT_STATUS=0
        eval $cmd
        check_status 8.3 $cmd

        msg_header 8.4. Set Default umask for Users
        backup_file /etc/bashrc
        backup_file /etc/profile
        backup_file /etc/profile.d/cis.sh
        cmd="sed -i -e 's/umask.*/umask 027/g'  /etc/profile.d/cis.sh /etc/bashrc /etc/profile"
        EXIT_STATUS=0
        eval $cmd
        check_status 8.4 $cmd
        cmd="grep -q "umask.*[[:space:]].*027" /etc/profile || echo 'umask 027' >> /etc/profile"
        EXIT_STATUS=0
        eval $cmd
        check_status 8.4 $cmd
        cmd="grep -q "umask.*[[:space:]].*027" /etc/bashrc || echo 'umask 027' >> /etc/bashrc"
        EXIT_STATUS=0
        eval $cmd
        check_status 8.4 $cmd
        cmd="grep -q "umask.*[[:space:]].*027" /etc/profile.d/cis.sh || echo 'umask 027' >> /etc/profile.d/cis.sh"
        EXIT_STATUS=0
        eval $cmd
        check_status 8.4 $cmd

        msg_header 8.5. Lock Inactive User Accounts
        backup_file /etc/shadow
        cmd="sed -i '/^root/! s~^\([^:]*\):\([^:]*\):\([^:]*\):\([^:]*\):\([^:]*\):\([^:]*\):\([^:]*\)~\1:\2:\3:\4:\5:\6:35~' /etc/shadow"
        EXIT_STATUS=0
        eval $cmd
        check_status 8.5 $cmd
        cmd="sed -i 's/INACTIVE=.*/INACTIVE=30/g' /etc/default/useradd"
        EXIT_STATUS=0
        eval $cmd
        check_status 8.5.1 $cmd

        msg_header 8.6. Disabled aotomounting
        cmd="systemctl disable autofs"
        EXIT_STATUS=0
        eval $cmd
        check_status 8.6 $cmd

        msg_header 9.1. Set Warning Banner for Standard Login Services
        cmd="chown root:root /etc/motd /etc/issue /etc/issue.net;chmod 644 /etc/motd /etc/issue /etc/issue.net"
        EXIT_STATUS=0
        eval $cmd
        check_status 9.1 $cmd

        msg_header 9.2. Remove OS Information from Login Warning Banners
        echo 'Authorized users only. All activity may be monitored and reported.' > /etc/motd
        echo 'Authorized users only. All activity may be monitored and reported.' > /etc/issue
        echo 'Authorized users only. All activity may be monitored and reported.' > /etc/issue.net
        cmd="grep -q 'Authorized users only. All activity may be monitored and reported.' /etc/motd /etc/issue /etc/issue.net"
        EXIT_STATUS=0
        eval $cmd
        check_status 9.2 $cmd

        msg_header 9.3. Set GNOME Warning Banner
        info_msg Not Applicable as X11 packages has been removed as per the SCD policy

        msg_header 10.1. Verify System File Permissions
        cmd="chown root:root /etc/passwd /etc/shadow /etc/gshadow /etc/group;chmod 644 /etc/passwd /etc/group;chmod 000 /etc/shadow /etc/gshadow"
        EXIT_STATUS=0
        eval $cmd
        check_status 10.1 $cmd

        msg_header 10.2. Review User and Group Settings
        info_msg Check with IAM Team

        msg_header 11.2. Enable TLS 1.2 \& Above protocol
        info_msg Not Applicable as HTTPD package is not installed

        msg_header 11.3. Disable weak encryption protocol
        info_msg Not Applicable as HTTPD package is not installed

        echo -e "\033[46;30m"
        msg_header Log file generated at /tmp/$(hostname)_SCD_LINUX_V14_log_impl_"$cdate".txt
        echo -e "\033[40;37m"

}

linux_verification()
{
        echo "======================================================================"
        echo "                  LINUX SCD Verification Started"
        echo "======================================================================"
        msg_header 2.1. Filesystem Configuration
        cmd="ls -ld /tmp/ /var/tmp/ /dev/shm | grep drwxrwxrwt | wc -l"
        [[ $(eval $cmd) -eq 3 ]] && sub_msg_ok 2.1.1 $cmd || sub_msg_ko 2.1.1 $cmd
        cmd="egrep 'defaults,nodev,noexec,nosuid' /etc/fstab | wc -l"
        [[ $(eval $cmd) -eq 2 ]] && sub_msg_ok 2.1.2 $cmd || sub_msg_ko 2.1.2 $cmd
        cmd="egrep 'install\s+cramfs\s+/bin/true|install\s+freevxfs\s+/bin/true|install\s+jffs2\s+/bin/true|install\s+hfs\s+/bin/true|install\s+hfsplus\s+/bin/true|install\s+squashfs\s+/bin/true' /etc/modprobe.d/CIS.conf | wc -l"
        [[ $(eval $cmd) -eq 6 ]] && sub_msg_ok 2.1.2 $cmd || sub_msg_ko 2.1.2 $cmd

        msg_header 2.2. Configure Software Updates
        cmd="grep 'gpgcheck.*[[:space:]].*=.*[[:space:]].*0' /etc/yum.conf /etc/yum.repos.d/*.repo | wc -l"
        [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 2.2 $cmd || sub_msg_ko 2.2 $cmd

        msg_header 2.3. Advanced Intrusion Detection Environment
        cmd="rpm -qa | grep -i aide | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 2.3 $cmd || sub_msg_ko 2.3 $cmd

        msg_header 3. OS Services
        cmd="systemctl list-unit-files --type=service --state=enabled --no-pager  | egrep 'telnet|rlogin|rexec|rsh|ypserv|tftp.socket|ntalk|xinetd|avahi-daemon|dhcpd|slapd|nfs|rpcbind|named|vsftpd|httpd|dovecot|smb|squid|snmpd' | wc -l"
        [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 3 $cmd || sub_msg_ko 3 $cmd
        cmd="rpm -qa | egrep 'telnet|ypbind|talk|xorg-11' | wc -l"
        [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 3 $cmd || sub_msg_ko 3 $cmd

        msg_header 4.1. Configure Network Time Protocol
        cmd="cat /etc/chrony.conf | grep 'server.*[[:space:]].*10.' | wc -l"
        [[ $(eval $cmd) -ge 2 ]] && sub_msg_ok 4.1 $cmd || sub_msg_ko 4.1 $cmd

        msg_header 4.1.1 Chrony SYNC status
        cmd="chronyc sources |  grep '\*' | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 4.1.1 $cmd || sub_msg_ko 4.1.1 $cmd

        msg_header 4.2. Configure Mail Transfer Agent for Local-Only Mode
        cmd="grep '^inet_interfaces.*[[:space:]]=.*[[:space:]]localhost' /etc/postfix/main.cf  | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 4.1.1 $cmd || sub_msg_ko 4.1.1 $cmd

        msg_header 4.3. Check for Unconfined Daemons
        cmd="ps -eZ | egrep 'initrc' | egrep -vw 'tr|ps|egrep|bash|awk' | tr ':' ' ' | awk '{ print $NF }'"
        sub_msg_ok 4.3.

        msg_header 5.1. Modify Network Parameters and 5.2. IPv6
        for i in net.ipv4.ip_forward=0 net.ipv4.conf.all.send_redirects=0 net.ipv4.conf.default.send_redirects=0 net.ipv4.conf.all.accept_source_route=0  net.ipv4.conf.default.accept_source_route=0 net.ipv4.conf.all.accept_redirects=0 net.ipv4.conf.default.accept_redirects=0 net.ipv4.conf.all.secure_redirects=0 net.ipv4.conf.default.secure_redirects=0 net.ipv4.conf.all.log_martians=1  net.ipv4.conf.default.log_martians=1 net.ipv4.icmp_echo_ignore_broadcasts=1 net.ipv4.icmp_ignore_bogus_error_responses=1  net.ipv4.conf.all.rp_filter=1 net.ipv4.conf.default.rp_filter=1 net.ipv4.tcp_syncookies=1 net.ipv6.conf.all.accept_ra=0 net.ipv6.conf.default.accept_ra=0 net.ipv6.conf.all.accept_redirects=0 net.ipv6.conf.default.accept_redirects=0 net.ipv6.conf.all.disable_ipv6=1
        do
               cmd="grep \"$(echo $i | sed 's/=/*[[:space:]]*=*[[:space:]]*/g')\" /etc/sysctl.conf | wc -l"
               [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 5.1 and 5.2 $cmd || sub_msg_ko 5.1 and 5.2 $cmd
        done

        msg_header 5.3. Install TCP Wrappers
        cmd="grep 'ALL: ALL' /etc/hosts.deny | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 5.3.4 $cmd || sub_msg_ko 5.3.4 $cmd

        cmd="stat -c%u%g%a  /etc/hosts.allow /etc/hosts.deny  | grep '00644' | wc -l"
        [[ $(eval $cmd) -eq 2 ]] && sub_msg_ok 5.3.4 $cmd || sub_msg_ko 5.3.4 $cmd

        msg_header 5.4. Uncommon Network Protocols
        cmd="egrep 'install\s+dccp\s+/bin/true|install\s+sctp\s+/bin/true|install\s+rds\s+/bin/true|install\s+tipc\s+/bin/true' /etc/modprobe.d/CIS.conf | wc -l"
        [[ $(eval $cmd) -eq 4 ]] && sub_msg_ok 2.1.2 $cmd || sub_msg_ko 2.1.2 $cmd

        msg_header 5.5. Enable Server Firewall
        cmd="systemctl list-unit-files --type=service --state=enabled --no-pager  | egrep 'firewall' | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 5.5. $cmd || sub_msg_ko 5.5. $cmd

        msg_header 6.1. Configure rsyslog
        cmd="rpm -qa | grep -i ^rsyslog | wc -l"
        [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 6.1.1 $cmd || sub_msg_ko 6.1.1 $cmd

        cmd="systemctl list-unit-files --type=service --state=enabled --no-pager  | egrep 'rsyslog' | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 6.1.2 $cmd || sub_msg_ko 6.1.2 $cmd

        for i in auth,user.*[[:space:]]/var/log/messages kern.*[[:space:]]/var/log/kern.log daemon.*[[:space:]]/var/log/daemon.log syslog.*[[:space:]]/var/log/syslog lpr,news,uucp,local0,local1,local2,local3,local4,local5,local6.*[[:space:]]/var/log/unused.log
        do
               cmd="grep $i /etc/rsyslog.conf | wc -l"
               [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 6.1.3 $cmd || sub_msg_ko 6.1.3 $cmd
        done

        cmd="stat -c%u%g%a /var/log/messages /var/log/kern.log /var/log/daemon.log /var/log/syslog | grep '^00.00$' | wc -l"
        [[ $(eval $cmd) -eq 4 ]] && sub_msg_ok 6.1.4 $cmd || sub_msg_ko 6.1.4 $cmd

        cmd="egrep '^\\\$ModLoad*[[:space:]]*imtcp.so|^\\\$InputTCPServerRun*[[:space:]]*514' /etc/rsyslog.conf | wc -l"
        [[ $(eval $cmd) -eq 2 ]] && sub_msg_ok 6.1.7 $cmd || sub_msg_ko 6.1.7 $cmd

        msg_header 6.2. Configure System Accounting \& 6.3. Ensure the audit configuration is immutable \& 6.4. Ensure file deletion events by users are collected
        cmd="systemctl list-unit-files --type=service --state=enabled --no-pager  | egrep 'auditd' | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 6.2.1. $cmd || sub_msg_ko 6.2.1. $cmd

        cmd="egrep '^max_log_file.*[[:space:]].*=.*[[:space:]].*8|^space_left_action.*[[:space:]].*=.*[[:space:]].*email|^action_mail_acct.*[[:space:]].*=.*[[:space:]].*root|^max_log_file_action.*[[:space:]].*=.*[[:space:]].*keep_logs' /etc/audit/auditd.conf | wc -l"
        [[ $(eval $cmd) -eq 4 ]] && sub_msg_ok 6.2.2. $cmd || sub_msg_ko 6.2.2. $cmd

audit_rules="-w /etc/selinux/ -p wa -k MAC-policy
-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
-a always,exit -F arch=b32 -S clock_settime -k time-change -w /etc/localtime -p wa -k time-change
-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change
-a always,exit -F arch=b64 -S clock_settime -k time-change
-w /etc/localtime -p wa -k time-change
-w /etc/group -p wa -k identity
-w /etc/passwd -p wa -k identity
-w /etc/gshadow -p wa -k identity
-w /etc/shadow -p wa -k identity
-w /etc/security/opasswd -p wa -k identity
-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
-w /etc/issue -p wa -k system-locale
-w /etc/issue.net -p wa -k system-locale
-w /etc/hosts -p wa -k system-locale
-w /etc/sysconfig/network -p wa -k system-locale
-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale
-w /var/log/lastlog -p wa -k logins
-w /var/run/faillock/ -p wa -k logins
-w /var/run/utmp -p wa -k session
-w /var/log/wtmp -p wa -k session
-w /var/log/btmp -p wa -k session
-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
-w /etc/sudoers -p wa -k scope
-w /etc/sudoers.d -p wa -k scope
-w /var/log/sudo.log -p wa -k actions
-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
-e 2"
        echo "$audit_rules" | while IFS= read -r line
        do
               cmd="grep $(echo \'$line\' | sed 's/-/\\-/g') /etc/audit/audit.rules | wc -l"
               [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 6.2 $cmd || sub_msg_ko 6.2 $cmd
        done

        msg_header 6.6. Ensure auditing for processes that start prior to auditd is enabled
        cmd="grep 'audit=1'  /etc/default/grub | wc -l"
        [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 6.6 $cmd || sub_msg_ko 6.6 $cmd

        msg_header 6.7. Ensure auditd service is enabled
        cmd="systemctl list-unit-files --type=service --state=enabled --no-pager  | egrep 'auditd' | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 6.7. $cmd || sub_msg_ko 6.7. $cmd

        msg_header 6.8. Ensure system is disabled when audit logs are full
        cmd="egrep 'space_left_action.*[[:space:]].*=.*[[:space:]].*email|action_mail_acct.*[[:space:]].*=.*[[:space:]].*root|admin_space_left_action.*[[:space:]].*=.*[[:space:]].*halt' /etc/audit/auditd.conf | wc -l"
        [[ $(eval $cmd) -eq 3 ]] && sub_msg_ok 6.8. $cmd || sub_msg_ko 6.8. $cmd

        msg_header 7.1. Restrict access to Cron
        cmd="stat -c%u%g%a  /etc/crontab  | grep '00640' | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 7.1 $cmd || sub_msg_ko 7.1 $cmd

        msg_header 7.2. Configure SSH
        for i in ^Protocol.*[[:space:]].*2 ^LogLevel.*[[:space:]].*INFO ^X11Forwarding.*[[:space:]].*no ^MaxAuthTries.*[[:space:]].*3 ^IgnoreRhosts.*[[:space:]].*yes ^HostbasedAuthentication.*[[:space:]].*no ^PermitUserEnvironment.*[[:space:]].*no ^MACs hmac-sha1,umac-64@openssh.com,hmac-ripemd160,hmac-sha2-256,hmac-sha2-512,hmac-ripemd160@openssh.com ClientAliveInterval 300 ClientAliveCountMax 0 ^AllowTcpForwarding*[[:space:]].*no ^LoginGraceTime*[[:space:]].*60 MaxSessions*[[:space:]].*10 MaxStartups*[[:space:]].*10:30:60 AllowUsers AllowGroups DenyUsers DenyGroups Banner.*[[:space:]].*/etc/issue.net
        do
               cmd="egrep '$i' /etc/ssh/sshd_config | wc -l"
               [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 7.2 $cmd || sub_msg_ko 7.2 $cmd
        done

        msg_header 7.3. Configure PAM
        for i in password requisite pam_pwquality.so try_first_pass retry=3 pam_faillock.so preauth audit silent deny=3 unlock_time=900 \\[default=die\\] pam_faillock.so authfail audit deny=3 unlock_time=900 authsucc audit deny=3 remember=5
        do
               cmd="egrep '$i' /etc/pam.d/password-auth /etc/pam.d/system-auth | wc -l"
               [[ $(eval $cmd) -ge 2 ]] && sub_msg_ok 7.3 $cmd || sub_msg_ko 7.3 $cmd
        done
        for i in minlen.*[[:space:]].*=.*[[:space:]].*8 dcredit.*[[:space:]].*=.*[[:space:]].*-1 ucredit.*[[:space:]].*=.*[[:space:]].*-1 ocredit.*[[:space:]].*=.*[[:space:]].*-1 lcredit.*[[:space:]].*=.*[[:space:]].*-1
        do
               cmd="egrep '$i' /etc/security/pwquality.conf | wc -l"
               [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 7.3 $cmd || sub_msg_ko 7.3 $cmd
        done
        msg_header 7.4. Restrict Access to the su Command
        cmd="egrep 'pam_wheel.so.*[[:space:]].*use_uid'  /etc/pam.d/su | grep -v '#' | wc -l"
        [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 7.4 $cmd || sub_msg_ko 7.4 $cmd

        msg_header 7.5. Ensure permissions on bootloader config are configured
        cmd="stat -c%u%g%a /boot/grub2/grub.cfg | grep '^00.00$' | wc -l"
        [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 7.5 $cmd || sub_msg_ko 7.5 $cmd

        msg_header 7.6. Disable Automounting
        cmd="systemctl list-unit-files --type=service --state=enabled --no-pager  | egrep 'autofs' | wc -l"
        [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 7.6 $cmd || sub_msg_ko 7.6 $cmd

        msg_header 7.7. Ensure audit logs are not automatically deleted
        cmd="grep 'max_log_file_action.*[[:space:]].*=.*[[:space:]].*keep_logs'  /etc/audit/auditd.conf"
        [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 7.7 $cmd || sub_msg_ko 7.7 $cmd

        msg_header 7.8. Ensure no world writable files exist
        echo -e "$COCOLOR $(df --local -P | egrep 'rootvg|rhel|boot' | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -0002) $BASECOLOR"

        msg_header 8.1. Set Shadow Password Suite Parameters
        for i in PASS_MAX_DAYS.*[[:space:]].*90 PASS_MIN_DAYS.*[[:space:]].*2 PASS_WARN_AGE.*[[:space:]].*14 PASS_MIN_LEN.*[[:space:]].*8
        do
               cmd="egrep '$i'  /etc/login.defs | wc -l"
               [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 8.1 $cmd || sub_msg_ko 8.1 $cmd
        done

        msg_header 8.3. Set Default Group for root Account
        cmd="id -g root | grep '0' | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 8.3 $cmd || sub_msg_ko 8.3 $cmd

        msg_header 8.4. Set Default umask for Users
        cmd="grep umask /etc/bashrc  /etc/profile | grep -v  027 | wc -l"
        [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 8.4 $cmd || sub_msg_ko 8.4 $cmd

        msg_header 8.5. Lock Inactive User Accounts
        cmd="awk -F':' '\$7 != 35 {print \$0}' /etc/shadow | grep -v root | wc -l"
        [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 8.5 $cmd || sub_msg_ko 8.5 $cmd
        cmd="grep 'INACTIVE=30' /etc/default/useradd | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 8.5.1 $cmd || sub_msg_ko 8.5.1 $cmd

        msg_header 8.6. Disabled automounting
        cmd="systemctl list-unit-files --type=service --state=enabled --no-pager  | egrep 'autofs' | wc -l"
        [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 8.6 $cmd || sub_msg_ko 8.6 $cmd

        msg_header 9.1. Set Warning Banner for Standard Login Services
        cmd="stat -c%u%g%a  /etc/motd /etc/issue /etc/issue.net  | grep '00644' | wc -l"
        [[ $(eval $cmd) -eq 3 ]] && sub_msg_ok 9.1 $cmd || sub_msg_ko 9.1 $cmd

        msg_header 9.3. Set GNOME Warning Banner
        info_msg Not Applicable as X11 packages are removed as per SCD V14

        msg_header 10.1. Verify System File Permissions
        cmd="stat -c%u%g  /etc/passwd /etc/shadow /etc/gshadow /etc/group  | grep '00' | wc -l"
        [[ $(eval $cmd) -eq 4 ]] && sub_msg_ok 10.1 $cmd || sub_msg_ko 10.1 $cmd
        cmd="stat -c%a  /etc/passwd /etc/group  | grep '644' | wc -l"
        [[ $(eval $cmd) -eq 2 ]] && sub_msg_ok 10.1 $cmd || sub_msg_ko 10.1 $cmd
        cmd="stat -c%a  /etc/shadow /etc/gshadow  | grep '0' | wc -l"
        [[ $(eval $cmd) -eq 2 ]] && sub_msg_ok 10.1 $cmd || sub_msg_ko 10.1 $cmd

        msg_header 11.1. Restrict Cipher list
        cmd="egrep 'aes256-ctr|aes192-ctr|aes128-ctr' /etc/ssh/sshd_config | wc -l"
        [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 11.1 $cmd || sub_msg_ko 11.1 $cmd

        msg_header 11.2. Enable TLS 1.2 \& Above protocol and 11.3. Disable weak encryption protocol
        info_msg HTTPD package is not installed as per SCD
        echo -e "\033[46;30m"
        msg_header Log file generated at /tmp/$(hostname)_SCD_LINUX_V14_log_veri_"$cdate".txt
        echo -e "\033[40;37m"
}
linux_artifacts()
{
        echo "======================================================================"
        echo "               LINUX SCD Artifacts Collection Started"
        echo "======================================================================"
        msg_header 2.1. Filesystem Configuration
        cmd="ls -ld /tmp/ /var/tmp/ /dev/shm"
        output
        cmd="egrep 'defaults,nodev,noexec,nosuid' /etc/fstab"
        output
        cmd="egrep 'install\s+cramfs\s+/bin/true|install\s+freevxfs\s+/bin/true|install\s+jffs2\s+/bin/true|install\s+hfs\s+/bin/true|install\s+hfsplus\s+/bin/true|install\s+squashfs\s+/bin/true' /etc/modprobe.d/CIS.conf "
        output

        msg_header 2.2. Configure Software Updates
        cmd="grep 'gpgcheck=1' /etc/yum.conf /etc/yum.repos.d/*.repo"
        output

        msg_header 2.3. Advanced Intrusion Detection Environment
        cmd="rpm -qa | grep -i aide"
        output

        msg_header 3. OS Services
        cmd="systemctl list-unit-files --type=service --state=disabled --no-pager  | egrep 'telnet|rlogin|rexec|rsh|ypserv|tftp.socket|ntalk|xinetd|avahi-daemon|dhcpd|slapd|nfs|rpcbind|named|vsftpd|httpd|dovecot|smb|squid|snmpd'"
        output
        cmd="rpm -qa | egrep 'telnet|ypbind|talk|xorg-11'"
        output

        msg_header 4.1. Configure Network Time Protocol
        cmd="cat /etc/chrony.conf | grep 'server.*[[:space:]].*10.'"
        output
        cmd="grep 'OPTIONS=\"-u chrony\"' /etc/sysconfig/chronyd"
        output
        msg_header 4.1.1 Chrony SYNC status
        cmd="chronyc sources |  grep '\*'"
        output

        msg_header 4.2. Configure Mail Transfer Agent for Local-Only Mode
        cmd="grep '^inet_interfaces.*[[:space:]]=.*[[:space:]]localhost' /etc/postfix/main.cf"
        output

        msg_header 4.3. Check for Unconfined Daemons
        cmd="ps -eZ | egrep 'initrc' | egrep -vw 'tr|ps|egrep|bash|awk' | tr ':' ' ' | awk '{ print \$NF }'"
        output

        msg_header 5.1. Modify Network Parameters and 5.2. IPv6
        cmd="egrep 'net.ipv4.ip_forward=0|net.ipv4.conf.all.send_redirects=0|net.ipv4.conf.default.send_redirects=0|net.ipv4.conf.all.accept_source_route=0|net.ipv4.conf.default.accept_source_route=0|net.ipv4.conf.all.accept_redirects=0|net.ipv4.conf.default.accept_redirects=0|net.ipv4.conf.all.secure_redirects=0|net.ipv4.conf.default.secure_redirects=0|net.ipv4.conf.all.log_martians=1|net.ipv4.conf.default.log_martians=1|net.ipv4.icmp_echo_ignore_broadcasts=1|net.ipv4.icmp_ignore_bogus_error_responses=1|net.ipv4.conf.all.rp_filter=1|net.ipv4.conf.default.rp_filter=1|net.ipv4.tcp_syncookies=1|net.ipv6.conf.all.accept_ra=0|net.ipv6.conf.default.accept_ra=0|net.ipv6.conf.all.accept_redirects=0|net.ipv6.conf.default.accept_redirects=0|net.ipv6.conf.all.disable_ipv6=1' /etc/sysctl.conf"
        output

        msg_header 5.3. Install TCP Wrappers
        cmd="grep 'ALL: ALL' /etc/hosts.deny"
        output
        cmd="stat -c%u%g%a  /etc/hosts.allow /etc/hosts.deny"
        output

        msg_header 5.4. Uncommon Network Protocols
        cmd="egrep 'install\s+dccp\s+/bin/true|install\s+sctp\s+/bin/true|install\s+rds\s+/bin/true|install\s+tipc\s+/bin/true' /etc/modprobe.d/CIS.conf"
        output

        msg_header 5.5. Enable Server Firewall
        cmd="systemctl list-unit-files --type=service --state=enabled --no-pager  | egrep 'firewall'"
        output

        msg_header 6.1. Configure rsyslog
        cmd="rpm -qa | grep -i ^rsyslog "
        output
        cmd="systemctl list-unit-files --type=service --state=enabled --no-pager  | egrep 'rsyslog'"
        output
        cmd="egrep 'auth,user.*[[:space:]]/var/log/messages|kern.*[[:space:]]/var/log/kern.log|daemon.*[[:space:]]/var/log/daemon.log|syslog.*[[:space:]]/var/log/syslog|lpr,news,uucp,local0,local1,local2,local3,local4,local5,local6.*[[:space:]]/var/log/unused.log' /etc/rsyslog.conf"
        output
        cmd="stat -c%u%g%a /var/log/messages /var/log/kern.log /var/log/daemon.log /var/log/syslog"
        output
        cmd="egrep '^\\\$ModLoad*[[:space:]]*imtcp.so|^\\\$InputTCPServerRun*[[:space:]]*514' /etc/rsyslog.conf"
        output

        msg_header 6.2. Configure System Accounting \& 6.3. Ensure the audit configuration is immutable \& 6.4. Ensure file deletion events by users are collected
        cmd="systemctl list-unit-files --type=service --state=enabled --no-pager  | egrep 'auditd'"
        output
        cmd="egrep '^max_log_file.*[[:space:]].*=.*[[:space:]].*8|^space_left_action.*[[:space:]].*=.*[[:space:]].*email|^action_mail_acct.*[[:space:]].*=.*[[:space:]].*root|^max_log_file_action.*[[:space:]].*=.*[[:space:]].*keep_logs' /etc/audit/auditd.conf "
        output
        cmd="egrep '-w /etc/selinux/ -p wa -k MAC-policy|\
-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod|\
-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts|\
-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change|\
-a always,exit -F arch=b32 -S clock_settime -k time-change -w /etc/localtime -p wa -k time-change|\
-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change|\
-a always,exit -F arch=b64 -S clock_settime -k time-change|\
-w /etc/localtime -p wa -k time-change|\
-w /etc/group -p wa -k identity|\
-w /etc/passwd -p wa -k identity|\
-w /etc/gshadow -p wa -k identity|\
-w /etc/shadow -p wa -k identity|\
-w /etc/security/opasswd -p wa -k identity|\
-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale|\
-w /etc/issue -p wa -k system-locale|\
-w /etc/issue.net -p wa -k system-locale|\
-w /etc/hosts -p wa -k system-locale|\
-w /etc/sysconfig/network -p wa -k system-locale|\
-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale|\
-w /var/log/lastlog -p wa -k logins|\
-w /var/run/faillock/ -p wa -k logins|\
-w /var/run/utmp -p wa -k session|\
-w /var/log/wtmp -p wa -k session|\
-w /var/log/btmp -p wa -k session|\
-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access|\
-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access|\
-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access|\
-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access|\
-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts|\
-w /etc/sudoers -p wa -k scope|\
-w /etc/sudoers.d -p wa -k scope|\
-w /var/log/sudo.log -p wa -k actions|\
-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete|\
-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete|\
-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete|\
-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete|\
-e 2' /etc/audit/audit.rules"
        cmd=$(echo "$cmd" | sed 's/-/\\-/g')
        output

        msg_header 6.6. Ensure auditing for processes that start prior to auditd is enabled
        cmd="grep 'audit=1'  /etc/default/grub"
        output

        msg_header 6.7. Ensure auditd service is enabled
        cmd="systemctl list-unit-files --type=service --state=enabled --no-pager  | egrep 'auditd'"
        output

        msg_header 6.8. Ensure system is disabled when audit logs are full
        cmd="egrep 'space_left_action.*[[:space:]].*=.*[[:space:]].*email|action_mail_acct.*[[:space:]].*=.*[[:space:]].*root|admin_space_left_action.*[[:space:]].*=.*[[:space:]].*halt' /etc/audit/auditd.conf"
        output

        msg_header 7.1. Restrict access to Cron
        cmd="stat -c%u%g%a  /etc/crontab"
        output

        msg_header 7.2. Configure SSH
        cmd="egrep '^Protocol.*[[:space:]].*2|^LogLevel.*[[:space:]].*INFO|^X11Forwarding.*[[:space:]].*no|^MaxAuthTries.*[[:space:]].*3|^IgnoreRhosts.*[[:space:]].*yes|^HostbasedAuthentication.*[[:space:]].*no|^PermitUserEnvironment.*[[:space:]].*no|^AllowTcpForwarding*[[:space:]].*no|^LoginGraceTime*[[:space:]].*60|MaxSessions*[[:space:]].*10|MaxStartups*[[:space:]].*10:30:60|^MACs|ClientAliveInterval.*[[:space:]].*300|ClientAliveCountMax.*[[:space:]].*0|AllowUsers|AllowGroups|DenyUsers|DenyGroups|Banner.*[[:space:]].*/etc/issue.net' /etc/ssh/sshd_config"
        output

        msg_header 7.3. Configure PAM
        cmd="egrep 'password.*[[:space:]].*requisite.*[[:space:]].*pam_pwquality.so.*[[:space:]].*try_first_pass.*[[:space:]].*retry=3|auth.*[[:space:]].*required.*[[:space:]].*pam_faillock.so.*[[:space:]].*preauth.*[[:space:]].*audit.*[[:space:]].*silent.*[[:space:]].*deny=3.*[[:space:]].*unlock_time=900|auth.*[[:space:]].*pam_unix.so|auth.*[[:space:]].*[default=die].*[[:space:]].*pam_faillock.so.*[[:space:]].*authfail.*[[:space:]].*audit.*[[:space:]].*deny=3.*[[:space:]].*unlock_time=900|auth.*[[:space:]].*sufficient|pam_faillock.so.*[[:space:]].*authsucc.*[[:space:]].*audit.*[[:space:]].*deny=3.*[[:space:]].*unlock_time=900|password.*[[:space:]].*sufficient.*[[:space:]].*pam_unix.so.*[[:space:]].*remember=5' /etc/pam.d/password-auth"
        output
        cmd="egrep 'password.*[[:space:]].*requisite.*[[:space:]].*pam_pwquality.so.*[[:space:]].*try_first_pass.*[[:space:]].*retry=3|auth.*[[:space:]].*required.*[[:space:]].*pam_faillock.so.*[[:space:]].*preauth.*[[:space:]].*audit.*[[:space:]].*silent.*[[:space:]].*deny=3.*[[:space:]].*unlock_time=900|auth.*[[:space:]].*pam_unix.so|auth.*[[:space:]].*[default=die].*[[:space:]].*pam_faillock.so.*[[:space:]].*authfail.*[[:space:]].*audit.*[[:space:]].*deny=3.*[[:space:]].*unlock_time=900|auth.*[[:space:]].*sufficient|pam_faillock.so.*[[:space:]].*authsucc.*[[:space:]].*audit.*[[:space:]].*deny=3.*[[:space:]].*unlock_time=900|password.*[[:space:]].*sufficient.*[[:space:]].*pam_unix.so.*[[:space:]].*remember=5' /etc/pam.d/system-auth"
        output
        cmd="egrep '^minlen.*[[:space:]].*=.*[[:space:]].*8|^dcredit.*[[:space:]].*=.*[[:space:]].*-1|^ucredit.*[[:space:]].*=.*[[:space:]].*-1|^ocredit.*[[:space:]].*=.*[[:space:]].*-1|^lcredit.*[[:space:]].*=.*[[:space:]].*-1' /etc/security/pwquality.conf"
        output

        msg_header 7.4. Restrict Access to the su Command
        cmd="egrep 'pam_wheel.so.*[[:space:]].*use_uid'  /etc/pam.d/su | grep -v '#'"
        output

        msg_header 7.5. Ensure permissions on bootloader config are configured
        cmd="stat -c%u%g%a /boot/grub2/grub.cfg | grep '^00.00$'"
        output

        msg_header 7.6. Disable Automounting
        cmd="systemctl list-unit-files --type=service --state=disabled --no-pager  | egrep 'autofs'"
        output

        msg_header 7.7. Ensure audit logs are not automatically deleted
        cmd="grep 'max_log_file_action.*[[:space:]].*=.*[[:space:]].*keep_logs'  /etc/audit/auditd.conf"
        output

        msg_header 7.8. Ensure no world writable files exist
        cmd="df --local -P | egrep 'rootvg|rhel|boot' | awk {'if (NR!=1) print \$6'} | xargs -I '{}' find '{}' -xdev -type f -perm -0002"
        output

        msg_header 8.1. Set Shadow Password Suite Parameters
        cmd="egrep '^PASS_MAX_DAYS.*[[:space:]].*90|^PASS_MIN_DAYS.*[[:space:]].*2|^PASS_WARN_AGE.*[[:space:]].*14|^PASS_MIN_LEN.*[[:space:]].*8' /etc/login.defs"
        output

        msg_header 8.3. Set Default Group for root Account
        cmd="id -g root"
        output

        msg_header 8.4. Set Default umask for Users
        cmd="grep umask /etc/bashrc  /etc/profile"
        output

        msg_header 8.5. Lock Inactive User Accounts
        cmd="awk -F':' '\$7 == 35 {print \$0}' /etc/shadow"
        output
        cmd="grep 'INACTIVE=30' /etc/default/useradd"
        output

        msg_header 8.6. Disabled aotomounting
        cmd="systemctl list-unit-files --type=service --state=disabled --no-pager  | egrep 'autofs'"
        output

        msg_header 9.1. Set Warning Banner for Standard Login Services
        cmd="stat -c%u%g%a  /etc/motd /etc/issue /etc/issue.net"
        output

        msg_header 9.3. Set GNOME Warning Banner
        cmd="ls -ld /etc/dconf/db/gdm.d/01-banner-message"
        output

        msg_header 10.1. Verify System File Permissions
        cmd="stat -c%u%g  /etc/passwd /etc/shadow /etc/gshadow /etc/group"
        output
        cmd="stat -c%a  /etc/passwd /etc/group"
        output
        cmd="stat -c%a  /etc/shadow /etc/gshadow"
        output

        msg_header 11.1. Restrict Cipher list
        cmd="egrep 'aes256-ctr|aes192-ctr|aes128-ctr' /etc/ssh/sshd_config"
        output

        msg_header 11.2. Enable TLS 1.2 \& Above protocol and 11.3. Disable weak encryption protocol
        cmd="ls -ld /etc/httpd/conf.d/ssl.conf"
        output

        echo -e "\033[46;30m"
        msg_header Log file generated at /tmp/$(hostname)_SCD_LINUX_V14_log_artifacts_"$cdate".txt
        echo -e "\033[40;37m"
}


aix_implement()
{
        echo "======================================================================"
        echo "                 AIX SCD Implementation Started"
        echo "======================================================================"
        for i in /etc/security/user /etc/security/login.cfg /etc/inittab /etc/rc.tcpip /etc/inetd.conf /etc/ssh/sshd_config /etc/tunables/nextboot /var/adm/cron/cron.allow /var/adm/cron/at.allow /etc/ftpusers /etc/syslog.conf /etc/snmpd.conf /etc/security/tsd/tsd.dat /etc/profile /etc/csh.login /var/spool/cron/crontabs/adm /etc/motd /etc/passwd /etc/group /etc/mail/sendmail.cf
        do
                backup_file $i
        done
        msg_header 2.1.1. Password Policy
        cmd="chsec -f /etc/security/user -s default -a mindiff=4"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.1 $cmd
        cmd="chsec -f /etc/security/user -s default -a minage=1"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.2 $cmd
        cmd="chsec -f /etc/security/user -s default -a maxage=13"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.3 $cmd
        cmd="chsec -f /etc/security/user -s default -a minlen=8"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.4 $cmd
        cmd="chsec -f /etc/security/user -s default -a minalpha=2"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.5 $cmd
        cmd="chsec -f /etc/security/user -s default -a histexpire=13"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.6 $cmd
	cmd="chsec -f /etc/security/user -s default -a histsize=5"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.7 $cmd
	cmd="chsec -f /etc/security/user -s default -a maxexpired=13"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.8 $cmd
	cmd="chsec -f /etc/security/user -s default -a minspecialchar=1"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.9 $cmd
	cmd="chsec -f /etc/security/user -s default -a maxrepeats=4"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.10 $cmd
	cmd="chsec -f /etc/security/user -s default -a mindigit=1"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.11 $cmd
	cmd="chsec -f /etc/security/user -s default -a minloweralpha=1"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.12 $cmd
	cmd="chsec -f /etc/security/user -s default -a minupperalpha=1"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.13 $cmd

        msg_header 2.2.1. Login Policy
        counter=0
        for i in daemon bin sys adm nobody
        do
                cmd="chuser login=false rlogin=false $i"
                counter=`expr $counter + 1`
                EXIT_STATUS=0
                eval $cmd
                check_status 2.2.1.$counter $cmd
        done
        cmd="chsec -f /etc/security/login.cfg -s default -a logindisable=10"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.8 $cmd
        cmd="chsec -f /etc/security/user -s default -a loginretries=3"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.9 $cmd

        msg_header 2.3.1. System Services Management
        counter=0
        for i in qdaemon lpd piobe dt rcnfs
        do
                cmd="rmitab $i"
                counter=`expr $counter + 1`
                EXIT_STATUS=1
                eval $cmd
                check_status 2.3.1.$counter $cmd
        done
        for i in sendmail snmpd dhcpcd dhcprd dhcpsd autoconf6 gated mrouted routed rwhod timed dpid2 hostmibd snmpmibd aixmibd ndpd-host ndpd-router
        do
                cmd="chrctcp -d $i"
                counter=`expr $counter + 1`
                EXIT_STATUS=0
                eval $cmd
                check_status 2.3.1.$counter $cmd
        done
        for i in telnet,tcpv6 exec,tcpv6 daytime,tcp daytime,udp shell,tcpv6 cmsd,sunrpc_udp ttdbserver,sunrpc_tcp uucp,tcp time,udp time,tcp login,tcp talk,udp ntalk,udp ftp,tcp6 chargen,tcp chargen,udp discard,tcp discard,udp dtspc,tcp echo,tcp echo,udp pcnfsd,udp rstatd,udp rusersd,udp rwalld,udp sprayd,udp klogin,tcp kshell,tcp rquotad,udp tftp,udp imap2,tcp pop3,tcp finger,tcp instsrv,tcp
        do
                a=$(echo "$i" | cut -d',' -f1)
                b=$(echo "$i" | cut -d',' -f2)
                cmd="chsubserver -r inetd -C /etc/inetd.conf -d -v $a -p $b"
                counter=`expr $counter + 1`
                EXIT_STATUS=0
                eval $cmd
                check_status 2.3.1.$counter $cmd
        done
        cmd="chmod u=rw,go=r /etc/inetd.conf && chown root:system /etc/inetd.conf"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.1.1.53 $cmd

        #msg_header 2.4.1. Disabling Remote Services
        #cmd="chmod ugo= /usr/bin/rcp /usr/bin/rlogin /usr/bin/rsh /usr/sbin/rlogind /usr/sbin/rshd /usr/sbin/tftpd"
        #EXIT_STATUS=0
        #eval $cmd
        #check_status 2.4.1 $cmd

        msg_header 2.4.2. Configuring SSH set privilege separation
        cmd="grep -q "^UsePrivilegeSeparation[[:blank:]]yes" /etc/ssh/sshd_config || perl -i -pe 's/UsePrivilegeSeparation.*/UsePrivilegeSeparation yes/g' /etc/ssh/sshd_config"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.4.2 $cmd

        #msg_header 2.4.3. Configuring SSH removal of .shosts file
        #cmd="find / -name ".shosts" -exec rm {} \;echo ' ' "
        #EXIT_STATUS=0
        #eval $cmd
        #check_status 2.4.3 $cmd

        msg_header 2.4.4. Configuring SSH removal of /etc/shosts.equiv
        cmd="rm -f /etc/shosts.equiv"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.4.4 $cmd

        #msg_header 2.4.5. Configuring SSH limit access via SSH
        #for i in AllowUsers AllowGroups DenyUsers DenyGroups
        #do
                #cmd="grep -q "^$i" /etc/ssh/sshd_config || echo "$i" >> /etc/ssh/sshd_config"
                #EXIT_STATUS=0
                #eval $cmd
                #check_status 2.4.5 $cmd
        #done

        msg_header 2.4.6. Configuring SSH sshd_config permissions lockdown
        cmd="chmod u=rw,go=r /etc/ssh/sshd_config"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.4.6 $cmd

        msg_header 2.5.1. Automated Authentication
        cmd="find / -name ".netrc" -exec rm {} \; echo ' '"
        EXIT_STATUS=0
        eval $cmd
        #check_status 2.5.1.1 $cmd
        #cmd="find / -name ".rhosts" -exec rm {} \; echo ' '"
        #EXIT_STATUS=0
        #eval $cmd
        check_status 2.5.1.2 $cmd
        cmd="sed '/^\s*$/d;s/^\(\s*[^#].*\)/#\1/' /etc/hosts.equiv > /etc/hosts.equiv.work && mv /etc/hosts.equiv.work /etc/hosts.equiv && chown root:system /etc/hosts.equiv && chmod 644 /etc/hosts.equiv"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.5.1.2 $cmd

        msg_header 2.6.1. TCP/IP Hardening
        counter=0
        for i in ipsrcrouteforward=0 ipignoreredirects=1 clean_partial_conns=1 ipsrcroutesend=0 ipforwarding=0 ipsendredirects=0 ip6srcrouteforward=0 directed_broadcast=0 tcp_pmtu_discover=0 bcastping=0 icmpaddressmask=0 udp_pmtu_discover=0 ipsrcrouterecv=0 nonlocsrcroute=0 tcp_tcpsecure=7 sockthresh=60 rfc1323=1 tcp_sendspace=262144 tcp_recvspace=262144 tcp_mssdflt=1448
        do
                cmd="no -p -o $i"
                counter=`expr $counter + 1`
                EXIT_STATUS=0
                eval $cmd
                check_status 2.5.1.$counter $cmd
        done
        for i in portcheck=1 nfs_use_reserved_ports=1
        do
                cmd="nfso -p -o $i"
                counter=`expr $counter + 1`
                EXIT_STATUS=0
                eval $cmd
                check_status 2.5.1.$counter $cmd
        done

        msg_header 2.7.1. Miscellaneous Enhancements
        #cmd="echo 'root\nadm' > /var/adm/cron/cron.allow && rm -f /var/adm/cron/cron.deny"
        #EXIT_STATUS=0
        #eval $cmd
        #check_status 2.7.1.1 $cmd
        cmd="echo 'root' > /var/adm/cron/at.allow && rm -f /var/adm/cron/at.deny"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.1.2 $cmd
        cmd="grep -q root /etc/ftpusers || echo 'root' >> /etc/ftpusers"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.1.3 $cmd
        cmd='chsec -f /etc/security/login.cfg -s default -a herald="Unauthorized use of this system is prohibited.\nlogin:"'
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.1.4 $cmd
        cmd="rmuser -p guest ; rm -rf /home/guest"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.1.5 $cmd
        cmd="Crontab permission"
        OUT=$(crontab -l |egrep -v '^#' |awk '{print $6}' |grep "^/" |sort -u | while read DIR
        do
                DIR=${DIR:-$(pwd)}
                while [[ -a ${DIR} ]]
                do
                        [[ "$(ls -ld ${DIR} | grep -v '^l')" = @(????????w? *) ]] && echo " WARNING ${DIR} is world writable"
                        [[ "$(ls -ld ${DIR} | grep -v '^l')" = @(?????w???? *) ]] && echo " WARNING ${DIR} is group writable"
                        [[ "$(ls -ld ${DIR} | awk '{print $3}' | grep -v '^l')" != @(root|bin) ]] && echo " WARNING ${DIR} is not owned by root or bin"
                        DIR=${DIR%/*}
                done
        done
        )
        [[ $(echo "$OUT" | wc -c) -le 1 ]] && sub_msg_ok 2.7.1.6 $cmd || sub_msg_ko 2.7.1.6 $OUT \\n $cmd
        cmd="chsec -f /etc/security/user -s default -a umask=027"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.1.7 $cmd
        cmd="mount | grep -iq audit"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.1.8 $cmd
        cmd="grep 'auth.info.*[[:blank:]].*/var/adm/authlog.*[[:blank:]].*rotate.*[[:blank:]].*time.*[[:blank:]].*1w.*[[:blank:]].*files.*[[:blank:]].*4' /etc/syslog.conf || perl -i -pe 's/auth.info.*/auth.info\t\t\/var\/adm\/authlog rotate time 1w files 4/g' /etc/syslog.conf"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.1.9 $cmd
        cmd="chmod u=rw,g=r,o= /var/adm/syslog && chown root:system /var/adm/syslog &&  refresh -s syslogd"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.1.9.1 $cmd
        cmd="echo 'Unauthorized use of this system is prohibited.' > /etc/ssh/ssh_banner && perl -i -pe 's/Banner.*/Banner \/etc\/ssh\/ssh_banner/g' /etc/ssh/sshd_config"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.1.10 $cmd
        cmd="perl -i -pe 's/^community/#community      public/g' /etc/snmpd.conf"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.1.11 $cmd
        cmd="chown -R root:security /etc/security && chmod u=rwx,g=rx,o= /etc/security && chmod -R go-w,o-rx /etc/security"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.1.12 $cmd

        msg_header 2.7.2. Configuring SSH -disable null passwords
        cmd="perl -i -pe 's/^PermitEmptyPasswords.*/PermitEmptyPasswords no/g' /etc/ssh/sshd_config && stopsrc -s sshd && sleep 1 && startsrc -s sshd"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.2.1 $cmd
        
	msg_header 2.7.2.2 Configuring SSH -ignore Rhosts
        cmd="perl -i -pe 's/#IgnoreRhosts.*/IgnoreRhosts yes/g' /etc/ssh/sshd_config && stopsrc -s sshd && sleep 1 && startsrc -s sshd"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.2.2 $cmd
	
	msg_header 2.7.2.3 Configuring SSH -ignore PermitUserEnvironment 
        cmd="perl -i -pe 's/#PermitUserEnvironment.*/PermitUserEnvironment no/g' /etc/ssh/sshd_config && stopsrc -s sshd && sleep 1 && startsrc -s sshd"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.2.3 $cmd
	
	msg_header 2.7.2.4 Configuring SSH -ignore HostbasedAuthentication 
        cmd="perl -i -pe 's/#HostbasedAuthentication.*/HostbasedAuthentication no/g' /etc/ssh/sshd_config && stopsrc -s sshd && sleep 1 && startsrc -s sshd"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.2.4 $cmd

        msg_header 2.7.3. Miscellaneous Config -all unlocked accounts must have a password
        cmd="pwdck -y ALL"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.3 $cmd

        msg_header 2.8.1. Miscellaneous Config disable NCS
        cmd="rmitab rcncs"
        EXIT_STATUS=1
        eval $cmd
        check_status 2.8.1 $cmd

        msg_header 2.8.2. Miscellaneous Config disable httpdlite
        cmd="rmitab httpdlite"
        EXIT_STATUS=1
        eval $cmd
        check_status 2.8.2 $cmd

        msg_header 2.8.3. Miscellaneous Config disable pmd
        cmd="rmitab pmd"
        EXIT_STATUS=1
        eval $cmd
        check_status 2.8.3 $cmd

        msg_header 2.8.4. Miscellaneous Config block talk/write
        cmd="grep -q '^mesg n' /etc/profile || echo 'mesg n' >> /etc/profile"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.8.4 $cmd

        msg_header 2.8.4. Miscellaneous Config block talk/write
        cmd="grep -q '^mesg n' /etc/csh.login || echo 'mesg n' >> /etc/csh.login"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.8.4 $cmd

        msg_header 2.8.5. Miscellaneous Config enable sar accounting
        cmd="perl -i -pe 's/^#0/0/g' /var/spool/cron/crontabs/adm"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.8.5 $cmd
        cmd="perl -i -pe 's/^#1/1/g' /var/spool/cron/crontabs/adm"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.8.5 $cmd
        cmd="perl -i -pe 's/^#5/5/g' /var/spool/cron/crontabs/adm"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.8.5 $cmd
sar_crons='
0 8-17 \* \* 1-5 /usr/lib/sa/sa1 1200 3 &
0 \* \* \* 0,6 /usr/lib/sa/sa1 &
0 18-7 \* \* 1-5 /usr/lib/sa/sa1 &
5 18 \* \* 1-5 /usr/lib/sa/sa2 -s 8:00 -e 18:01 -i 3600 -ubcwyaqvm &
10 23 \* \* 0-6 /usr/lib/acct/runacct 2>/usr/adm/acct/nite/accterr > /dev/null
0 23 \* \* 0-6 /usr/lib/acct/dodisk > /dev/null 2>&1
0 \* \* \* \* /usr/lib/acct/ckpacct > /dev/null 2>&1
15 4 1 \* \* /usr/lib/acct/monacct > /dev/null 2>&1
'
        echo "$sar_crons" | while IFS= read -r line
        do
                cmd="grep -q '^$line' /var/spool/cron/crontabs/adm || echo '$line' | sed 's/\\\//g' >> /var/spool/cron/crontabs/adm"
                eval $cmd
        done

	msg_header 2.8.5. /var/adm/sa permissions and ownership
	cmd="mkdir -p /var/adm/sa && chown adm:adm /var/adm/sa && chmod u=rwx,go=rx /var/adm/sa"
	EXIT_STATUS=0
	eval $cmd
	check_status 2.8.5 $cmd

        msg_header 2.8.6. Miscellaneous Config ftp banner
        cmd='dspcat -g /usr/lib/nls/msg/en_US/ftpd.cat > /tmp/ftpd.tmp && sed "s/\"\%s FTP server (\%s) ready.\"/\"\%s Authorized uses only. All activity may be monitored and reported\"/" /tmp/ftpd.tmp > /tmp/ftpd.msg && gencat /usr/lib/nls/msg/en_US/ftpd.cat /tmp/ftpd.msg && rm -f /tmp/ftpd.tmp /tmp/ftpd.msg'
        EXIT_STATUS=0
        eval $cmd
        check_status 2.8.6 $cmd

        msgeader 2.8.7. Miscellaneous Config /etc/motd
        cmd="echo '***************************************************************************\n
NOTICE TO USERS This computer system is the private property of its owner, whether individual, corporate or\n
government. It is for authorized use only. Users (authorized or unauthorized) have no explicit or implicit\n
expectation of privacy. Any or all uses of this system and all files on this system may be intercepted, monitored,\n
recorded, copied, audited, inspected, and disclosed to your employer, to authorized site, government, and law\n
enforcement personnel, as well as authorized officials of government agencies, both domestic and foreign. <p>\n
By using this system, the user consents to such interception, monitoring,recording, copying, auditing,\n
inspection, and disclosure at the discretion of such personnel or officials. Unauthorized or improper use of this\n
system may result in civil and criminal penalties and administrative or disciplinary action, as appropriate. By\n
continuing to <p> use this system you indicate your awareness of and consent to these terms and conditions of\n
use. LOG OFF IMMEDIATELY if you do not agree to the conditions stated in this warning.\n
****************************************************************************' > /etc/motd;chmod 644 /etc/motd;chown bin:bin /etc/motd"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.8.7 $cmd

        msg_header 2.8.8. Miscellaneous Config all user id must be unique
        cmd="[[ $(cut -d: -f 3 /etc/passwd |sort -n | uniq -d | wc -l) -gt 0 ]] && EXIT_STATUS=1 || EXIT_STATUS=0"
        eval $cmd
        check_status 2.8.8 $cmd

        msg_header 2.8.9. Miscellaneous Config all user id must be unique
        cmd="[[ $(cut -d: -f 3 /etc/group |sort -n | uniq -d | wc -l) -gt 0 ]] && EXIT_STATUS=1 || EXIT_STATUS=0"
        eval $cmd
        check_status 2.8.9 $cmd

       # msg_header 2.8.10. Miscellaneous Config unnecessary user and group removal
       # for i in uucp nuucp lpd printq
       # do
       #         cmd="rmuser -p $i; perl -i -pe 's/#$i.*//g' /etc/passwd; perl -i -pe 's/^\n$//g' /etc/passwd"
       #         EXIT_STATUS=0
       #         eval $cmd
       #         check_status 2.8.10 $cmd
       # done
       # msg_header 2.8.10. Miscellaneous Config unnecessary user and group removal
       # for i in uucp  printq
       # do
       #         cmd="rmgroup $i ; perl -i -pe 's/#$i.*//g' /etc/group; perl -i -pe 's/^\n$//g' /etc/group"
       #         EXIT_STATUS=0
       #         eval $cmd
       #         check_status 2.8.10 $cmd
       # done

        msg_header 2.8.11. Miscellaneous Config removing current working directory from root PATH
        cmd="[[ $(su - root -c "echo ${PATH}" |awk '/((:[ \t]*:)|(:[\t]*$)|(^[ \t]*:)|(^.:)|(:.$)|(:.:))/' | wc -l) -gt 0 ]] && EXIT_STATUS=1 || EXIT_STATUS=0"
        eval $cmd
        check_status 2.8.11 $cmd

        msg_header 2.9.1. Restrict Cipher list
        cmd="perl -i -pe 's/^Ciphers.*/Ciphers aes128-ctr,aes192-ctr,aes256-ctr/g' /etc/ssh/sshd_config; stopsrc -s sshd; sleep 1;startsrc -s sshd"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.9.1 $cmd

        msg_header 2.9.2. Enable TLS 1.2 \& Above protocol
        echo "$COCOLOR Not Applicable as HTTP packages are not installed $BASECOLOR"

        msg_header 2.10.1. /etc/mail/sendmail.cf SmtpGreetingMessage
        cmd="perl -i -pe 's/SmtpGreetingMessage=.*/SmtpGreetingMessage=mailerready/g' /etc/mail/sendmail.cf"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.10.1 $cmd

        msg_header 2.10.2. /etc/mail/sendmail.cf permissions and ownership
        cmd="chmod u=rw,g=r,o= /etc/mail/sendmail.cf"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.10.2 $cmd

        msg_header 2.10.3. /var/spool/mqueue permissions and ownership
        cmd="chmod u=rwx,go= /var/spool/mqueue && chown root /var/spool/mqueue"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.10.3 $cmd

        msg_header 2.11.1. Install updated security patches
        echo "$COCOLOR Manual Verification Required $BASECOLOR"
}

aix_verification()
{
        echo "======================================================================"
        echo "                 AIX SCD Verification Started"
        echo "======================================================================"
        msg_header 2.1. Filesystem Configuration
        cmd="lssec -f /etc/security/user -s default -a mindiff | grep -q 'default mindiff=4'"
        eval $cmd
        check_status 2.1.1 $cmd
        cmd="lssec -f /etc/security/user -s default -a minage | grep -q 'default minage=1'"
        eval $cmd
        check_status 2.1.2 $cmd
        cmd="lssec -f /etc/security/user -s default -a maxage | grep -q 'default maxage=13'"
        eval $cmd
        check_status 2.1.3 $cmd
        cmd="lssec -f /etc/security/user -s default -a minlen | grep -q 'default minlen=8'"
        eval $cmd
        check_status 2.1.4 $cmd
        cmd="lssec -f /etc/security/user -s default -a minalpha | grep -q 'default minalpha=2'"
        eval $cmd
        check_status 2.1.5 $cmd
        cmd="lssec -f /etc/security/user -s default -a histexpire | grep -q 'histexpire=13'"
        eval $cmd
        check_status 2.1.1.6 $cmd
	cmd="lssec -f /etc/security/user -s default -a histsize | grep -q 'default histsize=5'"
        eval $cmd
        check_status 2.1.1.7 $cmd
	cmd="lssec -f /etc/security/user -s default -a maxexpired | grep -q 'default maxexpired=13'"
        eval $cmd
        check_status 2.1.1.8 $cmd
	cmd="lssec -f /etc/security/user -s default -a minspecialchar | grep -q 'default minspecialchar=1'"
        eval $cmd
        check_status 2.1.1.9 $cmd
	cmd="lssec -f /etc/security/user -s default -a maxrepeats | grep -q 'default maxrepeats=4'"
        eval $cmd
        check_status 2.1.1.10 $cmd
	cmd="lssec -f /etc/security/user -s default -a mindigit | grep -q 'default mindigit=1'"
        eval $cmd
        check_status 2.1.1.11 $cmd
	cmd="lssec -f /etc/security/user -s default -a minloweralpha | grep -q 'default minloweralpha'"
        eval $cmd
        check_status 2.1.1.12 $cmd
	cmd="lssec -f /etc/security/user -s default -a minupperalpha | grep -q 'default minupperalpha=1'"
        eval $cmd
        check_status 2.1.1.13 $cmd

        msg_header 2.2.1. Login Policy
        counter=0
        for i in daemon bin sys adm nobody
        do
                counter=`expr $counter + 1`
                cmd="lsuser -c -a login rlogin $i | grep -q "$i:false:false""
                eval $cmd
                check_status 2.2.1.$counter $cmd
        done
        cmd="lssec -f /etc/security/login.cfg -s default -a logindisable | grep -q 'default logindisable=10'"
        eval $cmd
        check_status 2.2.1.8 $cmd
        cmd="lssec -f /etc/security/user -s default -a loginretries | grep -q 'default loginretries=3'"
        eval $cmd
        check_status 2.2.1.9 $cmd

        msg_header 2.3.1. System Services Management
        counter=0
        for i in qdaemon lpd piobe dt rcnfs
        do
                counter=`expr $counter + 1`
                cmd="lsitab $i"
                EXIT_STATUS=1
                eval $cmd
                check_status 2.3.1.$counter $cmd
        done
        for i in sendmail snmpd dhcpcd dhcprd dhcpsd autoconf6 gated mrouted routed rwhod timed dpid2 hostmibd snmpmibd aixmibd ndpd-host ndpd-router
        do
                counter=`expr $counter + 1`
                cmd="cat /etc/rc.tcpip | grep 'start /.*$i' | grep -q '^#'"
                EXIT_STATUS=0
                eval $cmd
                check_status 2.3.1.$counter $cmd
        done
        for i in telnet exec daytime shell cmsd ttdbserver uucp time login talk ntalk ftp chargen discard dtspc echo pcnfsd rstatd rusersd rwalld sprayd klogin kshell rquotad tftp imap2 pop3 finger instsrv
        do
                counter=`expr $counter + 1`
                cmd="cat /etc/inetd.conf | grep -q '#$i'"
                EXIT_STATUS=0
                eval $cmd
                check_status 2.3.1.$counter $cmd
        done
        cmd="ls -ld /etc/inetd.conf | grep -q '^\-rw\-r\-\-r\-\-.*root'"
        eval $cmd
        check_status 2.3.1.53 $cmd

        msg_header 2.4.1. Disabling Remote Services
        cmd="ls -ld /usr/bin/rcp /usr/bin/rlogin  /usr/bin/rsh | grep -v '\-\-\-\-\-\-\-\-\-\-'"
        EXIT_STATUS=1
        eval $cmd
        check_status 2.4.1.1 $cmd
        cmd="ls -ld /usr/sbin/rlogind /usr/sbin/rshd  /usr/sbin/tftpd  | grep -v '\-\-\-\-\-\-\-\-\-\-'"
        EXIT_STATUS=1
        eval $cmd
        check_status 2.4.1.2 $cmd

        msg_header 2.4.2. Configuring SSH set privilege separation
        cmd="grep -q 'UsePrivilegeSeparation yes' /etc/ssh/sshd_config"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.4.2. $cmd

        #msg_header 2.4.3. Configuring SSH removal of .shosts files
        #cmd="find / -name ".shosts";echo ' '"
        #EXIT_STATUS=0
        #eval $cmd
        #check_status 2.4.3. $cmd

        msg_header 2.4.4. Configuring SSH removal of /etc/shosts.equiv
        cmd="ls -ld /etc/shosts.equiv"
        EXIT_STATUS=2
        eval $cmd
        check_status 2.4.4. $cmd

        msg_header 2.4.5. Configuring SSH limit access via SSH
        cmd="egrep '^AllowUsers|^AllowGroups|^DenyUsers|^DenyGroups' /etc/ssh/sshd_config | wc -l"
        [[ $(eval $cmd) -eq 4 ]] && sub_msg_ok 2.4.5. $cmd || sub_msg_ko 2.4.5. $cmd

        msg_header 2.4.6. Configuring SSH sshd_config permissions lockdown
        cmd="ls -ld /etc/ssh/sshd_config | grep -q '\-rw\-r\-\-r\-\-'"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.4.6. $cmd

        msg_header 2.5.1. Automated Authentication
        cmd="find ./ -name .netrc -o -name .rhosts | wc -l"
        [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 2.5.1.1 $cmd || sub_msg_ko 2.5.1.1 $cmd
        cmd="ls -ld /etc/hosts.equiv  | grep -q '\-rw\-r\-\-r\-\-'"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.5.1.2 $cmd

        msg_header 2.6.1. TCP/IP Hardening
        counter=0
tcp_param="ipsrcrouteforward = \"0\"
ipignoreredirects = \"1\"
clean_partial_conns = \"1\"
ipsrcroutesend = \"0\"
ipforwarding = \"0\"
ipsendredirects = \"0\"
ip6srcrouteforward = \"0\"
directed_broadcast = \"0\"
tcp_pmtu_discover = \"0\"
bcastping = \"0\"
icmpaddressmask = \"0\"
udp_pmtu_discover = \"0\"
ipsrcrouterecv = \"0\"
nonlocsrcroute = \"0\"
tcp_tcpsecure = \"7\"
sockthresh = \"60\"
rfc1323 = \"1\"
tcp_sendspace = \"262144\"
tcp_recvspace = \"262144\"
tcp_mssdflt = \"1448\"
nfs_use_reserved_ports = \"1\""
        echo "$tcp_param" | while IFS= read -r line
        do
                counter=`expr $counter + 1`
               cmd="grep '$line' /etc/tunables/nextboot | wc -l"
               [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 2.6.1.$counter  $cmd || sub_msg_ko 2.6.1.$counter $cmd
        done

        msg_header 2.7.1. Miscellaneous Enhancements
        #cmd="cat /var/adm/cron/cron.allow | egrep 'root|adm' | wc -l"
        #[[ $(eval $cmd) -eq 2 ]] && sub_msg_ok 2.7.1.1 $cmd || sub_msg_ko 2.7.1.1 $cmd
        #cmd="/var/adm/cron/cron.deny"
        #[[ ! -f $cmd ]] && sub_msg_ok 2.7.1.1 $cmd || sub_msg_ko 2.7.1.1 $cmd
        cmd="cat  /var/adm/cron/at.allow | grep -i 'root' | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 2.7.1.2 $cmd || sub_msg_ko 2.7.1.2 $cmd
        cmd="/var/adm/cron/at.deny"
        [[ ! -f $cmd ]] && sub_msg_ok 2.7.1.2 $cmd || sub_msg_ko 2.7.1.2 $cmd
        cmd="cat /etc/ftpusers | grep -i root | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 2.7.1.3 $cmd || sub_msg_ko 2.7.1.3 $cmd
        cmd="lssec -f /etc/security/login.cfg -s default -a herald | grep -i Unauthorized | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 2.7.1.4 $cmd || sub_msg_ko 2.7.1.4 $cmd
        cmd="grep -i guest /etc/security/passwd  | wc -l"
        [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 2.7.1.5 $cmd || sub_msg_ko 2.7.1.5 $cmd
        cmd="Crontab permission"
        OUT=$(crontab -l |egrep -v '^#' |awk '{print $6}' |grep "^/" |sort -u | while read DIR
        do
                DIR=${DIR:-$(pwd)}
                while [[ -a ${DIR} ]]
                do
                        [[ "$(ls -ld ${DIR} | grep -v '^l')" = @(????????w? *) ]] && echo " WARNING ${DIR} is world writable"
                        [[ "$(ls -ld ${DIR} | grep -v '^l')" = @(?????w???? *) ]] && echo " WARNING ${DIR} is group writable"
                        [[ "$(ls -ld ${DIR} | awk '{print $3}' | grep -v '^l')" != @(root|bin) ]] && echo " WARNING ${DIR} is not owned by root or bin"
                        DIR=${DIR%/*}
                done
        done
        )
        [[ $(echo "$OUT" | wc -c) -le 1 ]] && sub_msg_ok 2.7.1.6 $cmd || sub_msg_ko 2.7.1.6 $OUT \\n $cmd
        cmd="lssec -f /etc/security/user -s default -a umask | grep 'default umask=27' | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 2.7.1.7 $cmd || sub_msg_ko 2.7.1.7 $cmd
        cmd="mount | grep -iq audit"
        EXIT_STATUS=0
        eval $cmd
        check_status 2.7.1.8 $cmd
        cmd="grep 'auth.info*[[:space:]]*/var/adm/authlog*[[:space:]]*rotate*[[:space:]]*time*[[:space:]]*1w*[[:space:]]*files*[[:space:]]*4' /etc/syslog.conf | wc -l"
        [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 2.7.1.9 $cmd || sub_msg_ko 2.7.1.9 $cmd
        cmd="grep 'Unauthorized use of this system is prohibited' /etc/ssh/ssh_banner | wc -l"
        [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 2.7.1.10 $cmd || sub_msg_ko 2.7.1.10 $cmd
        cmd="grep '^#community*[[:space:]]*public' /etc/snmpd.conf  | wc -l"
        [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 2.7.1.11 $cmd || sub_msg_ko 2.7.1.11 $cmd
        cmd="ls -ld /etc/security| grep 'drwxr\-x\-\-\-' | grep 'root' | grep 'security' | wc -l"
        [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 2.7.1.12 $cmd || sub_msg_ko 2.7.1.12 $cmd

        msg_header 2.7.2.1 Configuring SSH -disable null passwords
        cmd="grep '^PermitEmptyPasswords*[[:space:]]*no' /etc/ssh/sshd_config | wc -l"
        [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 2.7.2.1 $cmd || sub_msg_ko 2.7.2.1 $cmd
        
	msg_header 2.7.2.2 Configuring SSH -ignore Rhosts
        cmd="grep '^IgnoreRhosts*[[:space:]]*yes' /etc/ssh/sshd_config | wc -l"
        [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 2.7.2.2 $cmd || sub_msg_ko 2.7.2.2 $cmd
	
	msg_header 2.7.2.3 Configuring SSH -ignore PermitUserEnvironment 
        cmd="grep '^PermitUserEnvironment*[[:space:]]*no' /etc/ssh/sshd_config | wc -l"
        [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 2.7.2.3 $cmd || sub_msg_ko 2.7.2.3 $cmd
	
	msg_header 2.7.2.4 Configuring SSH -ignore HostbasedAuthentication 
        cmd="grep '^HostbasedAuthentication*[[:space:]]*no' /etc/ssh/sshd_config | wc -l"
        [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 2.7.2.4 $cmd || sub_msg_ko 2.7.2.4 $cmd

        msg_header 2.7.3. Miscellaneous Config -all unlocked accounts must have a password
        cmd="pwdck -n ALL | wc -l"
        [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 2.7.3 $cmd || sub_msg_ko 2.7.3 $cmd

        msg_header 2.7.4. TE implementation
        info_msg Implement this control manually

        msg_header 2.8.1. Miscellaneous Config disable NCS
        cmd="lsitab -a |grep "/etc/rc.ncs" | cut -f1 -d: | wc -l"
        [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 2.8.1 $cmd || sub_msg_ko 2.8.1 $cmd

        msg_header 2.8.2. Miscellaneous Config disable httpdlite
        cmd="lsitab httpdlite"
        EXIT_STATUS=1
        eval $cmd
        check_status 2.8..2 $cmd

        msg_header 2.8.3. Miscellaneous Config disable pmd
        cmd="lsitab pmd"
        EXIT_STATUS=1
        eval $cmd
        check_status 2.8.3 $cmd

        msg_header 2.8.4. Miscellaneous Config block talk/write
        cmd="grep 'mesg n' /etc/profile /etc/csh.login  | wc -l"
        [[ $(eval $cmd) -eq 2 ]] && sub_msg_ok 2.8.4 $cmd || sub_msg_ko 2.8.4 $cmd

        msg_header 2.8.5. Miscellaneous Config enable sar accounting
        cmd="cat /var/spool/cron/crontabs/adm | egrep 'sa|acct' | grep -v '#' | wc -l"
        [[ $(eval $cmd) -eq 8 ]] && sub_msg_ok 2.8.5 $cmd || sub_msg_ko 2.8.5 $cmd

        msg_header 2.8.6. Miscellaneous Config ftp banner
        cmd="dspcat -g /usr/lib/nls/msg/en_US/ftpd.cat | grep '^9[[:blank:]]' | grep ' Authorized uses only. All activity may be monitored and reported' | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 2.8.6 $cmd || sub_msg_ko 2.8.6 $cmd

        msg_header 2.8.7. Miscellaneous Config /etc/motd
        cmd="ls -ld /etc/motd | grep '\-rw\-r\-\-r\-\-' | grep 'bin' | wc -l'"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 2.8.7 $cmd || sub_msg_ko 2.8.7 $cmd

        msg_header 2.8.8. Miscellaneous Config all user id must be unique
        cmd="cut -d: -f 3 /etc/passwd |sort -n |uniq -d | wc -l"
        [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 2.8.8 $cmd || sub_msg_ko 2.8.8 $cmd

        msg_header 2.8.9. Miscellaneous Config all group id must be unique
        cmd="cut -d: -f 3 /etc/group |sort -n | uniq -d | wc -l"
        [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 2.8.9 $cmd || sub_msg_ko 2.8.9 $cmd

       #msg_header 2.8.10. Miscellaneous Config unnecessary user and group removal
       # cmd="egrep 'uucp|nuucp|lpd|printq' /etc/passwd /etc/group | wc -l"
       # [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 2.8.10 $cmd || sub_msg_ko 2.8.10 $cmd

        msg_header 2.8.11. Miscellaneous Config removing current working directory
        cmd="su - root -c 'echo ${PATH}' |awk '/((:[\t]*:)|(:[ \t]*$)|(^[ \t]*:)|(^.:)|(:.$)|(:.:))/' | wc -l"
        [[ $(eval $cmd) -eq 0 ]] && sub_msg_ok 2.8.11 $cmd || sub_msg_ko 2.8.11 $cmd

        msg_header 2.9.1. Restrict Cipher list
        cmd="grep  ^Cipher /etc/ssh/sshd_config | wc -l"
        [[ $(eval $cmd) -ge 1 ]] && sub_msg_ok 2.9.1 $cmd || sub_msg_ko 2.9.1 $cmd

        msg_header 2.9.2. Enable TLS 1.2 \& Above protocol
        info_msg Not Applicable as HTTP packages are not installed

        msg_header 2.10.1. /etc/mail/sendmail.cf SmtpGreetingMessage
        cmd="grep 'SmtpGreetingMessage=mailerready' /etc/mail/sendmail.cf | grep -v '#' | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 2.10.1 $cmd || sub_msg_ko 2.10.1 $cmd

        msg_header 2.10.2. /etc/mail/sendmail.cf permissions and ownership
        cmd="ls -ld /etc/mail/sendmail.cf | grep '\-rw\-r\-\-\-\-\-' | grep 'root' | grep 'system' | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 2.10.2 $cmd || sub_msg_ko 2.10.2 $cmd

        msg_header 2.10.3. /var/spool/mqueue permissions and ownership
        cmd="ls -ld /var/spool/mqueue | grep 'drwx\-\-\-\-\-\-' | grep 'root' | grep 'system' | wc -l"
        [[ $(eval $cmd) -eq 1 ]] && sub_msg_ok 2.10.3 $cmd || sub_msg_ko 2.10.3 $cmd

        msg_header 2.11.1. Install updated security patches
        info_msg Manual verification is required

}
aix_artifacts()
{
        echo "======================================================================"
        echo "                 AIX SCD Artifacts Collection Started"
        echo "======================================================================"
        msg_header 2.1. Filesystem Configuration
        cmd="lssec -f /etc/security/user -s default -a mindiff "
        CTRL_NO=2.1.1
        output
        cmd="lssec -f /etc/security/user -s default -a minage"
        CTRL_NO=2.1.2
        output
        cmd="lssec -f /etc/security/user -s default -a maxage"
        CTRL_NO=2.1.3
        output
        cmd="lssec -f /etc/security/user -s default -a minlen"
        CTRL_NO=2.1.4
        output
        cmd="lssec -f /etc/security/user -s default -a minalpha"
        CTRL_NO=2.1.5
        output
        cmd="lssec -f /etc/security/user -s default -a histexpire"
        CTRL_NO=2.1.1.6
        output
        cmd="lssec -f /etc/security/user -s default -a histsize"
        CTRL_NO=2.1.1.7
        output
        cmd="lssec -f /etc/security/user -s default -a maxexpired"
        CTRL_NO=2.1.1.8
        output
        cmd="lssec -f /etc/security/user -s default -a minspecialchar"
        CTRL_NO=2.1.1.9
        output
        cmd="lssec -f /etc/security/user -s default -a maxrepeats"
        CTRL_NO=2.1.1.10
        output
        cmd="lssec -f /etc/security/user -s default -a mindigit"
        CTRL_NO=2.1.1.11
        output
        cmd="lssec -f /etc/security/user -s default -a minloweralpha"
        CTRL_NO=2.1.1.12
        output
        cmd="lssec -f /etc/security/user -s default -a minupperalpha"
        CTRL_NO=2.1.1.13
        output

        msg_header 2.2.1. Login Policy
        counter=0
        for i in daemon bin sys adm nobody
        do
                counter=`expr $counter + 1`
                cmd="lsuser -c -a login rlogin $i"
                CTRL_NO=2.2.1.$counter
                output
        done
        cmd="lssec -f /etc/security/login.cfg -s default -a logindisable "
        CTRL_NO=2.2.1.8
        output
        cmd="lssec -f /etc/security/user -s default -a loginretries"
        CTRL_NO=2.2.1.9
        output

        msg_header 2.3.1. System Services Management
        counter=0
        for i in qdaemon lpd piobe dt rcnfs
        do
                counter=`expr $counter + 1`
                cmd="lsitab $i"
                CTRL_NO=2.3.1.$counter
                output
        done
        for i in sendmail snmpd dhcpcd dhcprd dhcpsd autoconf6 gated mrouted routed rwhod timed dpid2 hostmibd snmpmibd aixmibd ndpd-host ndpd-router
        do
                counter=`expr $counter + 1`
                cmd="cat /etc/rc.tcpip | grep 'start /.*$i' | grep '^#'"
                CTRL_NO=2.3.1.$counter
                output
        done
        for i in telnet exec daytime shell cmsd ttdbserver uucp time login talk ntalk ftp chargen discard dtspc echo pcnfsd rstatd rusersd rwalld sprayd klogin kshell rquotad tftp imap2 pop3 finger instsrv
        do
                counter=`expr $counter + 1`
                cmd="cat /etc/inetd.conf | grep '#$i'"
                CTRL_NO=2.3.1.$counter
                output
        done
        cmd="ls -ld /etc/inetd.conf"
        CTRL_NO=2.3.1.53
        output

        msg_header 2.4.1. Disabling Remote Services
        cmd="ls -ld /usr/bin/rcp /usr/bin/rlogin  /usr/bin/rsh"
        CTRL_NO=2.4.1.1
        output
        cmd="ls -ld /usr/sbin/rlogind /usr/sbin/rshd  /usr/sbin/tftpd"
        CTRL_NO=2.4.1.2
        output

        msg_header 2.4.2. Configuring SSH set privilege separation
        cmd="grep 'UsePrivilegeSeparation yes' /etc/ssh/sshd_config"
        CTRL_NO=2.4.2
        output

        #msg_header 2.4.3. Configuring SSH removal of .shosts files
        #cmd="find / -name '.shosts' 2> /dev/null"
        #CTRL_NO=2.4.3
        #output

        msg_header 2.4.4. Configuring SSH removal of /etc/shosts.equiv
        cmd="ls -ld /etc/shosts.equiv"
        CTRL_NO=2.4.4
        output

        msg_header 2.4.5. Configuring SSH limit access via SSH
        cmd="egrep '^AllowUsers|^AllowGroups|^DenyUsers|^DenyGroups' /etc/ssh/sshd_config | grep -v '#'"
        CTRL_NO=2.4.5
        output

        msg_header 2.4.6. Configuring SSH sshd_config permissions lockdown
        cmd="ls -ld /etc/ssh/sshd_config"
        CTRL_NO=2.4.6
        output

        msg_header 2.5.1. Automated Authentication
        cmd="find ./ -name .netrc -o -name .rhosts 2> /dev/null"
        CTRL_NO=2.5.1
        output
        cmd="ls -ld /etc/hosts.equiv"
        CTRL_NO=2.5.2
        output

        msg_header 2.6.1. TCP/IP Hardening
        counter=0
tcp_param="ipsrcrouteforward = \"0\"
ipignoreredirects = \"1\"
clean_partial_conns = \"1\"
ipsrcroutesend = \"0\"
ipforwarding = \"0\"
ipsendredirects = \"0\"
ip6srcrouteforward = \"0\"
directed_broadcast = \"0\"
tcp_pmtu_discover = \"0\"
bcastping = \"0\"
icmpaddressmask = \"0\"
udp_pmtu_discover = \"0\"
ipsrcrouterecv = \"0\"
nonlocsrcroute = \"0\"
tcp_tcpsecure = \"7\"
sockthresh = \"60\"
rfc1323 = \"1\"
tcp_sendspace = \"262144\"
tcp_recvspace = \"262144\"
tcp_mssdflt = \"1448\"
nfs_use_reserved_ports = \"1\""
        echo "$tcp_param" | while IFS= read -r line
        do
                counter=`expr $counter + 1`
                cmd="grep '$line' /etc/tunables/nextboot"
                CTRL_NO=2.6.1.$counter
                output
        done

        msg_header 2.7.1. Miscellaneous Enhancements
        #cmd="cat /var/adm/cron/cron.allow"
        #CTRL_NO=2.7.1.1
        #output
        #cmd=" ls -ld /var/adm/cron/cron.deny"
        #CTRL_NO=2.7.1.1
        #output
        cmd="cat  /var/adm/cron/at.allow"
        CTRL_NO=2.7.1.2
        output
        cmd="ls -ld /var/adm/cron/at.deny"
        CTRL_NO=2.7.1.2
        output
        cmd="cat /etc/ftpusers | grep -i root"
        CTRL_NO=2.7.1.3
        output
        cmd="lssec -f /etc/security/login.cfg -s default -a herald"
        CTRL_NO=2.7.1.4
        output
        cmd="grep -i guest /etc/security/passwd"
        CTRL_NO=2.7.1.5
        output
        cmd="$(crontab -l |egrep -v '^#' |awk '{print $6}' |grep "^/" |sort -u | while read DIR
        do
                DIR=${DIR:-$(pwd)}
                while [[ -a ${DIR} ]]
                do
                        [[ "$(ls -ld ${DIR} | grep -v '^l')" = @(????????w? *) ]] && echo " WARNING ${DIR} is world writable"
                        [[ "$(ls -ld ${DIR} | grep -v '^l')" = @(?????w???? *) ]] && echo " WARNING ${DIR} is group writable"
                        [[ "$(ls -ld ${DIR} | awk '{print $3}' | grep -v '^l')" != @(root|bin) ]] && echo " WARNING ${DIR} is not owned by root or bin"
                        DIR=${DIR%/*}
                done
        done
        )"
        CTRL_NO=2.7.1.6
        output
        cmd="lssec -f /etc/security/user -s default -a umask"
        CTRL_NO=2.7.1.7
        output
        cmd="mount | grep -i audit"
        CTRL_NO=2.7.1.8
        output
        cmd="grep 'auth.info*[[:space:]]*/var/adm/authlog*[[:space:]]*rotate*[[:space:]]*time*[[:space:]]*1w*[[:space:]]*files*[[:space:]]*4' /etc/syslog.conf"
        CTRL_NO=2.7.1.9
        output
        cmd="grep 'Unauthorized use of this system is prohibited' /etc/ssh/ssh_banner"
        CTRL_NO=2.7.1.10
        output
        cmd="grep '^#community*[[:space:]]*public' /etc/snmpd.conf"
        CTRL_NO=2.7.1.11
        output
        cmd="ls -ld /etc/security"
        CTRL_NO=2.7.1.12
        output

        msg_header 2.7.2.1 Configuring SSH -disable null passwords
        cmd="grep '^PermitEmptyPasswords*[[:space:]]*no' /etc/ssh/sshd_config"
        CTRL_NO=2.7.2.1
        output

        msg_header 2.7.2.2 Configuring SSH -ignore Rhosts
        cmd="grep '^IgnoreRhosts*[[:space:]]*yes' /etc/ssh/sshd_config"
        CTRL_NO=2.7.2.2
        output

        msg_header 2.7.2.3 Configuring SSH -ignore PermitUserEnvironment
        cmd="grep '^PermitUserEnvironment*[[:space:]]*no' /etc/ssh/sshd_config"
        CTRL_NO=2.7.2.3
        output

        msg_header 2.7.2.4 Configuring SSH -ignore HostbasedAuthentication 
        cmd="grep '^HostbasedAuthentication*[[:space:]]*no' /etc/ssh/sshd_config"
        CTRL_NO=2.7.2.4
        output

        msg_header 2.7.3. Miscellaneous Config -all unlocked accounts must have a password
        cmd="pwdck -n ALL"
        CTRL_NO=2.7.3
        output

        msg_header 2.8.1. Miscellaneous Config disable NCS
        cmd="lsitab -a |grep "/etc/rc.ncs" | cut -f1 -d: | wc -l"
        CTRL_NO=2.8.1
        output

        msg_header 2.8.2. Miscellaneous Config disable httpdlite
        cmd="lsitab httpdlite"
        CTRL_NO=2.8.2
        output

        msg_header 2.8.3. Miscellaneous Config disable pmd
        cmd="lsitab pmd"
        CTRL_NO=2.8.3
        output

        msg_header 2.8.4. Miscellaneous Config block talk/write
        cmd="grep 'mesg n' /etc/profile /etc/csh.login"
        CTRL_NO=2.8.4
        output

        msg_header 2.8.5. Miscellaneous Config enable sar accounting
        cmd="cat /var/spool/cron/crontabs/adm"
        CTRL_NO=2.8.5
        output

        msg_header 2.8.6. Miscellaneous Config ftp banner
        cmd="dspcat -g /usr/lib/nls/msg/en_US/ftpd.cat | grep '^9[[:blank:]]'"
        CTRL_NO=2.8.6
        output

        msg_header 2.8.7. Miscellaneous Config /etc/motd
        cmd="ls -ld /etc/motd"
        CTRL_NO=2.8.7
        output

        msg_header 2.8.8. Miscellaneous Config all user id must be unique
        cmd="cut -d: -f 3 /etc/passwd |sort -n |uniq -d"
        CTRL_NO=2.8.8
        output

        msg_header 2.8.9. Miscellaneous Config all group id must be unique
        cmd="cut -d: -f 3 /etc/group |sort -n | uniq -d"
        CTRL_NO=2.8.9
        output

        #msg_header 2.8.10. Miscellaneous Config unnecessary user and group removal
        #cmd="egrep 'uucp|nuucp|lpd|printq' /etc/passwd /etc/group"
        #CTRL_NO=2.8.10
        #output

        msg_header 2.8.11. Miscellaneous Config removing current working directory
        cmd="su - root -c 'echo ${PATH}' |awk '/((:[\t]*:)|(:[ \t]*$)|(^[ \t]*:)|(^.:)|(:.$)|(:.:))/'"
        CTRL_NO=2.8.11
        output

        msg_header 2.9.1. Restrict Cipher list
        cmd="grep  ^Cipher /etc/ssh/sshd_config"
        CTRL_NO=2.9.1
        output

        msg_header 2.9.2. Enable TLS 1.2 \& Above protocol
        info_msg Not Applicable as HTTP packages are not installed

        msg_header 2.10.1. /etc/mail/sendmail.cf SmtpGreetingMessage
        cmd="grep 'SmtpGreetingMessage=mailerready' /etc/mail/sendmail.cf | grep -v '#'"
        CTRL_NO=2.10.1
        output

        msg_header 2.10.2. /etc/mail/sendmail.cf permissions and ownership
        cmd="ls -ld /etc/mail/sendmail.cf"
        CTRL_NO=2.10.2
        output

        msg_header 2.10.3. /var/spool/mqueue permissions and ownership
        cmd="ls -ld /var/spool/mqueue"
        CTRL_NO=2.10.3
        output


}

usage()
{
        echo "usage:"
        echo "      -i :- Implement SCD V14 on server "
        echo "      -v :- Verify SCD V14 control points on server"
        echo "      -a :- Collects SCD V14 artifatcs"
        echo "      -d :- Use this option with other options to start script in debug mode"
}
while getopts 'ivadh' c
do
  case $c in
    i)
        if [ "$(uname)" == "Linux" ]
        then
                linux_implement | tee -a /tmp/$(hostname)_SCD_LINUX_V14_log_impl_"$cdate".txt 2>&1
        else
                aix_implement | tee -a /tmp/$(hostname)_SCD_AIX_V14_log_impl_"$cdate".txt 2>&1
        fi ;;
    v)
        if [ "$(uname)" == "Linux" ]
        then
                linux_verification | tee -a /tmp/$(hostname)_SCD_LINUX_V14_log_veri_"$cdate".txt 2>&1
        else
                aix_verification | tee -a /tmp/$(hostname)_SCD_AIX_V14_log_veri_"$cdate".txt 2>&1
        fi;;
    a)
        if [ "$(uname)" == "Linux" ]
        then
                linux_artifacts | tee -a /tmp/$(hostname)_SCD_LINUX_V14_log_artifacts_"$cdate".txt 2>&1
        else
                aix_artifacts | tee -a /tmp/$(hostname)_SCD_AIX_V14_log_artifacts_"$cdate".txt 2>&1
        fi;;
    d) set -x;;
    h|?) usage ;;
    *) usage;;
  esac
done
if ((OPTIND == 1))
then
    echo "No options specified"
    usage
fi


=========================================================================================================================================================================>
script and sftp

sftp -P 2022 mercuser@gstsftp.sbi.co.in -- U5er@G$t  Merchant user   GST/IRCTC scripts
sftp -P 2022 corpuser@gstsftp.sbi.co.in              Corporate user  GST scripts
sftp -P 2022 colluser@gstsftp.sbi.co.in --  	      Collect user   GST scripts
sftp -P 2022 retauser@gstsftp.sbi.co.in               retail user    GST scripts

sftp -oMACs=hmac-sha2-256 -P 2201 SBCOLLECT_MSMB_5697646@sfg.onlinesbi.com  Sbi@12345 --upi --- jeeva/gowrisankar
sftp -oMACs=hmac-sha2-256 -P 2201 SBCOLLECT_MSMB_5697646@10.248.56.18

cd /SBI_UPI/SBCOLLECT_MSMB_5697646/Download
lcd /sysmonlogs/SBCOLLECT

/data/sftp_files/home/SBCUPI/MIS/Files_Incoming


/SBI_UPI/SBCOLLECT_MSMB_5697646/Upload


/data/REPORTS_DATA/OAO/INCOMING
sftp -oMACs=hmac-sha2-256 -P 2201 meity_data@sfg.onlinesbi.com  Inb@Mob@35
cd meity_data/Meity
sftp -P 2201 meity_data@10.248.56.18

sftp -P 9293 -oKexAlgorithms=diffie-hellman-group1-sha1 -o identityfile=/home/SBINH2HINB/.ssh/id_rsa SBINH2HINB@192.168.179.233:/ -- sbin@12345

sftp -P 2201 senthil_tm@sfg.onlinesbi.com --- UPI refund (Merchant) Lincy/jayvignesh
Password1@3
cd /SBI_UPI/SBIMOPS/INBdownload            /Worldline/ONLINESBI/Output
cd /SBI_UPI/SBIMOPS/INBUpload
lcd /sysmonlogs/Merchant_Team/UPI_PY
lcd /sysmonlogs/Merchant_Team/UPI_REF


sftp -oMACs=hmac-sha2-256 -P 2201 sanket_g@10.189.32.239
sftp -P 2022 anywuser@gstsftp.sbi.co.in U5er@G$t 10.189.146.6/10.209.91.6

Jan Feb March April 2018 logs files 10.189.146.10 

sftp -c 3des-cbc sbibank@103.225.112.95 

sftp -oPort=2200 fdd99fd46e884189892ac8e311130bac@10.0.34.38     Pa55@123 -- 10.189.39.76

                           Scripts DC & DR      
-----------------------------------------------------------------------
10.189.152.6                 MT940,trickle files move, /opt/sbi/gateway/sgate/conf/corporate/xml in root          Composite bulk3P under bvadmin
                                                                                Trickle feed, Retail trickle, DWP & GSTReport under trickle
                    
10.189.147.6                 Branch script under wac (Vimal)
                                                                                
10.189.128.13 & 14           neml script under wac

10.189.127.28                Wac scripts & one script in root
                    
10.189.146.30                Loyalty files script under fdmwac
                    
10.189.153.134               Meity script under oracle
                    
10.189.146.6                 Mob GST script under root (SBA & SBF)
                    
10.189.151.14                GST Scripts under root
                                                                                atmpinppk script under atmpinppk
	
10.189.39.81/10.209.69.232   sh -x /scripts/oaokycpush_sftp_updated.sh /scripts/oaokycpull_sftp_new.sh	
-----------------------------------------------------------------------
10.209.98.6                  MT940 in root
& 93.6 (Vimal)               Composite bulk3P & Acc Stmt under bvadmin          Branch under wac (Vimal)
-----------------------------------------------------------------------

10.189.151.6    /home/uxmusr/100418/Vistaar_Regulator/ (CUG)

-----------------------------------------------------------------------
OAO Scripts

10.189.39.81/10.209.69.232  /scripts/oaokycpush_sftp_updated.sh  ( root) /
chinnads user for (sftp path IP 10.189.147.6/10.209.93.6 Other app server)

------------------------------------------------------------------------

for i in `ls -lrt |grep "Feb"|awk '{print $9}'`; do echo $i; mv $i /log_archive_2019/Retail_98888/; done &
for i in `find . -type f -name "*ret*.log*280120*"`; do echo $i; bzcat $i |grep "ORA-" >> /mksysb/logs/retail28.log; done



find /data/downloads/corporate/report/GST_Statement/ -type f -mtime +5 -exec mv '{}' /data/downloads/corporate/report/GST_Statement_bkp/ \;





cd /switchdump/twduserhome/CBSSBI/data/BRANCHES/98888/AccountStatement/MT940/Pending;

for i in `ls -ltr | grep -i "cps9313228"| awk '{print $9}'`; do ls -ltr $i; mv $i /data/BRANCHES/98888/AccountStatement/MT940/Pending/.; done &

for i in `ls -ltr | grep -i "May 13"| awk '{print $9}'`; do ls -ltr $i; mv $i /data/BRANCHES/98888/AccountStatement/MT940/Pending/.; done &

for i in `ls -ltr | grep -i "May 14"| awk '{print $9}'`; do ls -ltr $i; mv $i /data/BRANCHES/98888/AccountStatement/MT940/Pending/.; done &

cd /data/BRANCHES/98888/data/BRANCHES/98888/AccountStatement/MT940/;         ls -ltr MT940_Processed




3031671593







=========================================================================================================================================================================>

Scripts&details

sftp -P 2022 mercuser@gstsftp.sbi.co.in -- U5er@G$t  Merchant user   GST/IRCTC scripts
sftp -P 2022 corpuser@gstsftp.sbi.co.in              Corporate user  GST scripts
sftp -P 2022 colluser@gstsftp.sbi.co.in --  	      Collect user   GST scripts
sftp -P 2022 retauser@gstsftp.sbi.co.in               retail user    GST scripts

sftp -oMACs=hmac-sha2-256 -P 2201 SBCOLLECT_MSMB_5697646@sfg.onlinesbi.com  Sbi@12345 --upi --- jeeva/gowrisankar
sftp -oMACs=hmac-sha2-256 -P 2201 SBCOLLECT_MSMB_5697646@10.248.56.18

cd /SBI_UPI/SBCOLLECT_MSMB_5697646/Download
lcd /sysmonlogs/SBCOLLECT
 
/data/sftp_files/home/SBCUPI/MIS/Files_Incoming


/SBI_UPI/SBCOLLECT_MSMB_5697646/Upload


/data/REPORTS_DATA/OAO/INCOMING
sftp -oMACs=hmac-sha2-256 -P 2201 meity_data@sfg.onlinesbi.com  Inb@Mob@35
cd meity_data/Meity
sftp -P 2201 meity_data@10.248.56.18

sftp -P 9293 -oKexAlgorithms=diffie-hellman-group1-sha1 -o identityfile=/home/SBINH2HINB/.ssh/id_rsa SBINH2HINB@192.168.179.233:/ -- sbin@12345

sftp -P 2201 senthil_tm@sfg.onlinesbi.com --- UPI refund (Merchant) Lincy/jayvignesh
Password1@3
cd /SBI_UPI/SBIMOPS/INBUpload              /Worldline/ONLINESBI/Output
cd /SBI_UPI/SBIMOPS/INBdownload
lcd /sysmonlogs/Merchant_Team/UPI_PY
lcd /sysmonlogs/Merchant_Team/UPI_REF


DWH Script:-
login to ftp
su - trickle

/usr/bin/sftp inb@10.0.235.80

cd /data/INB/ftp
lcd /data/users/pollingarchival/Month_Year/YearMonthDate

sftp -oMACs=hmac-sha2-256 -P 2201 sanket_g@10.189.32.239
sftp -P 2022 anywuser@gstsftp.sbi.co.in U5er@G$t 10.189.146.6/10.209.91.6

Jan Feb March April 2018 logs files 10.189.146.10 

sftp -c 3des-cbc sbibank@103.225.112.95 

sftp -oPort=2200 fdd99fd46e884189892ac8e311130bac@10.0.34.38     Pa55@123 -- 10.189.39.76

                           Scripts DC & DR      
-----------------------------------------------------------------------
10.189.152.6                 MT940,trickle files move, /opt/sbi/gateway/sgate/conf/corporate/xml in root          Composite bulk3P under bvadmin
                                                                                Trickle feed, Retail trickle, DWP & GSTReport under trickle
                    
10.189.147.6                 Branch script under wac (Vimal)
                                                                                
10.189.128.13 & 14           neml script under wac

10.189.127.28                Wac scripts & one script in root
                    
10.189.146.30                Loyalty files script under fdmwac
                    
10.189.153.134               Meity script under oracle
                    
10.189.146.6                 Mob GST script under root (SBA & SBF)
                    
10.189.151.14                GST Scripts under root
                             atmpinppk script under atmpinppk
	
10.189.39.81/10.209.69.232   sh -x /scripts/oaokycpush_sftp_updated.sh /scripts/oaokycpull_sftp_new.sh	
-----------------------------------------------------------------------
10.209.98.6                  MT940 in root
& 93.6 (Vimal)               Composite bulk3P & Acc Stmt under bvadmin          Branch under wac (Vimal)
-----------------------------------------------------------------------

10.189.151.6    /home/uxmusr/100418/Vistaar_Regulator/ (CUG)

-----------------------------------------------------------------------
OAO Scripts

10.189.39.81/10.209.69.232  /scripts/oaokycpush_sftp_updated.sh  ( root) /
chinnads user for (sftp path IP 10.189.147.6/10.209.93.6 Other app server)

------------------------------------------------------------------------

for i in `ls -lrt |grep "Feb"|awk '{print $9}'`; do echo $i; mv $i /log_archive_2019/Retail_98888/; done &
for i in `find . -type f -name "*ret*.log*280120*"`; do echo $i; bzcat $i |grep "ORA-" >> /mksysb/logs/retail28.log; done



find /data/downloads/corporate/report/GST_Statement/ -type f -mtime +5 -exec mv '{}' /data/downloads/corporate/report/GST_Statement_bkp/ \;





cd /switchdump/twduserhome/CBSSBI/data/BRANCHES/98888/AccountStatement/MT940/Pending;

for i in `ls -ltr | grep -i "cps9313228"| awk '{print $9}'`; do ls -ltr $i; mv $i /data/BRANCHES/98888/AccountStatement/MT940/Pending/.; done &

for i in `ls -ltr | grep -i "May 13"| awk '{print $9}'`; do ls -ltr $i; mv $i /data/BRANCHES/98888/AccountStatement/MT940/Pending/.; done &

for i in `ls -ltr | grep -i "May 14"| awk '{print $9}'`; do ls -ltr $i; mv $i /data/BRANCHES/98888/AccountStatement/MT940/Pending/.; done &

cd /data/BRANCHES/98888/data/BRANCHES/98888/AccountStatement/MT940/;         ls -ltr MT940_Processed




3031671593





=========================================================================================================================================================================>

SSL_Certificate_Expiry

# Set the input and output files
INPUT_FILE="ssl.txt"
OUTPUT_FILE="output.txt"

# Set the date format
DATE_FORMAT="%b %d, %Y"

# Read the input file line by line
while IFS= read -r line; do
    # Split the line into certificate name and expiration date
    cert_name=$(echo "$line" | cut -d '|' -f1 | xargs)
    exp_date=$(echo "$line" | cut -d '|' -f2 | cut -d ' ' -f2-)

    # Convert the expiration date to a timestamp
    exp_timestamp=$(date -d "exp_date" "+%s")

    # Get the current timestamp
    cur_timestamp=$(date "+%s")

    # Calculate the remaining days
    remaining_days=$(( (exp_timestamp - cur_timestamp) / 86400 ))

    # Check if the certificate has already expired
    if (( remaining_days <= 0 )); then
        echo "$cert_name | -$(((-1) * remaining_days)) days ago."
        echo "SSL_Certificate,cert_name=$cert_name,expiry_date=$remaining_days $remaining_days" | /opt/dynatrace/oneagent/agent/tools/dynatrace_ingest
    else
        echo "$cert_name | +$remaining_days days remaining."
        echo "SSL_Certificate,cert_name=$cert_name,expiry_date=$remaining_days $remaining_days" | /opt/dynatrace/oneagent/agent/tools/dynatrace_ingest
    fi >> "$OUTPUT_FILE"
done < "$INPUT_FILE"

=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>

==============================================================================================================================================================================
backup_move1files

filecnt=`find /data/sftp_files/home/Trickle/Files_Outgoing -type f ! -name delete.text ! -newer /data/sftp_files/home/Trickle/Files_Outgoing/delete.text |wc -l`
if [ $filecnt -gt 0 ]
then
filename=`find /data/sftp_files/home/Trickle/Files_Outgoing -type f ! -name delete.text ! -newer /data/sftp_files/home/Trickle/Files_Outgoing/delete.text | nawk -F"/" '{print $7}'`
for name in $filename
do
/usr/bin/sftp sbibupld@10.0.20.200 << EOF
cd /sbi/INTERFACES/BATCH-UPLOADS-INB-SFTP-M 	
lcd /data/sftp_files/home/Trickle/Files_Outgoing
put $name
#bye
EOF
 if [ $? -eq 0 ]
  then
mv /data/sftp_files/home/Trickle/Files_Outgoing/$name /data/sftp_files/home/Trickle/Archived_Outgoing/
     echo " File tranfered TO BHAGA Server SUCCESS "
  else
     echo " Error while tranferring file to BHAGA "
  fi
done
fi
touch /data/sftp_files/home/Trickle/Files_Outgoing/delete.text



==============================================================================================================================================================================

CIBIL_GET

#!/bin/bash
HOST="103.225.112.95"
USER="sbibank"
YESTERDAY=`TZ=IST+24 date +%d_%m_%Y`
expect -c "
#spawn sftp -c 3des-cbc $USER@$HOST
spawn sftp $USER@$HOST
sleep 5
expect \"*assword:*\"
send \"Admin@123\r\"
expect \"sftp>*\"
send \"cd Refund\r\"
expect \"sftp>*\"
send \"lcd /data/sftp_files/home/CIBIL/Files_Incoming\r\"
expect \"sftp>*\"
send \"mget SBI_refund_${YESTERDAY}.txt\r\"
expect \"sftp>*\"
send \"quit\n\"
interact "
chmod 644  /data/sftp_files/home/CIBIL/Files_Incoming/SBI_refund_*.txt 


==============================================================================================================================================================================
CIBIL_PUT

#!/bin/bash
HOST="103.225.112.95"
USER="sbibank"
YESTERDAY=`TZ=IST+24 date +%d%m%Y`
cd /data/sftp_files/home/CIBIL/Files_Outgoing/
for i in ` ls -lrt CIBIL_BID${YESTERDAY}.txt | awk '{print $9}'`
do
size=`ls -l $i| awk '{print $5}'`
echo "$i file size is $size"
if [ $size = 0 ]
then
        echo "$i File not uploaded"
else
        echo "Uploading $i file"
expect -c "
#spawn sftp -c 3des-cbc $USER@$HOST
spawn sftp $USER@$HOST
sleep 5
expect \"*assword:*\"
send \"Admin@123\r\"
expect \"sftp>*\"
send \"cd DailyNBMIS\r\"
expect \"sftp>*\"
send \"put $i\r\"
expect \"sftp>*\"
send \"ls -lrt *\r\"
expect \"sftp>*\"
send \"quit\n\"
interact "
mv $i /data/sftp_files/home/CIBIL/Archived_Outgoing/
fi
done


==============================================================================================================================================================================

What is LVM and how to create it?
what is Quorum?
what is the use of lost+found
what is the patching process?
What is VGDA?
	Ans: Volume Group Descriptor Area. It contains the information about volume group to which the physical volume belongs to. 
		It also contains the information about physical partitions, logical partitions and logical volumes.
How do I know if my volume group is normal, big, or scalable?
	Ans: Run the lsvg command on the volume group and look at the value for MAX PVs. 
		The value is 32 for normal, 128 for big and 1,024 for scalable volume group.
What is zoning in a server?
	Ans: Zoning helps ensure that only authorized devices can communicate with each other and access designated storage resources, 
	improving security, performance, and manageability. Zoning is typically implemented in Fibre Channel networks, 
	which are commonly used for high-speed data storage and retrieval.



what is VIOS?
what is the difference between eatherchannel and eathercable?
what is FC?
what is 

==============================================================================================================================================================================


==============================================================================================================================================================================



==============================================================================================================================================================================




==============================================================================================================================================================================




==============================================================================================================================================================================




==============================================================================================================================================================================




==============================================================================================================================================================================




==============================================================================================================================================================================




==============================================================================================================================================================================




==============================================================================================================================================================================




==============================================================================================================================================================================





==============================================================================================================================================================================





==============================================================================================================================================================================



==============================================================================================================================================================================




==============================================================================================================================================================================




==============================================================================================================================================================================




==============================================================================================================================================================================


==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================

==============================================================================================================================================================================



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>



=========================================================================================================================================================================>





==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
==============================================================================================================================================================================
