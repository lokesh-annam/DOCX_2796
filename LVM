How to Create Logical Volume (LVM) in Linux?
	1) How to Create Physical Volumes
		To discover the new disks mapped to Linux system, run:
		# for host in `ls /sys/class/scsi_host`; do echo "Scanning $host...Completed"; echo "- - -" > /sys/class/scsi_host/$host/scan; done
			Scanning host0...Completed
			Scanning host1...Completed
			Scanning host2...Completed
		Use the lsscsi command to verify if new disks are discovered at OS level.
		# lsscsi --scsi --size | grep [Last 5 Digits of LUN]
		To create physical volume: 
		# pvcreate /dev/sdb /dev/sdc /dev/sdd
		The pvs command displays summary output of PVs, whereas the pvdisplay command shows detailed output.
		# pvs
		# pvdisplay
	2) How to Create a Volume Group
		To create a Volume Group.
		# vgcreate vg01 /dev/sdb
		For instance, to create a volume group with 32MB of PE Size (Physical Extent), run:
		# vgcreate -s 32M vg01 /dev/sdb
		The vgs command displays summary output of VGs
		# vgs vg01
		# vgdisplay vg01
		2a) How to Extent Volume Group
		# vgextend [Existing_Volume_Group_Name] [Physical_Volume]
	3) How to Create a Logical Volume Using GB
		# lvcreate –n [Logical_Volume_Name] –L [LV_Size in (M|G|T)] [Name of the Volume Group where the LV to be created]
		# lvcreate -n lv001 -L 10G vg01
		To display information about the LVs you have created.
		# lvs /dev/vg01/lvol01
		# lvdisplay /dev/vg01/lv001
		3a) How to Create Logical Volume Using PE Size
		3b) How to Calculate PE Value?
		10GB = 10240MB / 4MB (PE Size) = 2560 PEs
		Common syntax to create a Logical Volume with PE Size.
		# lvcreate –n [LV_Name] –l [PE_Size] [Name of the Volume Group where the LV to be created]
		To create 10GB of logical volume using the PE size the command would be:
		# lvcreate -n lv001 -l 2560 vg01
	4) How to Create File system
		# mkfs –t [FS_Type] /dev/[Name of the Volume Group where LV resides]/[LV name]
		or
		# mkfs -t [FS_Type] /dev/mapper/VGname-LVname
		Use the below command to format the logical volume ‘lv001’ with the 'ext4' file system.
		# mkfs -t ext4 /dev/vg01/lv001
		For xfs file system.
		# mkfs -t xfs /dev/vg01/lv001
	5) Mounting Logical Volume
		Create a directory to mount the logical volume.
		# mkdir /lvmtest
		Use the mount command to mount the logical volume.
		# mount /dev/vg01/lv001 /lvmtest
		 /etc/fstab file to mount it automatically when the system boots.
		# vi /etc/fstab
		/dev/vg01/lv001 /lvmtest xfs defaults 0 0
		Check the newly mounted FileSystem using the df command.
		# df -h /lvmtest
		
Understanding the /etc/fstab File in Linux:	
	Field-1 (/dev/sdb1): Disk Partition Name
		7 Methods To Identify Disk Partition/FileSystem UUID On Linux
		# blkid
		# lsblk -o name,mountpoint,size,uuid
		# ls -lh /dev/disk/by-uuid/
		# hwinfo --block | grep by-uuid | awk '{print $3,$7}'
		# udevadm info -q all -n /dev/sdc1 | grep -i by-uuid | head -1
		# tune2fs -l /dev/sdc1 | grep UUID
		# dumpe2fs /dev/sdc1 | grep UUID
	Field-2 (/home1): Mount Point Name
	Field-3 (ext4): Mounted filesystem type
		# df -khT
		# mount | grep "/dev"
		# cat /etc/fstab
		# fsck -N /dev/sda1
		# file -sL /dev/sda1
		# parted -l
		# lsblk -f
		# blkid /dev/sda1
		# cfdisk
	Field-4 (defaults): It specifies the mount options.
		Mount Options	Description
		defaults		It uses default options, which includes rw, suid, dev, exec, auto, nouser, and async.
		auto			File system will mount automatically at boot, or when the command ‘mount -a’ is issued.
		noauto			The filesystem is mounted only when you tell it to.
		exec			Allow the execution binaries that are on that partition (default).
		noexec			Do not allow binaries to be executed on the filesystem.
		ro				Mount the filesystem read only.
		rw				Mount the filesystem read-write.
		sync			I/O should be done synchronously.
		async			I/O should be done asynchronously.
	Field-5 (1): It indicates backup utility dump is enabled or not for the file system.
		 To determine which filesystems need to be backed up or dumped.
		 1: If 1, dump will make a backup.
		 0: If 0, dump will ignore the file system backup.
	Field-6 (2): It indicates the sequence of the file system checks
		which order the file systems should be checked. Possible entries are 0, 1, and 2.
		0: fsck check doesn’t performed on filesystems.
		1: It’s a highest priority and should be assigned to root file system.
		2: All other file systems you want to have checked should get a 2.
	If /etc/mtab file is lost or corrupted by accident, it can be regenerated by running the following command.
		$ sudo sh -c 'grep -v rootfs /proc/mounts > /etc/mtab' 
	
		
